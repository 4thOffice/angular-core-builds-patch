{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_PROV_DEF","NG_INJECTABLE_DEF","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","ngInjectableDef","ngInjectorDef","stringify","isArray","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","R3FactoryTarget","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOC_ID_DEF","ɵloc","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","ɵɵinject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","instructionState","lFrame","createLFrame","bindingsEnabled","elementExitFn","checkNoChangesMode","setCurrentDirectiveDef","currentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","hasActiveElementFlag","flag","selectedIndex","setActiveHostElement","elementIndex","executeElementExitFn","setSelectedIndex","activeDirectiveId","setElementExitFn","setActiveElementFlag","getActiveDirectiveId","incrementActiveDirectiveId","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","previousOrParentTNode","setPreviousOrParentTNode","_isParent","isParent","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","mode","getBindingRoot","bindingRootIndex","bindingStartIndex","getBindingIndex","bindingIndex","setBindingIndex","nextBindingIndex","incrementBindingIndex","count","setBindingRoot","getCurrentQueryIndex","currentQueryIndex","setCurrentQueryIndex","enterDI","newView","newLFrame","allocLFrame","RendererStyleFlags3","leaveDI","leaveView","enterView","elementDepthCount","currentNamespace","currentSanitizer","currentLFrame","childLFrame","child","parent","leaveViewProcessExit","getSelectedIndex","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","charCodeAt","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","NO_CHANGE","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","DEFAULT_BINDING_VALUE","DEFAULT_BINDING_INDEX","DEFAULT_TOTAL_SOURCES","DEFAULT_GUARD_MASK_VALUE","allocStylingMapArray","getConfig","hasConfig","allowDirectStyling","firstUpdatePass","allow","config","patchConfig","getProp","isSanitizationRequired","getPropConfig","getGuardMask","isHostBinding","getValuesCount","getTotalSources","getBindingValue","offset","getDefaultValue","setValue","getValue","getPropValuesStartPosition","startPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","MAP_DIRTY_VALUE","setMapValue","getMapValue","forceStylesAsString","hyphenateProps","str","keys","prop","propLabel","isHostStylingActive","directiveOrSourceId","stylingMapToString","isClassBased","attrValue","addItemToStylingMap","stylingMapArr","allowOverwrite","propAtIndex","applied","normalizeIntoStylingMap","bindingValue","newValues","normalizeProps","allValuesTrue","splitOnWhitespace","array","start","foundChar","selectClassBasedInputName","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","view","load","getComponentLViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","getConstant","resetPreOrderHookFlags","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstCreatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","hostTNode","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","getPrototypeOf","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","getUrlSanitizer","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentView","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","classes","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","_state","sourceIndex","classesBitMask","classesIndex","stylesBitMask","stylesIndex","lastDirectClassMap","lastDirectStyleMap","BIT_MASK_START_VALUE","INDEX_START_VALUE","getStylingState","VALUE_IS_EXTERNALLY_MODIFIED","STYLING_INDEX_FOR_MAP_BINDING","updateClassViaContext","forceUpdate","isMapBased","state","countIndex","updateBindingData","updateStyleViaContext","sanitizationRequired","counterIndex","hostBindingsMode","registerBinding","changed","renderHostBindingsAsStale","bindingsStart","valuesCount","itemsPerRow","found","valuesEnd","i_1","stylingMap","countId","totalSources","addNewSourceColumn","isBindingIndexValue","entriesPerRow","allocateNewContextEntry","addBindingIntoContext","totalBindingsPerEntry","bitIndex","setGuardMask","maskValue","setDefaultValue","insertOffset","syncContextInitialStyling","updateInitialStylingOnContext","initialStyling","hasInitialStyling","applyStylingViaContext","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","applyAllValues","getStylingMapsSyncFn","_activeStylingMapApplyFn","totalBindingsToVisit","mapsMode","valueApplied","defaultValue","valueAppliedWithinMap","writeStylingValueDirectly","initialValue","valueToApply","objectToClassName","setClassName","setStyleAttr","applyStylingValue","applyFn","findAndApplyMapValue","setStyle","nativeStyle","DashCase","style","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","createProxy","handler","g","Proxy","activateStylingMapFeature","setStylingMapsSyncFn","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","mapsLimit","recurseInnerMaps","checkValuesOnly","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","innerMode","resolveInnerMapMode","isValueAllowedToBeApplied","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","currentMode","doApplyValue","TStylingContextDebug","_isClassBased","buildConfig","enumerable","configurable","totalColumns","entries","templateBitMask","hostBindingsBitMask","bindingsStartPosition","sources","printSources","output","prefix","bindingsBySource","isDefaultColumn","getTypeFromColumn","binding","sort","entry","toUpperCase","repeat","tab","log","printTable","table","totalProps","Math","floor","tpl mask","generateBitString","host mask","leftPad","max","pad","times","NodeStylingDebug","_data","_sanitizer","_debugContext","overrideSanitizer","hasMapBindings","_convertMapBindingsToStylingMapArrays","_mapValues","set","ownKeys","getOwnPropertyDescriptor","k","limit","mockElement","mapFn","hasPropBindings","hasCollisions","hasTemplateBindings","hasHostBindings","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyBindings","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","setHostBindings","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","isComponent","addComponentLogic","setInputsFromAttrs","invokeDirectivesHostBindings","viewData","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localRefExtractor","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","hasDirectives","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","initializeInputAndOutputAliases","defs","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","cacheMatchingLocalNames","previousExpandoLength","directiveCount","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","initialInputData","privateName","inputsToStore","createLContainer","hostNative","isForViewContainerRef","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","renderInitialStyling","append","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","ShadowDom","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","tViewNodeChild","currentChild","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","tNodeType","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_cdRefInjectingView","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","lNode","lViewInAContainer","lViewFirstChildTNode","componentHost","currentProjectedNode","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","ngFactoryDef","metadata","compileFactory","injectFn","Pipe","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","provider","processProvider","processInjectorType","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","resolveProvider","computeDeps","providerDeps","staticError","useNew","multiProviderMixError","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","StaticInjector","_records","recursivelyProcessProviders","resolvedProvider","multiProvider","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","attrsIndex","localRefsIndex","tViewConsts","tContainerNode","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","ɵɵinvalidFactory","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","stylingProp","resolveStylePropValue","resolvedValue","ɵɵclassProp","updated","getClassesContext","getStylesContext","sanitizerToUse","applyStylingValueDirectly","getRenderer","stylingApply","ɵɵstyleMap","hasDirectiveInput","isHostStyling","updateDirectiveInputValue","ɵɵclassMap","classMapInternal","valueHasChanged","applyStylingMapDirectly","bindingValueContainsInitial","hasInitial","cachedValueIndex","cachedValue","writeToAttrDirectly","checkIfExternallyModified","cssText","removeStylingValues","isStylingMapArray","initialStyles","newValue","inputName","normalizeStylingDirectiveInputValue","forceClassesAsString","flushStyling","classesContext","stylesContext","styleSanitizer","resetStylingState","resetCurrentStyleSanitizer","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getContext","allocTStylingContext","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵproperty","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContext","getComponentAtNodeIndex","getContext$1","getViewComponent","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sortListeners","getDebugNode","debugNode","loadLContextFromNode","valueInLView","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","COMPILED","createRootComponentView","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","getSuperType","ɵɵInheritDefinitionFeature","definition","superType","superDef","writeableDef","maybeUnwrapEmpty","superHostBindings","inheritHostBindings","superViewQuery","superContentQueries","inheritViewQuery","inheritContentQueries","ngInherit","prevViewQuery","ctx","prevContentQueries","prevHostBindings","COPY_DIRECTIVE_FIELDS","COPY_COMPONENT_FIELDS","ɵɵCopyDefinitionFeature","defAny","COPY_DIRECTIVE_FIELDS_1","COPY_DIRECTIVE_FIELDS_1_1","field","COPY_COMPONENT_FIELDS_1","COPY_COMPONENT_FIELDS_1_1","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","lData","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","u","localeEn","plural","abs","LOCALE_DATA","findLocaleData","locale","normalizedLocale","normalizeLocale","getLocaleData","parentLocale","getLocalePluralCase","ɵLocaleDataIndex","PluralCase","common","locales","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","ngLocaleIdDef","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","exportedType","exportedScope","isModuleWithProviders","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","animations","interpolation","usesInheritance","addDirectiveDefToUndecoratedParents","hasSelectorScope","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","Directive","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","usesLifecycleHook","splitByComma","viewQueries","objPrototype","shouldAddAbstractDirective","isQueryAnn","queriesMeta","annotations_1","ann","isInputAnnotation","convertToR3QueryMetadata","propertyName","static","piece","LIFECYCLE_HOOKS","hookName","metadataName","compilePipe","ngPipeDef","getPipeMetadata","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","SWITCH_COMPILE_PIPE","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","Console_Factory","LOCALE_ID$1","TRANSLATIONS","TRANSLATIONS_FORMAT","trace","events","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","shouldCoalesceEventChangeDetection","hasPendingMacrotasks","hasPendingMicrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","lastRequestAnimationFrameId","nativeRequestAnimationFrame","getNativeRequestAnimationFrame","nativeCancelAnimationFrame","unpatchedRequestAnimationFrame","__symbol__","unpatchedCancelAnimationFrame","forkInnerZoneWithAngularBehavior","zone","maybeDelayChangeDetection","delayChangeDetectionForEvents","updateMicroTaskStatus","checkStable","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","_hasPendingMicrotasks","microTask","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","part","resourceLoader","ResourceLoader","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__POST_R3__","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneEventCoalescing","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","nativeNode","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","bindingIndexes","metadataParts","collectClassNames","debugElement","lowercaseTNodeAttrs","eAttrs","_classesProxy","element_1","contains","toggle","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","parentElement","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","getDebugNode$1","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","getGlobalLocale","$localize","ApplicationModule","ApplicationModule_Factory","selectorOrNode","ns","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵINJECTOR_SCOPE","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵregisterLocaleData","registerLocaleData","extraData","LocaleId","ExtraData","ɵunregisterLocaleData","unregisterAllLocaleData","ɵallowSanitizationBypassAndThrow","ɵgetSanitizationBypassType","ɵunwrapSafeValue","ɵdetectChanges","ɵrenderComponent","renderComponent$1","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMP_DEF","ɵNG_DIR_DEF","ɵNG_PIPE_DEF","ɵNG_MOD_DEF","ɵNG_PROV_DEF","ɵNG_INJ_DEF","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-rc.0+68.sha-e89c2dd.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ɵprov` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has a `ɵprov` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n     * inherited value.\n     *\n     * @param type A type which may have its own (non-inherited) `ɵprov`.\n     */\n    function getInjectableDef(type) {\n        var def = (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ɵprov's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n     *\n     * @param type A type which may have `ɵprov`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ɵprov` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        var def = type && (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n        if (def) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return def;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the injector def type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have an injector def (`ɵinj`)\n     */\n    function getInjectorDef(type) {\n        return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n            type[NG_INJ_DEF] :\n            null;\n    }\n    var NG_PROV_DEF = getClosureSafeProperty({ ɵprov: getClosureSafeProperty });\n    var NG_INJ_DEF = getClosureSafeProperty({ ɵinj: getClosureSafeProperty });\n    // We need to keep these around so we can read off old defs if new defs are unavailable\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (Array.isArray(token)) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n    var R3FactoryTarget;\n    (function (R3FactoryTarget) {\n        R3FactoryTarget[R3FactoryTarget[\"Directive\"] = 0] = \"Directive\";\n        R3FactoryTarget[R3FactoryTarget[\"Component\"] = 1] = \"Component\";\n        R3FactoryTarget[R3FactoryTarget[\"Injectable\"] = 2] = \"Injectable\";\n        R3FactoryTarget[R3FactoryTarget[\"Pipe\"] = 3] = \"Pipe\";\n        R3FactoryTarget[R3FactoryTarget[\"NgModule\"] = 4] = \"NgModule\";\n    })(R3FactoryTarget || (R3FactoryTarget = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\n    var NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\n    var NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\n    var NG_LOC_ID_DEF = getClosureSafeProperty({ ɵloc: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ɵprov = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ɵprov = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (Array.isArray(obj)) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThanOrEqual(actual, expected, msg) {\n        if (actual > expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstCreatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵcmp = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            decls: componentDefinition.decls,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            consts: componentDefinition.consts || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors || EMPTY_ARRAY,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ɵcmp;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵdir = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ɵpipe = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMP_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIR_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275fac' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MOD_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275mod' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOC_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var CLEANUP = 7;\n    var CONTEXT = 8;\n    var INJECTOR$1 = 9;\n    var RENDERER_FACTORY = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var CHILD_HEAD = 13;\n    var CHILD_TAIL = 14;\n    var DECLARATION_VIEW = 15;\n    var DECLARATION_LCONTAINER = 16;\n    var PREORDER_HOOK_FLAGS = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstCreatePass(tView, errMessage) {\n        assertEqual(tView.firstCreatePass, true, errMessage || 'Should only be called in first create pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        return obj instanceof NodeInjectorFactory;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var instructionState = {\n        lFrame: createLFrame(null),\n        bindingsEnabled: true,\n        elementExitFn: null,\n        checkNoChangesMode: false,\n    };\n    function getElementDepthCount() {\n        return instructionState.lFrame.elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount--;\n    }\n    function getCurrentDirectiveDef() {\n        return instructionState.lFrame.currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        instructionState.lFrame.currentDirectiveDef = def;\n    }\n    function getBindingsEnabled() {\n        return instructionState.bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        instructionState.bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        instructionState.bindingsEnabled = false;\n    }\n    /**\n     * Return the current LView.\n     *\n     * The return value can be `null` if the method is called outside of template. This can happen if\n     * directive is instantiated by module injector (rather than by node injector.)\n     */\n    function getLView() {\n        // TODO(misko): the return value should be `LView|null` but doing so breaks a lot of code.\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.lView;\n    }\n    /**\n     * Determines whether or not a flag is currently set for the active element.\n     */\n    function hasActiveElementFlag(flag) {\n        return (instructionState.lFrame.selectedIndex & flag) === flag;\n    }\n    /**\n     * Sets a flag is for the active element.\n     */\n    function setActiveElementFlag(flag) {\n        instructionState.lFrame.selectedIndex |= flag;\n    }\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n        instructionState.lFrame.activeDirectiveId = 0;\n    }\n    function executeElementExitFn() {\n        instructionState.elementExitFn();\n        instructionState.lFrame.selectedIndex &= ~1 /* RunExitFn */;\n    }\n    /**\n     * Queues a function to be run once the element is \"exited\" in CD.\n     *\n     * Change detection will focus on an element either when the `advance()`\n     * instruction is called or when the template or host bindings instruction\n     * code is invoked. The element is then \"exited\" when the next element is\n     * selected or when change detection for the template or host bindings is\n     * complete. When this occurs (the element change operation) then an exit\n     * function will be invoked if it has been set. This function can be used\n     * to assign that exit function.\n     *\n     * @param fn\n     */\n    function setElementExitFn(fn) {\n        setActiveElementFlag(1 /* RunExitFn */);\n        if (instructionState.elementExitFn == null) {\n            instructionState.elementExitFn = fn;\n        }\n        ngDevMode &&\n            assertEqual(instructionState.elementExitFn, fn, 'Expecting to always get the same function');\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return instructionState.lFrame.activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        // Each directive gets a uniqueId value that is the same for both\n        // create and update calls when the hostBindings function is called. The\n        // directive uniqueId is not set anywhere--it is just incremented between\n        // each hostBindings call and is useful for helping instruction code\n        // uniquely determine which directive is currently active when executed.\n        instructionState.lFrame.activeDirectiveId += 1;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        instructionState.lFrame.contextLView = viewToRestore;\n    }\n    function getPreviousOrParentTNode() {\n        return instructionState.lFrame.previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        instructionState.lFrame.previousOrParentTNode = tNode;\n        instructionState.lFrame.isParent = _isParent;\n    }\n    function getIsParent() {\n        return instructionState.lFrame.isParent;\n    }\n    function setIsNotParent() {\n        instructionState.lFrame.isParent = false;\n    }\n    function setIsParent() {\n        instructionState.lFrame.isParent = true;\n    }\n    function getContextLView() {\n        return instructionState.lFrame.contextLView;\n    }\n    function getCheckNoChangesMode() {\n        return instructionState.checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        instructionState.checkNoChangesMode = mode;\n    }\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingRootIndex;\n        if (index === -1) {\n            var lView = lFrame.lView;\n            index = lFrame.bindingRootIndex = lView[TVIEW].bindingStartIndex;\n        }\n        return index;\n    }\n    function getBindingIndex() {\n        return instructionState.lFrame.bindingIndex;\n    }\n    function setBindingIndex(value) {\n        return instructionState.lFrame.bindingIndex = value;\n    }\n    function nextBindingIndex() {\n        return instructionState.lFrame.bindingIndex++;\n    }\n    function incrementBindingIndex(count) {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingIndex;\n        lFrame.bindingIndex = lFrame.bindingIndex + count;\n        return index;\n    }\n    /**\n     * Set a new binding root index so that host template functions can execute.\n     *\n     * Bindings inside the host template are 0 index. But because we don't know ahead of time\n     * how many host bindings we have we can't pre-compute them. For this reason they are all\n     * 0 index and we just shift the root so that they match next available location in the LView.\n     * @param value\n     */\n    function setBindingRoot(value) {\n        instructionState.lFrame.bindingRootIndex = value;\n    }\n    function getCurrentQueryIndex() {\n        return instructionState.lFrame.currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        instructionState.lFrame.currentQueryIndex = value;\n    }\n    /**\n     * This is a light weight version of the `enterView` which is needed by the DI system.\n     * @param newView\n     * @param tNode\n     */\n    function enterDI(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.lView = newView;\n        if (ngDevMode) {\n            // resetting for safety in dev mode only.\n            newLFrame.isParent = DEV_MODE_VALUE;\n            newLFrame.selectedIndex = DEV_MODE_VALUE;\n            newLFrame.contextLView = DEV_MODE_VALUE;\n            newLFrame.elementDepthCount = DEV_MODE_VALUE;\n            newLFrame.currentNamespace = DEV_MODE_VALUE;\n            newLFrame.currentSanitizer = DEV_MODE_VALUE;\n            newLFrame.currentDirectiveDef = DEV_MODE_VALUE;\n            newLFrame.activeDirectiveId = DEV_MODE_VALUE;\n            newLFrame.bindingRootIndex = DEV_MODE_VALUE;\n            newLFrame.currentQueryIndex = DEV_MODE_VALUE;\n        }\n    }\n    var DEV_MODE_VALUE = 'Value indicating that DI is trying to read value which it should not need to know about.';\n    /**\n     * This is a light weight version of the `leaveView` which is needed by the DI system.\n     *\n     * Because the implementation is same it is only an alias\n     */\n    var leaveDI = leaveView;\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param tNode Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function enterView(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.isParent = true;\n        newLFrame.lView = newView;\n        newLFrame.selectedIndex = 0;\n        newLFrame.contextLView = newView;\n        newLFrame.elementDepthCount = 0;\n        newLFrame.currentNamespace = null;\n        newLFrame.currentSanitizer = null;\n        newLFrame.currentDirectiveDef = null;\n        newLFrame.activeDirectiveId = 0;\n        newLFrame.bindingRootIndex = -1;\n        newLFrame.bindingIndex = newView === null ? -1 : newView[TVIEW].bindingStartIndex;\n        newLFrame.currentQueryIndex = 0;\n    }\n    /**\n     * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.\n     */\n    function allocLFrame() {\n        var currentLFrame = instructionState.lFrame;\n        var childLFrame = currentLFrame === null ? null : currentLFrame.child;\n        var newLFrame = childLFrame === null ? createLFrame(currentLFrame) : childLFrame;\n        return newLFrame;\n    }\n    function createLFrame(parent) {\n        var lFrame = {\n            previousOrParentTNode: null,\n            isParent: true,\n            lView: null,\n            selectedIndex: 0,\n            contextLView: null,\n            elementDepthCount: 0,\n            currentNamespace: null,\n            currentSanitizer: null,\n            currentDirectiveDef: null,\n            activeDirectiveId: 0,\n            bindingRootIndex: -1,\n            bindingIndex: -1,\n            currentQueryIndex: 0,\n            parent: parent,\n            child: null,\n        };\n        parent !== null && (parent.child = lFrame); // link the new LFrame for reuse.\n        return lFrame;\n    }\n    function leaveViewProcessExit() {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        leaveView();\n    }\n    function leaveView() {\n        instructionState.lFrame = instructionState.lFrame.parent;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        instructionState.lFrame.contextLView = walkUpViews(level, instructionState.lFrame.contextLView);\n        return instructionState.lFrame.contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return instructionState.lFrame.selectedIndex >> 1 /* Size */;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        instructionState.lFrame.selectedIndex = index << 1 /* Size */;\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        instructionState.lFrame.currentNamespace = null;\n    }\n    function getNamespace() {\n        return instructionState.lFrame.currentNamespace;\n    }\n    function setCurrentStyleSanitizer(sanitizer) {\n        instructionState.lFrame.currentSanitizer = sanitizer;\n    }\n    function resetCurrentStyleSanitizer() {\n        setCurrentStyleSanitizer(null);\n    }\n    function getCurrentStyleSanitizer() {\n        // TODO(misko): This should throw when there is no LView, but it turns out we can get here from\n        // `NodeStyleDebug` hence we return `null`. This should be fixed\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer.setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    function isAnimationProp(name) {\n        // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n        // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n        // charCodeAt doesn't allocate memory to return a substring.\n        return name.charCodeAt(0) === 64; // @\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    var MAP_BASED_ENTRY_PROP_NAME = '[MAP]';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_BINDING_INDEX = 0;\n    var DEFAULT_TOTAL_SOURCES = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling, hasDirectives) {\n        initialStyling = initialStyling || allocStylingMapArray(null);\n        var config = 0 /* Initial */;\n        if (hasDirectives) {\n            config |= 1 /* HasDirectives */;\n        }\n        if (initialStyling.length > 1 /* ValuesStartPosition */) {\n            config |= 16 /* HasInitialStyling */;\n        }\n        return [\n            config,\n            DEFAULT_TOTAL_SOURCES,\n            initialStyling,\n        ];\n    }\n    function allocStylingMapArray(value) {\n        return [value];\n    }\n    function getConfig(context) {\n        return context[0 /* ConfigPosition */];\n    }\n    function hasConfig(context, flag) {\n        return (getConfig(context) & flag) !== 0;\n    }\n    /**\n     * Determines whether or not to apply styles/classes directly or via context resolution.\n     *\n     * There are three cases that are matched here:\n     * 1. there are no directives present AND `ngDevMode` is falsy\n     * 2. the `firstUpdatePass` has not already run (which means that\n     *    there are more bindings to register and, therefore, direct\n     *    style/class application is not yet possible)\n     * 3. There are no collisions (i.e. properties with more than one binding) across multiple\n     *    sources (i.e. template + directive, directive + directive, directive + component)\n     */\n    function allowDirectStyling(context, firstUpdatePass) {\n        var allow = false;\n        var config = getConfig(context);\n        var hasNoDirectives = (config & 1 /* HasDirectives */) === 0;\n        // if no directives are present then we do not need populate a context at all. This\n        // is because duplicate prop bindings cannot be registered through the template. If\n        // and when this happens we can safely apply the value directly without context\n        // resolution...\n        if (hasNoDirectives) {\n            // `ngDevMode` is required to be checked here because tests/debugging rely on the context being\n            // populated. If things are in production mode then there is no need to build a context\n            // therefore the direct apply can be allowed (even on the first update).\n            allow = ngDevMode ? !firstUpdatePass : true;\n        }\n        else if (!firstUpdatePass) {\n            var hasNoCollisions = (config & 8 /* HasCollisions */) === 0;\n            var hasOnlyMapsOrOnlyProps = (config & 6 /* HasPropAndMapBindings */) !== 6 /* HasPropAndMapBindings */;\n            allow = hasNoCollisions && hasOnlyMapsOrOnlyProps;\n        }\n        return allow;\n    }\n    function setConfig(context, value) {\n        context[0 /* ConfigPosition */] = value;\n    }\n    function patchConfig(context, flag) {\n        context[0 /* ConfigPosition */] |= flag;\n    }\n    function getProp(context, index) {\n        return context[index + 3 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) !==\n            0;\n    }\n    function getGuardMask(context, index, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        return context[position];\n    }\n    function setGuardMask(context, index, maskValue, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        context[position] = maskValue;\n    }\n    function getValuesCount(context) {\n        return getTotalSources(context) + 1;\n    }\n    function getTotalSources(context) {\n        return context[1 /* TotalSourcesPosition */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 4 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)];\n    }\n    function setDefaultValue(context, index, value) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)] =\n            value;\n    }\n    function setValue(data, bindingIndex, value) {\n        data[bindingIndex] = value;\n    }\n    function getValue(data, bindingIndex) {\n        return bindingIndex !== 0 ? data[bindingIndex] : null;\n    }\n    function getPropValuesStartPosition(context) {\n        var startPosition = 3 /* ValuesStartPosition */;\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            startPosition += 4 /* BindingsStartOffset */ + getValuesCount(context);\n        }\n        return startPosition;\n    }\n    function hasValueChanged(a, b) {\n        if (b === NO_CHANGE)\n            return false;\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[2 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) && value.length >= 3 /* ValuesStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function isStylingMapArray(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            (typeof value[1 /* ValuesStartPosition */] === 'string');\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    var MAP_DIRTY_VALUE = typeof ngDevMode !== 'undefined' && ngDevMode ? {} : { MAP_DIRTY_VALUE: true };\n    function setMapAsDirty(map) {\n        map[0 /* RawValuePosition */] = MAP_DIRTY_VALUE;\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles, hyphenateProps) {\n        if (typeof styles == 'string')\n            return styles;\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var propLabel = hyphenateProps ? hyphenate(prop) : prop;\n                var value = styles[prop];\n                if (value !== null) {\n                    str = concatString(str, propLabel + \":\" + value, ';');\n                }\n            }\n        }\n        return str;\n    }\n    function isHostStylingActive(directiveOrSourceId) {\n        return directiveOrSourceId !== TEMPLATE_DIRECTIVE_INDEX;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the `{key:value}` map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : allocStylingMapArray(null);\n        stylingMapArr[0 /* RawValuePosition */] = newValues;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            props = splitOnWhitespace(newValues);\n            allValuesTrue = props !== null;\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    function splitOnWhitespace(text) {\n        var array = null;\n        var length = text.length;\n        var start = 0;\n        var foundChar = false;\n        for (var i = 0; i < length; i++) {\n            var char = text.charCodeAt(i);\n            if (char <= 32 /*' '*/) {\n                if (foundChar) {\n                    if (array === null)\n                        array = [];\n                    array.push(text.substring(start, i));\n                    foundChar = false;\n                }\n                start = i + 1;\n            }\n            else {\n                foundChar = true;\n            }\n        }\n        if (foundChar) {\n            if (array === null)\n                array = [];\n            array.push(text.substring(start, length));\n            foundChar = false;\n        }\n        return array;\n    }\n    // TODO (matsko|AndrewKushnir): refactor this once we figure out how to generate separate\n    // `input('class') + classMap()` instructions.\n    function selectClassBasedInputName(inputs) {\n        return inputs.hasOwnProperty('class') ? 'class' : 'className';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentLViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /** Returns a constant from `TConstants` instance. */\n    function getConstant(consts, index) {\n        return consts === null || index == null ? null : consts[index];\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'expected firstCreatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstCreatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentIndex = getParentInjectorIndex(parentLoc);\n            var parentLView = getParentInjectorView(parentLoc, hostView);\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ɵcmp = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                enterDI(lView, tNode);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    leaveDI();\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lView, index, tNode) {\n        var value = lView[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            enterDI(lView, tNode);\n            try {\n                value = lView[index] = factory.factory(undefined, tData, lView, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                leaveDI();\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() || null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentLViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentLViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵcmp;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵdir;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentLViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        // we lowercase the class attribute value to be able to match\n        // selectors without case-sensitivity\n        // (selectors are already in lowercase when generated)\n        var matchIndex = nodeClassAttrVal.toLowerCase().indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    // these values will get filled in the very first time this is accessed...\n    var _state = {\n        element: null,\n        directiveIndex: -1,\n        sourceIndex: -1,\n        classesBitMask: -1,\n        classesIndex: -1,\n        stylesBitMask: -1,\n        stylesIndex: -1,\n        lastDirectClassMap: null,\n        lastDirectStyleMap: null,\n    };\n    var BIT_MASK_START_VALUE = 0;\n    // the `0` start value is reserved for [map]-based entries\n    var INDEX_START_VALUE = 1;\n    /**\n     * Returns (or instantiates) the styling state for the given element.\n     *\n     * Styling state is accessed and processed each time a style or class binding\n     * is evaluated.\n     *\n     * If and when the provided `element` doesn't match the current element in the\n     * state then this means that styling was recently cleared or the element has\n     * changed in change detection. In both cases the styling state is fully reset.\n     *\n     * If and when the provided `directiveIndex` doesn't match the current directive\n     * index in the state then this means that a new source has introduced itself into\n     * the styling code (or, in other words, another directive or component has started\n     * to apply its styling host bindings to the element).\n     */\n    function getStylingState(element, directiveIndex) {\n        if (_state.element !== element) {\n            _state.element = element;\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex = directiveIndex === TEMPLATE_DIRECTIVE_INDEX ? 0 : 1;\n            _state.classesBitMask = BIT_MASK_START_VALUE;\n            _state.classesIndex = INDEX_START_VALUE;\n            _state.stylesBitMask = BIT_MASK_START_VALUE;\n            _state.stylesIndex = INDEX_START_VALUE;\n            _state.lastDirectClassMap = null;\n            _state.lastDirectStyleMap = null;\n        }\n        else if (_state.directiveIndex !== directiveIndex) {\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex++;\n        }\n        return _state;\n    }\n    /**\n     * Clears the styling state so that it can be used by another element's styling code.\n     */\n    function resetStylingState() {\n        _state.element = null;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    var VALUE_IS_EXTERNALLY_MODIFIED = {};\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, forceUpdate, firstUpdatePass) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngClass])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding even if things change after the first update pass.\n        if (firstUpdatePass || value !== NO_CHANGE) {\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, false, firstUpdatePass);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular CSS class need to be\n                // applied again because on or more of the bindings for the CSS\n                // class have changed.\n                state.classesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, sanitizer, forceUpdate, firstUpdatePass) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngStyle])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding even if things change after the first update pass.\n        if (firstUpdatePass || value !== NO_CHANGE) {\n            var sanitizationRequired = isMapBased ?\n                true :\n                (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired, firstUpdatePass);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular property need to be\n                // applied again because on or more of the bindings for the CSS\n                // property have changed.\n                state.stylesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired, firstUpdatePass) {\n        var hostBindingsMode = isHostStylingActive(sourceIndex);\n        if (firstUpdatePass) {\n            // this will only happen during the first update pass of the\n            // context. The reason why we can't use `tView.firstCreatePass`\n            // here is because its not guaranteed to be true when the first\n            // update pass is executed (remember that all styling instructions\n            // are run in the update phase, and, as a result, are no more\n            // styling instructions that are run in the creation phase).\n            registerBinding(context, counterIndex, sourceIndex, prop, bindingIndex, sanitizationRequired);\n            patchConfig(context, hostBindingsMode ? 64 /* HasHostBindings */ : 32 /* HasTemplateBindings */);\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            setValue(data, bindingIndex, value);\n            var doSetValuesAsStale = (getConfig(context) & 64 /* HasHostBindings */) &&\n                !hostBindingsMode && (prop ? !value : true);\n            if (doSetValuesAsStale) {\n                renderHostBindingsAsStale(context, data, prop);\n            }\n        }\n        return changed;\n    }\n    /**\n     * Iterates over all host-binding values for the given `prop` value in the context and sets their\n     * corresponding binding values to `null`.\n     *\n     * Whenever a template binding changes its value to `null`, all host-binding values should be\n     * re-applied\n     * to the element when the host bindings are evaluated. This may not always happen in the event\n     * that none of the bindings changed within the host bindings code. For this reason this function\n     * is expected to be called each time a template binding becomes falsy or when a map-based template\n     * binding changes.\n     */\n    function renderHostBindingsAsStale(context, data, prop) {\n        var valuesCount = getValuesCount(context);\n        if (prop !== null && hasConfig(context, 2 /* HasPropBindings */)) {\n            var itemsPerRow = 4 /* BindingsStartOffset */ + valuesCount;\n            var i = 3 /* ValuesStartPosition */;\n            var found = false;\n            while (i < context.length) {\n                if (getProp(context, i) === prop) {\n                    found = true;\n                    break;\n                }\n                i += itemsPerRow;\n            }\n            if (found) {\n                var bindingsStart = i + 4 /* BindingsStartOffset */;\n                var valuesStart = bindingsStart + 1; // the first column is template bindings\n                var valuesEnd = bindingsStart + valuesCount - 1;\n                for (var i_1 = valuesStart; i_1 < valuesEnd; i_1++) {\n                    var bindingIndex = context[i_1];\n                    if (bindingIndex !== 0) {\n                        setValue(data, bindingIndex, null);\n                    }\n                }\n            }\n        }\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            var bindingsStart = 3 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */;\n            var valuesStart = bindingsStart + 1; // the first column is template bindings\n            var valuesEnd = bindingsStart + valuesCount - 1;\n            for (var i = valuesStart; i < valuesEnd; i++) {\n                var stylingMap = getValue(data, context[i]);\n                if (stylingMap) {\n                    setMapAsDirty(stylingMap);\n                }\n            }\n        }\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, their property name value is set as `[MAP]`.\n     */\n    function registerBinding(context, countId, sourceIndex, prop, bindingValue, sanitizationRequired) {\n        var found = false;\n        prop = prop || MAP_BASED_ENTRY_PROP_NAME;\n        var totalSources = getTotalSources(context);\n        // if a new source is detected then a new column needs to be allocated into\n        // the styling context. The column is basically a new allocation of binding\n        // sources that will be available to each property.\n        while (totalSources <= sourceIndex) {\n            addNewSourceColumn(context);\n            totalSources++;\n        }\n        var isBindingIndexValue = typeof bindingValue === 'number';\n        var entriesPerRow = 4 /* BindingsStartOffset */ + getValuesCount(context);\n        var i = 3 /* ValuesStartPosition */;\n        // all style/class bindings are sorted by property name\n        while (i < context.length) {\n            var p = getProp(context, i);\n            if (prop <= p) {\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                }\n                else if (isBindingIndexValue) {\n                    patchConfig(context, 8 /* HasCollisions */);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n                found = true;\n                break;\n            }\n            i += entriesPerRow;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n            addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n        }\n    }\n    /**\n     * Inserts a new row into the provided `TStylingContext` and assigns the provided `prop` value as\n     * the property entry.\n     */\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, // 1) config value\n        DEFAULT_GUARD_MASK_VALUE, // 2) template bit mask\n        DEFAULT_GUARD_MASK_VALUE, // 3) host bindings bit mask\n        prop);\n        index += 4; // the 4 values above\n        // 5...) default binding index for the template value\n        // depending on how many sources already exist in the context,\n        // multiple default index entries may need to be inserted for\n        // the new value in the context.\n        var totalBindingsPerEntry = getTotalSources(context);\n        for (var i = 0; i < totalBindingsPerEntry; i++) {\n            context.splice(index, 0, DEFAULT_BINDING_INDEX);\n            index++;\n        }\n        // 6) default binding value for the new entry\n        context.splice(index, 0, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, bitIndex, sourceIndex) {\n        if (typeof bindingValue === 'number') {\n            var hostBindingsMode = isHostStylingActive(sourceIndex);\n            var cellIndex = index + 4 /* BindingsStartOffset */ + sourceIndex;\n            context[cellIndex] = bindingValue;\n            var updatedBitMask = getGuardMask(context, index, hostBindingsMode) | (1 << bitIndex);\n            setGuardMask(context, index, updatedBitMask, hostBindingsMode);\n        }\n        else if (bindingValue !== null && getDefaultValue(context, index) === null) {\n            setDefaultValue(context, index, bindingValue);\n        }\n    }\n    /**\n     * Registers a new column into the provided `TStylingContext`.\n     *\n     * If and when a new source is detected then a new column needs to\n     * be allocated into the styling context. The column is basically\n     * a new allocation of binding sources that will be available to each\n     * property.\n     *\n     * Each column that exists in the styling context resembles a styling\n     * source. A styling source an either be the template or one or more\n     * components or directives all containing styling host bindings.\n     */\n    function addNewSourceColumn(context) {\n        // we use -1 here because we want to insert right before the last value (the default value)\n        var insertOffset = 4 /* BindingsStartOffset */ + getValuesCount(context) - 1;\n        var index = 3 /* ValuesStartPosition */;\n        while (index < context.length) {\n            index += insertOffset;\n            context.splice(index++, 0, DEFAULT_BINDING_INDEX);\n            // the value was inserted just before the default value, but the\n            // next entry in the context starts just after it. Therefore++.\n            index++;\n        }\n        context[1 /* TotalSourcesPosition */]++;\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the internal `stylingApply` function (which is scheduled to run at the very\n     * end of change detection for an element if one or more style/class bindings\n     * were processed) and will rely on any state values that are set from when\n     * any of the styling bindings executed.\n     *\n     * This function is designed to be called twice: one when change detection has\n     * processed an element within the template bindings (i.e. just as `advance()`\n     * is called) and when host bindings have been processed. In both cases the\n     * styles and classes in both contexts will be applied to the element, but the\n     * algorithm will selectively decide which bindings to run depending on the\n     * columns in the context. The provided `directiveIndex` value will help the\n     * algorithm determine which bindings to apply: either the template bindings or\n     * the host bindings (see `applyStylingToElement` for more information).\n     *\n     * Note that once this function is called all temporary styling state data\n     * (i.e. the `bitMask` and `counter` values for styles and classes will be cleared).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer, firstUpdatePass) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var state = getStylingState(element, directiveIndex);\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        if (stylesContext) {\n            firstUpdatePass && syncContextInitialStyling(stylesContext);\n            if (state.stylesBitMask !== 0) {\n                applyStylingViaContext(stylesContext, renderer, element, data, state.stylesBitMask, setStyle, styleSanitizer, hostBindingsMode);\n            }\n        }\n        if (classesContext) {\n            firstUpdatePass && syncContextInitialStyling(classesContext);\n            if (state.classesBitMask !== 0) {\n                applyStylingViaContext(classesContext, renderer, element, data, state.classesBitMask, setClass, null, hostBindingsMode);\n            }\n        }\n        resetStylingState();\n    }\n    /**\n     * Registers all static styling values into the context as default values.\n     *\n     * Static styles are stored on the `tNode.styles` and `tNode.classes`\n     * properties as instances of `StylingMapArray`. When an instance of\n     * `TStylingContext` is assigned to `tNode.styles` and `tNode.classes`\n     * then the existing initial styling values are copied into the the\n     * `InitialStylingValuePosition` slot.\n     *\n     * Because all static styles/classes are collected and registered on\n     * the initial styling array each time a directive is instantiated,\n     * the context may not yet know about the static values. When this\n     * function is called it will copy over all the static style/class\n     * values from the initial styling array into the context as default\n     * values for each of the matching entries in the context.\n     *\n     * Let's imagine the following example:\n     *\n     * ```html\n     * <div style=\"color:red\"\n     *     [style.color]=\"myColor\"\n     *     dir-that-has-static-height>\n     *   ...\n     * </div>\n     * ```\n     *\n     * When the code above is processed, the underlying element/styling\n     * instructions will create an instance of `TStylingContext` for\n     * the `tNode.styles` property. Here's what that looks like:\n     *\n     * ```typescript\n     * tNode.styles = [\n     *   // ...\n     *   // initial styles\n     *   ['color:red; height:200px', 'color', 'red', 'height', '200px'],\n     *\n     *   0, 0b1, 0b0, 'color', 20, null, // [style.color] binding\n     * ]\n     * ```\n     *\n     * After this function is called it will balance out the context with\n     * the static `color` and `height` values and set them as defaults within\n     * the context:\n     *\n     * ```typescript\n     * tNode.styles = [\n     *   // ...\n     *   // initial styles\n     *   ['color:red; height:200px', 'color', 'red', 'height', '200px'],\n     *\n     *   0, 0b1, 0b0, 'color', 20, 'red',\n     *   0, 0b0, 0b0, 'height', 0, '200px',\n     * ]\n     * ```\n     */\n    function syncContextInitialStyling(context) {\n        // the TStylingContext always has initial style/class values which are\n        // stored in styling array format.\n        updateInitialStylingOnContext(context, getStylingMapArray(context));\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a apart\n        // of a binding (since it's static)\n        var COUNT_ID_FOR_STYLING = -1;\n        var hasInitialStyling = false;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, COUNT_ID_FOR_STYLING, 0, prop, value, false);\n                hasInitialStyling = true;\n            }\n        }\n        if (hasInitialStyling) {\n            patchConfig(context, 16 /* HasInitialStyling */);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * the `flushStyling` function so that it can call this function for both\n     * the styles and classes contexts).\n     */\n    function applyStylingViaContext(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer, hostBindingsMode) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = null;\n        var applyAllValues = false;\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            stylingMapsSyncFn = getStylingMapsSyncFn();\n            var mapsGuardMask = getGuardMask(context, 3 /* ValuesStartPosition */, hostBindingsMode);\n            applyAllValues = (bitMask & mapsGuardMask) !== 0;\n        }\n        var valuesCount = getValuesCount(context);\n        var totalBindingsToVisit = 1;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        if (hostBindingsMode) {\n            mapsMode |= 8 /* RecurseInnerMaps */;\n            totalBindingsToVisit = valuesCount - 1;\n        }\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var guardMask = getGuardMask(context, i, hostBindingsMode);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var defaultValue = getDefaultValue(context, i);\n                // Part 1: Visit the `[styling.prop]` value\n                for (var j = 0; j < totalBindingsToVisit; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    if (!valueApplied && bindingIndex !== 0) {\n                        var value = getValue(bindingData, bindingIndex);\n                        if (isStylingValueDefined(value)) {\n                            var checkValueOnly = hostBindingsMode && j === 0;\n                            if (!checkValueOnly) {\n                                var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                                    sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                                    unwrapSafeValue(value);\n                                applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                            }\n                            valueApplied = true;\n                        }\n                    }\n                    // Part 2: Visit the `[style]` or `[class]` map-based value\n                    if (stylingMapsSyncFn) {\n                        // determine whether or not to apply the target property or to skip it\n                        var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                            2 /* ApplyTargetProp */);\n                        // the first column in the context (when `j == 0`) is special-cased for\n                        // template bindings. If and when host bindings are being processed then\n                        // the first column will still be iterated over, but the values will only\n                        // be checked against (not applied). If and when this happens we need to\n                        // notify the map-based syncing code to know not to apply the values it\n                        // comes across in the very first map-based binding (which is also located\n                        // in column zero).\n                        if (hostBindingsMode && j === 0) {\n                            mode |= 16 /* CheckValuesOnly */;\n                        }\n                        var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, j, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                        valueApplied = valueApplied || valueAppliedWithinMap;\n                    }\n                }\n                // Part 3: apply the default value (e.g. `<div style=\"width:200\">` => `200px` gets applied)\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 4 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            if (hostBindingsMode) {\n                mapsMode |= 16 /* CheckValuesOnly */;\n            }\n            stylingMapsSyncFn(context, renderer, element, bindingData, 0, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    /**\n     * Applies the provided styling map to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has three different cases that can occur (for each item in the map):\n     *\n     * - Case 1: Attempt to apply the current value in the map to the element (if it's `non null`).\n     *\n     * - Case 2: If a map value fails to be applied then the algorithm will find a matching entry in\n     *           the initial values present in the context and attempt to apply that.\n     *\n     * - Default Case: If the initial value cannot be applied then a default value of `null` will be\n     *                 applied (which will remove the style/class value from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the styling map was applied to the element.\n     */\n    function applyStylingMapDirectly(renderer, context, element, data, bindingIndex, value, isClassBased, sanitizer, forceUpdate, bindingValueContainsInitial) {\n        var oldValue = getValue(data, bindingIndex);\n        if (forceUpdate || hasValueChanged(oldValue, value)) {\n            var config = getConfig(context);\n            var hasInitial = config & 16 /* HasInitialStyling */;\n            var initialValue = hasInitial && !bindingValueContainsInitial ? getInitialStylingValue(context) : null;\n            setValue(data, bindingIndex, value);\n            // the cached value is the last snapshot of the style or class\n            // attribute value and is used in the if statement below to\n            // keep track of internal/external changes.\n            var cachedValueIndex = bindingIndex + 1;\n            var cachedValue = getValue(data, cachedValueIndex);\n            if (cachedValue === NO_CHANGE) {\n                cachedValue = initialValue;\n            }\n            cachedValue = typeof cachedValue !== 'string' ? '' : cachedValue;\n            // If a class/style value was modified externally then the styling\n            // fast pass cannot guarantee that the external values are retained.\n            // When this happens, the algorithm will bail out and not write to\n            // the style or className attribute directly.\n            var writeToAttrDirectly = !(config & 2 /* HasPropBindings */);\n            if (writeToAttrDirectly &&\n                checkIfExternallyModified(element, cachedValue, isClassBased)) {\n                writeToAttrDirectly = false;\n                if (oldValue !== VALUE_IS_EXTERNALLY_MODIFIED) {\n                    // direct styling will reset the attribute entirely each time,\n                    // and, for this reason, if the algorithm decides it cannot\n                    // write to the class/style attributes directly then it must\n                    // reset all the previous style/class values before it starts\n                    // to apply values in the non-direct way.\n                    removeStylingValues(renderer, element, oldValue, isClassBased);\n                    // this will instruct the algorithm not to apply class or style\n                    // values directly anymore.\n                    setValue(data, cachedValueIndex, VALUE_IS_EXTERNALLY_MODIFIED);\n                }\n            }\n            if (writeToAttrDirectly) {\n                var initialValue_1 = hasInitial && !bindingValueContainsInitial ? getInitialStylingValue(context) : null;\n                var valueToApply = writeStylingValueDirectly(renderer, element, value, isClassBased, initialValue_1);\n                setValue(data, cachedValueIndex, valueToApply || null);\n            }\n            else {\n                var applyFn = isClassBased ? setClass : setStyle;\n                var map = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n                var initialStyles = hasInitial ? getStylingMapArray(context) : null;\n                for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                    var prop = getMapProp(map, i);\n                    var value_1 = getMapValue(map, i);\n                    // case 1: apply the map value (if it exists)\n                    var applied = applyStylingValue(renderer, element, prop, value_1, applyFn, bindingIndex, sanitizer);\n                    // case 2: apply the initial value (if it exists)\n                    if (!applied && initialStyles) {\n                        applied = findAndApplyMapValue(renderer, element, applyFn, initialStyles, prop, bindingIndex, sanitizer);\n                    }\n                    // default case: apply `null` to remove the value\n                    if (!applied) {\n                        applyFn(renderer, element, prop, null, bindingIndex);\n                    }\n                }\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                if (isClassBased) {\n                    state.lastDirectClassMap = map;\n                }\n                else {\n                    state.lastDirectStyleMap = map;\n                }\n            }\n        }\n    }\n    function writeStylingValueDirectly(renderer, element, value, isClassBased, initialValue) {\n        var valueToApply;\n        if (isClassBased) {\n            valueToApply = typeof value === 'string' ? value : objectToClassName(value);\n            if (initialValue !== null) {\n                valueToApply = concatString(initialValue, valueToApply, ' ');\n            }\n            setClassName(renderer, element, valueToApply);\n        }\n        else {\n            valueToApply = forceStylesAsString(value, true);\n            if (initialValue !== null) {\n                valueToApply = initialValue + ';' + valueToApply;\n            }\n            setStyleAttr(renderer, element, valueToApply);\n        }\n        return valueToApply;\n    }\n    /**\n     * Applies the provided styling prop/value to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has four different cases that can occur:\n     *\n     * - Case 1: Apply the provided prop/value (style or class) entry to the element\n     *           (if it is `non null`).\n     *\n     * - Case 2: If value does not get applied (because its `null` or `undefined`) then the algorithm\n     *           will check to see if a styling map value was applied to the element as well just\n     *           before this (via `styleMap` or `classMap`). If and when a map is present then the\n      *          algorithm will find the matching property in the map and apply its value.\n      *\n     * - Case 3: If a map value fails to be applied then the algorithm will check to see if there\n     *           are any initial values present and attempt to apply a matching value based on\n     *           the target prop.\n     *\n     * - Default Case: If a matching initial value cannot be applied then a default value\n     *                 of `null` will be applied (which will remove the style/class value\n     *                 from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the prop/value styling was applied to the element.\n     */\n    function applyStylingValueDirectly(renderer, context, element, data, bindingIndex, prop, value, isClassBased, sanitizer) {\n        var applied = false;\n        if (hasValueChanged(data[bindingIndex], value)) {\n            setValue(data, bindingIndex, value);\n            var applyFn = isClassBased ? setClass : setStyle;\n            // case 1: apply the provided value (if it exists)\n            applied = applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer);\n            // case 2: find the matching property in a styling map and apply the detected value\n            if (!applied && hasConfig(context, 4 /* HasMapBindings */)) {\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                var map = isClassBased ? state.lastDirectClassMap : state.lastDirectStyleMap;\n                applied = map ?\n                    findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) :\n                    false;\n            }\n            // case 3: apply the initial value (if it exists)\n            if (!applied && hasConfig(context, 16 /* HasInitialStyling */)) {\n                var map = getStylingMapArray(context);\n                applied =\n                    map ? findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex) : false;\n            }\n            // default case: apply `null` to remove the value\n            if (!applied) {\n                applyFn(renderer, element, prop, null, bindingIndex);\n            }\n        }\n        return applied;\n    }\n    function applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer) {\n        var valueToApply = unwrapSafeValue(value);\n        if (isStylingValueDefined(valueToApply)) {\n            valueToApply =\n                sanitizer ? sanitizer(prop, value, 3 /* ValidateAndSanitize */) : valueToApply;\n            applyFn(renderer, element, prop, valueToApply, bindingIndex);\n            return true;\n        }\n        return false;\n    }\n    function findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) {\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var p = getMapProp(map, i);\n            if (p === prop) {\n                var valueToApply = getMapValue(map, i);\n                valueToApply = sanitizer ?\n                    sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                    valueToApply;\n                applyFn(renderer, element, prop, valueToApply, bindingIndex);\n                return true;\n            }\n            if (p > prop) {\n                break;\n            }\n        }\n        return false;\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        if (renderer !== null) {\n            // Use `isStylingValueDefined` to account for falsy values that should be bound like 0.\n            if (isStylingValueDefined(value)) {\n                // opacity, z-index and flexbox all have number values\n                // and these need to be converted into strings so that\n                // they can be assigned properly.\n                value = value.toString();\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    // The reason why native style may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.setProperty(prop, value);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.removeProperty(prop);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (renderer !== null && className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(native, className);\n                }\n                else {\n                    // the reason why classList may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.add(className);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeClass(native, className);\n                }\n                else {\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.remove(className);\n                    }\n                }\n            }\n        }\n    };\n    var setClassName = function (renderer, native, className) {\n        if (renderer !== null) {\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(native, 'class', className);\n            }\n            else {\n                native.className = className;\n            }\n        }\n    };\n    var setStyleAttr = function (renderer, native, value) {\n        if (renderer !== null) {\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(native, 'style', value);\n            }\n            else {\n                native.setAttribute('style', value);\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    function objectToClassName(obj) {\n        var str = '';\n        if (obj) {\n            for (var key in obj) {\n                var value = obj[key];\n                if (value) {\n                    str += (str.length ? ' ' : '') + key;\n                }\n            }\n        }\n        return str;\n    }\n    /**\n     * Determines whether or not an element style/className value has changed since the last update.\n     *\n     * This function helps Angular determine if a style or class attribute value was\n     * modified by an external plugin or API outside of the style binding code. This\n     * means any JS code that adds/removes class/style values on an element outside\n     * of Angular's styling binding algorithm.\n     *\n     * @returns true when the value was modified externally.\n     */\n    function checkIfExternallyModified(element, cachedValue, isClassBased) {\n        // this means it was checked before and there is no reason\n        // to compare the style/class values again. Either that or\n        // web workers are being used.\n        if (_global.Node === 'undefined' || cachedValue === VALUE_IS_EXTERNALLY_MODIFIED)\n            return true;\n        // comparing the DOM value against the cached value is the best way to\n        // see if something has changed.\n        var currentValue = (isClassBased ? element.className : (element.style && element.style.cssText)) || '';\n        return currentValue !== (cachedValue || '');\n    }\n    /**\n     * Removes provided styling values from the element\n     */\n    function removeStylingValues(renderer, element, values, isClassBased) {\n        var arr;\n        if (isStylingMapArray(values)) {\n            arr = values;\n        }\n        else {\n            arr = normalizeIntoStylingMap(null, values, !isClassBased);\n        }\n        var applyFn = isClassBased ? setClass : setStyle;\n        for (var i = 1 /* ValuesStartPosition */; i < arr.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(arr, i);\n            if (value) {\n                var prop = getMapProp(arr, i);\n                applyFn(renderer, element, prop, false);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an instance of a `Proxy` and creates with an empty target object and binds it to the\n     * provided handler.\n     *\n     * The reason why this function exists is because IE doesn't support\n     * the `Proxy` class. For this reason an error must be thrown.\n     */\n    function createProxy(handler) {\n        var g = _global;\n        if (!g.Proxy) {\n            throw new Error('Proxy is not supported in this browser');\n        }\n        return new g.Proxy({}, handler);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `advance(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, sourceIndex, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & 1 /* ApplyAllValues */) === 0) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, sourceIndex, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var totalMaps = getValuesCount(context) - 1; // maps have no default value\n        var mapsLimit = totalMaps - 1;\n        var recurseInnerMaps = currentMapIndex < mapsLimit && (mode & 8 /* RecurseInnerMaps */) !== 0;\n        var checkValuesOnly = (mode & 16 /* CheckValuesOnly */) !== 0;\n        if (checkValuesOnly) {\n            // inner modes do not check values ever (that can only happen\n            // when sourceIndex === 0)\n            mode &= ~16 /* CheckValuesOnly */;\n        }\n        var targetPropValueWasApplied = false;\n        if (currentMapIndex <= mapsLimit) {\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            var bindingIndex = getBindingValue(context, 3 /* ValuesStartPosition */, currentMapIndex);\n            var stylingMapArr = getValue(data, bindingIndex);\n            if (stylingMapArr) {\n                while (cursor < stylingMapArr.length) {\n                    var prop = getMapProp(stylingMapArr, cursor);\n                    var iteratedTooFar = targetProp && prop > targetProp;\n                    var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                    var value = getMapValue(stylingMapArr, cursor);\n                    var valueIsDefined = isStylingValueDefined(value);\n                    // the recursive code is designed to keep applying until\n                    // it reaches or goes past the target prop. If and when\n                    // this happens then it will stop processing values, but\n                    // all other map values must also catch up to the same\n                    // point. This is why a recursive call is still issued\n                    // even if the code has iterated too far.\n                    var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                    var innerProp = iteratedTooFar ? targetProp : prop;\n                    var valueApplied = recurseInnerMaps ?\n                        innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue) :\n                        false;\n                    if (iteratedTooFar) {\n                        if (!targetPropValueWasApplied) {\n                            targetPropValueWasApplied = valueApplied;\n                        }\n                        break;\n                    }\n                    if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                        valueApplied = true;\n                        if (!checkValuesOnly) {\n                            var useDefault = isTargetPropMatched && !valueIsDefined;\n                            var bindingIndexToApply = isTargetPropMatched ? bindingIndex : null;\n                            var finalValue = void 0;\n                            if (useDefault) {\n                                finalValue = defaultValue;\n                            }\n                            else {\n                                finalValue = sanitizer ?\n                                    sanitizer(prop, value, 3 /* ValidateAndSanitize */) :\n                                    (value ? unwrapSafeValue(value) : null);\n                            }\n                            applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                        }\n                    }\n                    targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                    cursor += 2 /* TupleSize */;\n                }\n                setCurrentSyncCursor(currentMapIndex, cursor);\n                // this is a fallback case in the event that the styling map is `null` for this\n                // binding but there are other map-based bindings that need to be evaluated\n                // afterwards. If the `prop` value is falsy then the intention is to cycle\n                // through all of the properties in the remaining maps as well. If the current\n                // styling map is too short then there are no values to iterate over. In either\n                // case the follow-up maps need to be iterated over.\n                if (recurseInnerMaps &&\n                    (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp)) {\n                    targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n                }\n            }\n            else if (recurseInnerMaps) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map\n     *   (i.e. the `SkipTargetProp` flag is set)\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *   (i.e. the `SkipTargetProp` flag is unset)\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isTargetPropMatched) {\n        var innerMode = currentMode;\n        // the statements below figures out whether or not an inner styling map\n        // is allowed to apply its value or not. The main thing to keep note\n        // of is that if the target prop isn't matched then its expected that\n        // all values before it are allowed to be applied so long as \"apply all values\"\n        // is set to true.\n        var applyAllValues = currentMode & 1 /* ApplyAllValues */;\n        var applyTargetProp = currentMode & 2 /* ApplyTargetProp */;\n        var allowInnerApply = !valueIsDefined && (isTargetPropMatched ? applyTargetProp : applyAllValues);\n        if (allowInnerApply) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) !== 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context\n     */\n    function attachStylingDebugObject(context, isClassBased) {\n        var debug = new TStylingContextDebug(context, isClassBased);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context, _isClassBased) {\n            this.context = context;\n            this._isClassBased = _isClassBased;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `DebugStylingContextEntry`.\n             */\n            get: function () {\n                var context = this.context;\n                var totalColumns = getValuesCount(context);\n                var entries = {};\n                var start = getPropValuesStartPosition(context);\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp(context, i);\n                    var templateBitMask = getGuardMask(context, i, false);\n                    var hostBindingsBitMask = getGuardMask(context, i, true);\n                    var defaultValue = getDefaultValue(context, i);\n                    var sanitizationRequired = isSanitizationRequired(context, i);\n                    var bindingsStartPosition = i + 4 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < totalColumns; j++) {\n                        var bindingIndex = context[bindingsStartPosition + j];\n                        if (bindingIndex !== 0) {\n                            sources.push(bindingIndex);\n                        }\n                    }\n                    entries[prop] = {\n                        prop: prop,\n                        templateBitMask: templateBitMask,\n                        hostBindingsBitMask: hostBindingsBitMask,\n                        sanitizationRequired: sanitizationRequired,\n                        valuesCount: sources.length, defaultValue: defaultValue, sources: sources,\n                    };\n                    i += 4 /* BindingsStartOffset */ + totalColumns;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Prints a detailed summary of each styling source grouped together with each binding index in\n         * the context.\n         */\n        TStylingContextDebug.prototype.printSources = function () {\n            var output = '\\n';\n            var context = this.context;\n            var prefix = this._isClassBased ? 'class' : 'style';\n            var bindingsBySource = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            for (var i = 0; i < totalColumns; i++) {\n                var isDefaultColumn = i === totalColumns - 1;\n                var hostBindingsMode = i !== TEMPLATE_DIRECTIVE_INDEX;\n                var type = getTypeFromColumn(i, totalColumns);\n                var entries = [];\n                var j = 3 /* ValuesStartPosition */;\n                while (j < context.length) {\n                    var value = getBindingValue(context, j, i);\n                    if (isDefaultColumn || value > 0) {\n                        var bitMask = getGuardMask(context, j, hostBindingsMode);\n                        var bindingIndex = isDefaultColumn ? -1 : value;\n                        var prop = getProp(context, j);\n                        var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                        var binding = \"\" + prefix + (isMapBased ? '' : '.' + prop);\n                        entries.push({ binding: binding, value: value, bindingIndex: bindingIndex, bitMask: bitMask });\n                    }\n                    j += itemsPerRow;\n                }\n                bindingsBySource.push({ type: type, entries: entries.sort(function (a, b) { return a.bindingIndex - b.bindingIndex; }) });\n            }\n            bindingsBySource.forEach(function (entry) {\n                output += \"[\" + entry.type.toUpperCase() + \"]\\n\";\n                output += repeat('-', entry.type.length + 2) + '\\n';\n                var tab = '  ';\n                entry.entries.forEach(function (entry) {\n                    var isDefault = typeof entry.value !== 'number';\n                    var value = entry.value;\n                    if (!isDefault || value !== null) {\n                        output += tab + \"[\" + entry.binding + \"] = `\" + value + \"`\";\n                        output += '\\n';\n                    }\n                });\n                output += '\\n';\n            });\n            /* tslint:disable */\n            console.log(output);\n        };\n        /**\n         * Prints a detailed table of the entire styling context.\n         */\n        TStylingContextDebug.prototype.printTable = function () {\n            // IE (not Edge) is the only browser that doesn't support this feature. Because\n            // these debugging tools are not apart of the core of Angular (they are just\n            // extra tools) we can skip-out on older browsers.\n            if (!console.table) {\n                throw new Error('This feature is not supported in your browser');\n            }\n            var context = this.context;\n            var table = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            var totalProps = Math.floor(context.length / itemsPerRow);\n            var i = 3 /* ValuesStartPosition */;\n            while (i < context.length) {\n                var prop = getProp(context, i);\n                var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                var entry = {\n                    prop: prop,\n                    'tpl mask': generateBitString(getGuardMask(context, i, false), isMapBased, totalProps),\n                    'host mask': generateBitString(getGuardMask(context, i, true), isMapBased, totalProps),\n                };\n                for (var j = 0; j < totalColumns; j++) {\n                    var key = getTypeFromColumn(j, totalColumns);\n                    var value = getBindingValue(context, i, j);\n                    entry[key] = value;\n                }\n                i += itemsPerRow;\n                table.push(entry);\n            }\n            /* tslint:disable */\n            console.table(table);\n        };\n        return TStylingContextDebug;\n    }());\n    function generateBitString(value, isMapBased, totalProps) {\n        if (isMapBased || value > 1) {\n            return \"0b\" + leftPad(value.toString(2), totalProps, '0');\n        }\n        return null;\n    }\n    function leftPad(value, max, pad) {\n        return repeat(pad, max - value.length) + value;\n    }\n    function getTypeFromColumn(index, totalColumns) {\n        if (index === TEMPLATE_DIRECTIVE_INDEX) {\n            return 'template';\n        }\n        else if (index === totalColumns - 1) {\n            return 'defaults';\n        }\n        else {\n            return \"dir #\" + index;\n        }\n    }\n    function repeat(c, times) {\n        var s = '';\n        for (var i = 0; i < times; i++) {\n            s += c;\n        }\n        return s;\n    }\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n            this._debugContext = isStylingContext(context) ?\n                new TStylingContextDebug(context, _isClassBased) :\n                context;\n        }\n        Object.defineProperty(NodeStylingDebug.prototype, \"context\", {\n            get: function () { return this._debugContext; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                var config = this.config;\n                var isClassBased = this._isClassBased;\n                var data = this._data;\n                // the direct pass code doesn't convert [style] or [class] values\n                // into StylingMapArray instances. For this reason, the values\n                // need to be converted ahead of time since the styling debug\n                // relies on context resolution to figure out what styling\n                // values have been added/removed on the element.\n                if (config.allowDirectStyling && config.hasMapBindings) {\n                    data = data.concat([]); // make a copy\n                    this._convertMapBindingsToStylingMapArrays(data);\n                }\n                this._mapValues(data, function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                // because the styling algorithm runs into two different\n                // modes: direct and context-resolution, the output of the entries\n                // object is different because the removed values are not\n                // saved between updates. For this reason a proxy is created\n                // so that the behavior is the same when examining values\n                // that are no longer active on the element.\n                return createProxy({\n                    get: function (target, prop) {\n                        var value = entries[prop];\n                        if (!value) {\n                            value = {\n                                prop: prop,\n                                value: isClassBased ? false : null,\n                                bindingIndex: null,\n                            };\n                        }\n                        return value;\n                    },\n                    set: function (target, prop, value) { return false; },\n                    ownKeys: function () { return Object.keys(entries); },\n                    getOwnPropertyDescriptor: function (k) {\n                        // we use a special property descriptor here so that enumeration operations\n                        // such as `Object.keys` will work on this proxy.\n                        return {\n                            enumerable: true,\n                            configurable: true,\n                        };\n                    },\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this.context.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                var config = this.config;\n                var data = this._data;\n                // the direct pass code doesn't convert [style] or [class] values\n                // into StylingMapArray instances. For this reason, the values\n                // need to be converted ahead of time since the styling debug\n                // relies on context resolution to figure out what styling\n                // values have been added/removed on the element.\n                if (config.allowDirectStyling && config.hasMapBindings) {\n                    data = data.concat([]); // make a copy\n                    this._convertMapBindingsToStylingMapArrays(data);\n                }\n                this._mapValues(data, function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._convertMapBindingsToStylingMapArrays = function (data) {\n            var context = this.context.context;\n            var limit = getPropValuesStartPosition(context);\n            for (var i = 3 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */; i < limit; i++) {\n                var bindingIndex = context[i];\n                var bindingValue = bindingIndex !== 0 ? getValue(data, bindingIndex) : null;\n                if (bindingValue && !Array.isArray(bindingValue)) {\n                    var stylingMapArray = normalizeIntoStylingMap(null, bindingValue, !this._isClassBased);\n                    setValue(data, bindingIndex, stylingMapArray);\n                }\n            }\n        };\n        NodeStylingDebug.prototype._mapValues = function (data, fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = hasConfig(this.context.context, 4 /* HasMapBindings */);\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { return fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            // run the template bindings\n            applyStylingViaContext(this.context.context, null, mockElement, data, true, mapFn, sanitizer, false);\n            // and also the host bindings\n            applyStylingViaContext(this.context.context, null, mockElement, data, true, mapFn, sanitizer, true);\n        };\n        return NodeStylingDebug;\n    }());\n    function buildConfig(context) {\n        var hasMapBindings = hasConfig(context, 4 /* HasMapBindings */);\n        var hasPropBindings = hasConfig(context, 2 /* HasPropBindings */);\n        var hasCollisions = hasConfig(context, 8 /* HasCollisions */);\n        var hasTemplateBindings = hasConfig(context, 32 /* HasTemplateBindings */);\n        var hasHostBindings = hasConfig(context, 64 /* HasHostBindings */);\n        // `firstTemplatePass` here is false because the context has already been constructed\n        // directly within the behavior of the debugging tools (outside of style/class debugging,\n        // the context is constructed during the first template pass).\n        var allowDirectStyling$1 = allowDirectStyling(context, false);\n        return {\n            hasMapBindings: hasMapBindings,\n            hasPropBindings: hasPropBindings,\n            hasCollisions: hasCollisions,\n            hasTemplateBindings: hasTemplateBindings,\n            hasHostBindings: hasHostBindings,\n            allowDirectStyling: allowDirectStyling$1,\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = NG_DEV_MODE && createNamedArrayType('LView') || null;\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstCreatePass, //\n        firstUpdatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas, //\n        consts) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstCreatePass = firstCreatePass;\n            this.firstUpdatePass = firstUpdatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n            this.consts = consts;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 64 /* hasInitialStyling */)\n                    flags.push('TNodeFlags.hasInitialStyling');\n                if (this.flags & 256 /* hasHostBindings */)\n                    flags.push('TNodeFlags.hasHostBindings');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 128 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        var styles = isStylingContext(tNode.styles) ?\n            new NodeStylingDebug(tNode.styles, lView, false) :\n            null;\n        var classes = isStylingContext(tNode.classes) ?\n            new NodeStylingDebug(tNode.classes, lView, true) :\n            null;\n        return {\n            html: toHtml(native),\n            native: native, styles: styles, classes: classes,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, lView) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = setBindingIndex(tView.expandoStartIndex);\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            // It is important that this be called first before the actual instructions\n                            // are run because this way the first directive ID value is not zero.\n                            incrementActiveDirectiveId();\n                            setBindingIndex(bindingRootIndex);\n                            var hostCtx = unwrapRNode(lView[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstCreatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        enterView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstCreatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstCreatePass) {\n                tView.firstCreatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            leaveView();\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        enterView(lView, lView[T_HOST]);\n        var flags = lView[FLAGS];\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingIndex(tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            if (tView.firstUpdatePass === true) {\n                tView.firstUpdatePass = false;\n            }\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            leaveViewProcessExit();\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode, getNativeByTNode(tNode, lView));\n        if ((tNode.flags & 256 /* hasHostBindings */) === 256 /* hasHostBindings */) {\n            invokeDirectivesHostBindings(tView, lView, tNode);\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     * @param consts Constants for this view\n     */\n    function createTView(viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + decls;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstCreatePass: boolean,\n            true, // firstUpdatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas, // schemas: SchemaMetadata[]|null,\n            consts) : // consts: TConstants|null\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstCreatePass: true,\n                firstUpdatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n                consts: consts,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstCreatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstCreatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, publicName, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, publicName, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var tNodeAttrs = tNode.attrs;\n        var inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var directiveInputs = directiveDef.inputs;\n            inputsFromAttrs.push(tNodeAttrs !== null ? generateInitialInputs(directiveInputs, tNodeAttrs) : null);\n            inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        if (inputsStore !== null) {\n            if (inputsStore.hasOwnProperty('class') || inputsStore.hasOwnProperty('className')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputsStore.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n        }\n        tNode.initialInputs = inputsFromAttrs;\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentLViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, dataValue, value) {\n        if (type === 3 /* Element */ || type === 0 /* Container */) {\n            /**\n             * dataValue is an array containing runtime input or output names for the directives:\n             * i+0: directive instance index\n             * i+1: publicName\n             * i+2: privateName\n             *\n             * e.g. [0, 'change', 'change-minified']\n             * we want to set the reflected property with the privateName: dataValue[i+2]\n             */\n            for (var i = 0; i < dataValue.length; i += 3) {\n                setNgReflectProperty(lView, element, type, dataValue[i + 2], value);\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        return matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            isAnimationProp(propName) || typeof Node !== 'function' || !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, lView, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, lView, def);\n        }\n        var directive = getNodeInjectable(tView.data, lView, lView.length - 1, rootTNode);\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(rootTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstCreatePass(tView);\n        if (!getBindingsEnabled())\n            return false;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs === null ? null : { '': -1 };\n        var hasDirectives = false;\n        if (directives !== null) {\n            hasDirectives = true;\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries !== null)\n                    tNode.flags |= 8 /* hasContentQuery */;\n                if (def.hostBindings !== null)\n                    tNode.flags |= 256 /* hasHostBindings */;\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n            initializeInputAndOutputAliases(tView, tNode);\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        return hasDirectives;\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode, native) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstCreatePass) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        attachPatchData(native, lView);\n        var initialInputs = tNode.initialInputs;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var isComponent = isComponentDef(def);\n            if (isComponent) {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */);\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            attachPatchData(directive, lView);\n            if (initialInputs !== null) {\n                setInputsFromAttrs(lView, i - start, directive, def, tNode, initialInputs);\n            }\n            if (isComponent) {\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                componentView[CONTEXT] = directive;\n            }\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstCreatePass = tView.firstCreatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    // It is important that this be called first before the actual instructions\n                    // are run because this way the first directive ID value is not zero.\n                    incrementActiveDirectiveId();\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstCreatePass);\n                }\n                else if (firstCreatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(null);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstCreatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstCreatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'Expando block should only be generated on first create pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        hostTNode.flags |= 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        tNode.flags |= 1 /* isDirectiveHost */;\n        // When the first directive is created on a node, save the index\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode, initialInputData) {\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs !== null) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput !== null) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param inputs The list of inputs from the directive def\n     * @param attrs The static attrs on this node\n     */\n    function generateInitialInputs(inputs, attrs) {\n        var inputsToStore = null;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            if (inputs.hasOwnProperty(attrName)) {\n                if (inputsToStore === null)\n                    inputsToStore = [];\n                inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);\n            }\n            i += 2;\n        }\n        return inputsToStore;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertLView(currentView);\n        ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode, append) {\n        if (tNode.classes !== null) {\n            if (append) {\n                renderStylingMap(renderer, native, tNode.classes, true);\n            }\n            else {\n                var classes = getInitialStylingValue(tNode.classes);\n                writeStylingValueDirectly(renderer, native, classes, true, null);\n            }\n        }\n        if (tNode.styles !== null) {\n            if (append) {\n                renderStylingMap(renderer, native, tNode.styles, false);\n            }\n            else {\n                var styles = getInitialStylingValue(tNode.styles);\n                writeStylingValueDirectly(renderer, native, styles, false, null);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                ngDevMode && assertNodeOfPossibleTypes(hostTNode, 3 /* Element */);\n                return currentView[HOST];\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            if (tViewNodeChild !== null) {\n                if (tViewNodeChild.type === 4 /* ElementContainer */ ||\n                    tViewNodeChild.type === 5 /* IcuContainer */) {\n                    var currentChild = tViewNodeChild.child;\n                    while (currentChild && (currentChild.type === 4 /* ElementContainer */ ||\n                        currentChild.type === 5 /* IcuContainer */)) {\n                        currentChild = currentChild.child;\n                    }\n                    tViewNodeChild = currentChild || tViewNodeChild;\n                }\n                return getNativeByTNodeOrNull(tViewNodeChild, lView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 128 /* isDetached */) !== 128 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(\n        /**\n         * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.\n         *\n         * When ViewRef is created for a dynamic component, this also represents the `LView` for the\n         * component.\n         *\n         * For a \"regular\" ViewRef created for an embedded view, this is the `LView` for the embedded\n         * view.\n         *\n         * @internal\n         */\n        _lView, \n        /**\n         * This represents the `LView` associated with the point where `ChangeDetectorRef` was\n         * requested.\n         *\n         * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.\n         */\n        _cdRefInjectingView) {\n            this._lView = _lView;\n            this._cdRefInjectingView = _cdRefInjectingView;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView.child, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._cdRefInjectingView || this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, tNode, result) {\n        while (tNode !== null) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 1 /* Projection */, 4 /* ElementContainer */, 5 /* IcuContainer */);\n            var lNode = lView[tNode.index];\n            if (lNode !== null) {\n                result.push(unwrapRNode(lNode));\n            }\n            // A given lNode can represent either a native node or a LContainer (when it is a host of a\n            // ViewContainerRef). When we find a LContainer we need to descend into it to collect root nodes\n            // from the views in this container.\n            if (isLContainer(lNode)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < lNode.length; i++) {\n                    var lViewInAContainer = lNode[i];\n                    var lViewFirstChildTNode = lViewInAContainer[TVIEW].firstChild;\n                    if (lViewFirstChildTNode !== null) {\n                        collectNativeNodes(lViewInAContainer, lViewFirstChildTNode, result);\n                    }\n                }\n            }\n            var tNodeType = tNode.type;\n            if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                collectNativeNodes(lView, tNode.child, result);\n            }\n            else if (tNodeType === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNode.projection];\n                while (currentProjectedNode !== null && parentView !== null) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNode = tNode.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        // DO NOT REFACTOR. The code here used to have a `value || undefined` expression\n                        // which seems to cause internal google apps to fail. This is documented in the\n                        // following internal bug issue: go/b/142967802\n                        var result = contextInjector.get(NgModuleRef, null);\n                        if (result) {\n                            ngModuleRef = result;\n                        }\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param tNode The node that is requesting a ChangeDetectorRef\n     * @param lView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(tNode, lView, isPipe) {\n        // `isComponentView` will be true for Component and Directives (but not for Pipes).\n        // See https://github.com/angular/angular/pull/33072 for proper fix\n        var isComponentView = !isPipe && isComponentHost(tNode);\n        if (isComponentView) {\n            // The LView represents the location where the component is declared.\n            // Instead we want the LView for the component View and so we need to look it up.\n            var componentView = getComponentLViewByIndex(tNode.index, lView); // look down\n            return new ViewRef(componentView, componentView);\n        }\n        else if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */ ||\n            tNode.type === 4 /* ElementContainer */) {\n            // The LView represents the location where the injection is requested from.\n            // We need to locate the containing LView (in case where the `lView` is an embedded view)\n            var hostComponentView = findComponentView(lView); // look up\n            return new ViewRef(hostComponentView, lView);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * injectable def (`ɵprov`) onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_PROV_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_PROV_DEF)) {\n            Object.defineProperty(type, NG_PROV_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275prov.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        var compiler = getCompilerFacade();\n                        ngFactoryDef = compiler.compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", {\n                            name: metadata.name,\n                            type: metadata.type,\n                            typeArgumentCount: metadata.typeArgumentCount,\n                            deps: reflectDependencies(type),\n                            injectFn: 'inject',\n                            target: compiler.R3FactoryTarget.Pipe\n                        });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ɵprov = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an injectable\n                        // def with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with injector def) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the injector def (`ɵinj`).\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its injector def\n        // (`ɵinj`)\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing a \\u0275prov definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an injectable\n        // def from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ɵprov = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (Array.isArray(provider)) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (Array.isArray(token)) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (Array.isArray(b)) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ɵcmp for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstCreatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstCreatePass, true, 'Should only be called in first create pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstCreatePass, true, 'Should only be called in first create pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        if (bindingUpdated(lView, nextBindingIndex(), value)) {\n            elementAttributeInternal(getSelectedIndex(), name, value, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = getBindingIndex();\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        setBindingIndex(bindingIndex);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, nextBindingIndex(), v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        incrementBindingIndex(2);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        incrementBindingIndex(3);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        incrementBindingIndex(4);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        incrementBindingIndex(5);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        incrementBindingIndex(6);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        incrementBindingIndex(7);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        incrementBindingIndex(8);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstCreatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param decls The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrsIndex Index of template attributes in the `consts` array.\n     * @param localRefs Index of the local references in the `consts` array.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, getConstant(tViewConsts, attrsIndex));\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        if (tView.firstCreatePass) {\n            ngDevMode && ngDevMode.firstCreatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs);\n            registerPostOrderHooks(tView, tContainerNode);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n            var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n            embeddedTViewNode.injectorIndex = tContainerNode.injectorIndex;\n            embeddedTView.node = embeddedTViewNode;\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        if (isDirectiveHost(tContainerNode)) {\n            createDirectivesInstances(tView, lView, tContainerNode);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tContainerNode, localRefExtractor);\n        }\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(getBindingIndex(), lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(comment, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactory() {\n        var msg = ngDevMode ? \"This constructor was not compatible with Dependency Injection.\" : 'invalid';\n        throw new Error(msg);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    /**\n     * Internal function for applying a single style to an element.\n     *\n     * The reason why this function has been separated from `ɵɵstyleProp` is because\n     * it is also called from `ɵɵstylePropInterpolate`.\n     */\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = nextBindingIndex();\n        var updated = stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false);\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = nextBindingIndex();\n        var updated = stylingProp(getSelectedIndex(), bindingIndex, className, value, true);\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     *\n     * Depending on the state of the `tNode.styles` styles context, the style/prop\n     * value may be applied directly to the element instead of being processed\n     * through the context. The reason why this occurs is for performance and fully\n     * depends on the state of the context (i.e. whether or not there are duplicate\n     * bindings or whether or not there are map-based bindings and property bindings\n     * present together).\n     */\n    function stylingProp(elementIndex, bindingIndex, prop, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var context = isClassBased ? getClassesContext(tNode) : getStylesContext(tNode);\n        var sanitizer = isClassBased ? null : getCurrentStyleSanitizer();\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(context, 2 /* HasPropBindings */);\n        }\n        // [style.prop] and [class.name] bindings do not use `bind()` and will\n        // therefore manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && getCheckNoChangesMode()) {\n            var oldValue = getValue(lView, bindingIndex);\n            if (hasValueChanged(oldValue, value)) {\n                throwErrorIfNoChangesMode(false, oldValue, value);\n            }\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class value directly to the element\n        if (allowDirectStyling(context, firstUpdatePass)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingValueDirectly(renderer, context, native, lView, bindingIndex, prop, value, isClassBased, sanitizerToUse);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            // Context Resolution (or first update) Case: save the value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            var directiveIndex = getActiveDirectiveId();\n            if (isClassBased) {\n                updated = updateClassViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value, false, firstUpdatePass);\n            }\n            else {\n                updated = updateStyleViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value, sanitizer, false, firstUpdatePass);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        var context = getStylesContext(tNode);\n        var hasDirectiveInput = hasStyleInput(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = incrementBindingIndex(2);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasDirectiveInput && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false, firstUpdatePass);\n            styles = NO_CHANGE;\n        }\n        stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, styles, false, hasDirectiveInput);\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    /**\n     * Internal function for applying a class string or key/value map of classes to an element.\n     *\n     * The reason why this function has been separated from `ɵɵclassMap` is because\n     * it is also called from `ɵɵclassMapInterpolate`.\n     */\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        var context = getClassesContext(tNode);\n        var hasDirectiveInput = hasClassInput(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = incrementBindingIndex(2);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasDirectiveInput && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true, firstUpdatePass);\n            classes = NO_CHANGE;\n        }\n        stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, classes, true, hasDirectiveInput);\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, value, isClassBased, hasDirectiveInput) {\n        var directiveIndex = getActiveDirectiveId();\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = getValue(lView, bindingIndex);\n        var sanitizer = getCurrentStyleSanitizer();\n        var valueHasChanged = hasValueChanged(oldValue, value);\n        // [style] and [class] bindings do not use `bind()` and will therefore\n        // manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && valueHasChanged && getCheckNoChangesMode()) {\n            throwErrorIfNoChangesMode(false, oldValue, value);\n        }\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(context, 4 /* HasMapBindings */);\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class map values directly to the element\n        if (allowDirectStyling(context, firstUpdatePass)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            applyStylingMapDirectly(renderer, context, native, lView, bindingIndex, value, isClassBased, sanitizerToUse, valueHasChanged, hasDirectiveInput);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            var stylingMapArr = value === NO_CHANGE ? NO_CHANGE : normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            activateStylingMapFeature();\n            // Context Resolution (or first update) Case: save the map value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            if (isClassBased) {\n                updateClassViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, valueHasChanged, firstUpdatePass);\n            }\n            else {\n                updateStyleViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, sanitizer, valueHasChanged, firstUpdatePass);\n            }\n            setElementExitFn(stylingApply);\n        }\n        if (ngDevMode) {\n            isClassBased ? ngDevMode.classMap : ngDevMode.styleMap++;\n            if (valueHasChanged) {\n                isClassBased ? ngDevMode.classMapCacheMiss : ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased, firstUpdatePass) {\n        var oldValue = getValue(lView, bindingIndex);\n        if (hasValueChanged(oldValue, newValue)) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (isStylingValueDefined(newValue) || !firstUpdatePass) {\n                var inputName = isClassBased ? selectClassBasedInputName(tNode.inputs) : 'style';\n                var inputs = tNode.inputs[inputName];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n                setElementExitFn(stylingApply);\n            }\n            setValue(lView, bindingIndex, newValue);\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue, true), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be scheduled from any of the four styling instructions\n     * in this file. When called it will flush all style and class bindings to the element\n     * via the context resolution algorithm.\n     */\n    function stylingApply() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveId();\n        var renderer = getRenderer(tNode, lView);\n        var sanitizer = getCurrentStyleSanitizer();\n        var classesContext = isStylingContext(tNode.classes) ? tNode.classes : null;\n        var stylesContext = isStylingContext(tNode.styles) ? tNode.styles : null;\n        flushStyling(renderer, lView, classesContext, stylesContext, native, directiveIndex, sanitizer, tView.firstUpdatePass);\n        resetCurrentStyleSanitizer();\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || allocStylingMapArray(null);\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || allocStylingMapArray(null);\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        if (hasAdditionalInitialStyling) {\n            tNode.flags |= 64 /* hasInitialStyling */;\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            var hasDirectives = isDirectiveHost(tNode);\n            context = allocTStylingContext(context, hasDirectives);\n            if (ngDevMode) {\n                attachStylingDebugObject(context, isClassBased);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not the style/class binding being applied was executed within a host bindings\n     * function.\n     */\n    function isHostStyling() {\n        return isHostStylingActive(getActiveDirectiveId());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, attrs);\n            if (tView.firstCreatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        if ((tNode.flags & 64 /* hasInitialStyling */) === 64 /* hasInitialStyling */) {\n            renderInitialStyling(renderer, native, tNode, false);\n        }\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstCreatePass) {\n            ngDevMode && ngDevMode.firstCreatePass++;\n            var hasDirectives = resolveDirectives(tView, lView, tNode, localRefs);\n            ngDevMode && validateElement(lView, native, tNode, hasDirectives);\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (hasClassInput(tNode)) {\n            var inputName = selectClassBasedInputName(tNode.inputs);\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs[inputName]);\n        }\n        if (hasStyleInput(tNode)) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrsIndex, localRefsIndex) {\n        ɵɵelementStart(index, name, attrsIndex, localRefsIndex);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstCreatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode, true);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = (context && getInitialStylingValue(context)) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n    function validateElement(hostView, element, tNode, hasDirectives) {\n        var tagName = tNode.tagName;\n        // If the element matches any directive, it's considered as valid.\n        if (!hasDirectives && tagName !== null) {\n            // The element is unknown if it's an instance of HTMLUnknownElement or it isn't registered\n            // as a custom element. Note that unknown elements with a dash in their name won't be instances\n            // of HTMLUnknownElement in browsers that support web components.\n            var isUnknown = (typeof HTMLUnknownElement === 'function' && element instanceof HTMLUnknownElement) ||\n                (typeof customElements !== 'undefined' && tagName.indexOf('-') > -1 &&\n                    !customElements.get(tagName));\n            if (isUnknown && !matchingSchemas(hostView, tagName)) {\n                var errorMessage = \"'\" + tagName + \"' is not a known element:\\n\";\n                errorMessage +=\n                    \"1. If '\" + tagName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n                if (tagName && tagName.indexOf('-') > -1) {\n                    errorMessage +=\n                        \"2. If '\" + tagName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n                }\n                else {\n                    errorMessage +=\n                        \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                throw new Error(errorMessage);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs);\n        if (attrs && tView.firstCreatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (tView.firstCreatePass) {\n            ngDevMode && ngDevMode.firstCreatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrsIndex, localRefsIndex) {\n        ɵɵelementContainerStart(index, attrsIndex, localRefsIndex);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, decls, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, decls, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, decls, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, null, tView.consts);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveViewProcessExit();\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var renderer = loadComponentRenderer(tNode, lView);\n        listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tView = lView[TVIEW];\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstCreatePass = tView.firstCreatePass;\n        var tCleanup = firstCreatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs != null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, tNode, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentLViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, tNode, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, tNode, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(lView, getSelectedIndex(), propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, getSelectedIndex(), propName, getBindingIndex() - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    getBindingIndex() - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        ngDevMode && assertEqual(getBindingIndex(), lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * @publicApi\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(nodeIndex - HEADER_OFFSET, lView);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getDebugNode', getDebugNode);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\n            // Note: we can't export `ng` when using closure enhanced optimization as:\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\n            //   for typings for AngularJS (via `goog.provide('ng....')`).\n            var w = _global;\n            ngDevMode && assertDefined(fn, 'function not defined');\n            if (w) {\n                var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n                if (!container) {\n                    container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n                }\n                container[name] = fn;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: function (token, notFoundValue) {\n            throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n        }\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(-1, null, 1, 0, null, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            leaveView();\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstCreatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            incrementActiveDirectiveId();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstCreatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵcmp || superType.ɵdir;\n            }\n            else {\n                if (superType.ɵcmp) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵdir;\n            }\n            if (superDef) {\n                // Some fields in the definition may be empty, if there were no values to put in them that\n                // would've justified object creation. Unwrap them if necessary.\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    superHostBindings(rf, ctx, elementIndex);\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Fields which exist on either directive or component definitions, and need to be copied from\n     * parent to child classes by the `ɵɵCopyDefinitionFeature`.\n     */\n    var COPY_DIRECTIVE_FIELDS = [\n        // The child class should use the providers of its parent.\n        'providersResolver',\n    ];\n    /**\n     * Fields which exist only on component definitions, and need to be copied from parent to child\n     * classes by the `ɵɵCopyDefinitionFeature`.\n     *\n     * The type here allows any field of `ComponentDef` which is not also a property of `DirectiveDef`,\n     * since those should go in `COPY_DIRECTIVE_FIELDS` above.\n     */\n    var COPY_COMPONENT_FIELDS = [\n        // The child class should use the template function of its parent, including all template\n        // semantics.\n        'template',\n        'decls',\n        'consts',\n        'vars',\n        'onPush',\n        'ngContentSelectors',\n        // The child class should use the CSS styles of its parent, including all styling semantics.\n        'styles',\n        'encapsulation',\n        // The child class should be checked by the runtime in the same way as its parent.\n        'schemas',\n    ];\n    /**\n     * Copies the fields not handled by the `ɵɵInheritDefinitionFeature` from the supertype of a\n     * definition.\n     *\n     * This exists primarily to support ngcc migration of an existing View Engine pattern, where an\n     * entire decorator is inherited from a parent to a child class. When ngcc detects this case, it\n     * generates a skeleton definition on the child class, and applies this feature.\n     *\n     * The `ɵɵCopyDefinitionFeature` then copies any needed fields from the parent class' definition,\n     * including things like the component template function.\n     *\n     * @param definition The definition of a child class which inherits from a parent class with its\n     * own definition.\n     *\n     * @codeGenApi\n     */\n    function ɵɵCopyDefinitionFeature(definition) {\n        var e_1, _a, e_2, _b;\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        if (isComponentDef(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵcmp;\n        }\n        else {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵdir;\n        }\n        // Needed because `definition` fields are readonly.\n        var defAny = definition;\n        try {\n            // Copy over any fields that apply to either directives or components.\n            for (var COPY_DIRECTIVE_FIELDS_1 = __values(COPY_DIRECTIVE_FIELDS), COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next(); !COPY_DIRECTIVE_FIELDS_1_1.done; COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next()) {\n                var field = COPY_DIRECTIVE_FIELDS_1_1.value;\n                defAny[field] = superDef[field];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (COPY_DIRECTIVE_FIELDS_1_1 && !COPY_DIRECTIVE_FIELDS_1_1.done && (_a = COPY_DIRECTIVE_FIELDS_1.return)) _a.call(COPY_DIRECTIVE_FIELDS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (isComponentDef(superDef)) {\n            try {\n                // Copy over any component-specific fields.\n                for (var COPY_COMPONENT_FIELDS_1 = __values(COPY_COMPONENT_FIELDS), COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next(); !COPY_COMPONENT_FIELDS_1_1.done; COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next()) {\n                    var field = COPY_COMPONENT_FIELDS_1_1.value;\n                    defAny[field] = superDef[field];\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (COPY_COMPONENT_FIELDS_1_1 && !COPY_COMPONENT_FIELDS_1_1.done && (_b = COPY_COMPONENT_FIELDS_1.return)) _b.call(COPY_COMPONENT_FIELDS_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ɵcmp = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ɵcmp = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    decls: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ɵprov = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-rc.0+68.sha-e89c2dd.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ɵprov = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ɵprov = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(-1, null, 1, 0, null, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            // TODO(misko): it looks like we are entering view here but we don't really need to as\n            // `renderView` does that. However as the code is written it is needed because\n            // `createRootComponentView` and `createRootComponent` both read global state. Fixing those\n            // issues would allow us to drop this.\n            enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                leaveView();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    /**\n     * Register locale data to be used internally by Angular. See the\n     * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n     *\n     * The signature `registerLocaleData(data: any, extraData?: any)` is deprecated since v5.1\n     */\n    function registerLocaleData(data, localeId, extraData) {\n        if (typeof localeId !== 'string') {\n            extraData = localeId;\n            localeId = data[exports.ɵLocaleDataIndex.LocaleId];\n        }\n        localeId = localeId.toLowerCase().replace(/_/g, '-');\n        LOCALE_DATA[localeId] = data;\n        if (extraData) {\n            LOCALE_DATA[localeId][exports.ɵLocaleDataIndex.ExtraData] = extraData;\n        }\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = normalizeLocale(locale);\n        var match = getLocaleData(normalizedLocale);\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = getLocaleData(parentLocale);\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Helper function to get the given `normalizedLocale` from `LOCALE_DATA`\n     * or from the global `ng.common.locale`.\n     */\n    function getLocaleData(normalizedLocale) {\n        if (!(normalizedLocale in LOCALE_DATA)) {\n            LOCALE_DATA[normalizedLocale] = _global.ng && _global.ng.common && _global.ng.common.locales &&\n                _global.ng.common.locales[normalizedLocale];\n        }\n        return LOCALE_DATA[normalizedLocale];\n    }\n    /**\n     * Helper function to remove all the locale data from `LOCALE_DATA`.\n     */\n    function unregisterAllLocaleData() {\n        LOCALE_DATA = {};\n    }\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n    /**\n     * Returns the canonical form of a locale name - lowercase with `_` replaced with `-`.\n     */\n    function normalizeLocale(locale) {\n        return locale.toLowerCase().replace(/_/g, '-');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(lView, tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(lView, tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(lView, tView) {\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, lView);\n        // Remove deleted nodes\n        var index = rootIndex + 1;\n        while (index <= lastCreatedNode.index - HEADER_OFFSET) {\n            if (visitedNodes.indexOf(index) === -1) {\n                removeNode(index, lView, /* markAsDetached */ true);\n            }\n            // Check if an element has any local refs and skip them\n            var tNode = getTNode(index, lView);\n            if (tNode && (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) &&\n                tNode.localNames !== null) {\n                // Divide by 2 to get the number of local refs,\n                // since they are stored as an array that also includes directive indexes,\n                // i.e. [\"localRef\", directiveIndex, ...]\n                index += tNode.localNames.length >> 1;\n            }\n            index++;\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, lView);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, lView);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, lView);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, lView);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(viewData, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 128 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                            if (ngDevMode) {\n                                var element = getNativeByIndex(previousElementIndex, lView);\n                                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, nextBindingIndex(), value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = getBindingIndex() - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ɵmod.id !== null) {\n            var id = ngModuleType.ɵmod.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ɵmod.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearRegisteredModuleState() {\n        modules.clear();\n    }\n    function getRegisteredModulesState() {\n        return new Map(modules);\n    }\n    function restoreRegisteredModulesState(moduleMap) {\n        modules = new Map(moduleMap);\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign(__assign({}, clazz.propDecorators), propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstCreatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = getBindingIndex();\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinvalidFactory': ɵɵinvalidFactory,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵCopyDefinitionFeature': ɵɵCopyDefinitionFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MOD_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275mod.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJ_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275inj.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ɵcmp set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n                // A `ɵcmp` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) {\n                return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir);\n            })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have a module def (\\u0275mod property)\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have a \\u0275mod property\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have a\n            // ɵcmp as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * component def (ɵcmp) onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMP_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign(__assign({}, directiveMetadata(type, metadata)), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addDirectiveDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * directive def onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIR_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/\\u0275dir.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addDirectiveDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", __assign(__assign({}, meta.metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Directive }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector !== undefined ? metadata.selector : null,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: usesLifecycleHook(type, 'ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds a directive definition to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addDirectiveDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the def if there are no annotations and the def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) &&\n                shouldAddAbstractDirective(parent)) {\n                compileDirective(parent, null);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnnotation)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        return exportAs === undefined ? null : splitByComma(exportAs);\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnnotation(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n    function usesLifecycleHook(type, name) {\n        var prototype = type.prototype;\n        return prototype && prototype.hasOwnProperty(name);\n    }\n    var LIFECYCLE_HOOKS = [\n        'ngOnChanges', 'ngOnInit', 'ngOnDestroy', 'ngDoCheck', 'ngAfterViewInit', 'ngAfterViewChecked',\n        'ngAfterContentInit', 'ngAfterContentChecked'\n    ];\n    function shouldAddAbstractDirective(type) {\n        if (LIFECYCLE_HOOKS.some(function (hookName) { return usesLifecycleHook(type, hookName); })) {\n            return true;\n        }\n        var propMetadata = getReflect().ownPropMetadata(type);\n        for (var field in propMetadata) {\n            var annotations = propMetadata[field];\n            for (var i = 0; i < annotations.length; i++) {\n                var current = annotations[i];\n                var metadataName = current.ngMetadataName;\n                if (isInputAnnotation(current) || isContentQuery(current) || isViewQuery(current) ||\n                    metadataName === 'Output' || metadataName === 'HostBinding' ||\n                    metadataName === 'HostListener') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275fac.js\", __assign(__assign({}, metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Pipe }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275pipe.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ɵinj = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The existence of this constant (in this particular file) informs the Angular compiler that the\n     * current program is actually @angular/core, which needs to be compiled specially.\n     */\n    var ITS_JUST_ANGULAR = true;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ɵfac = function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); };\n        ApplicationInitStatus.ɵprov = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: function (t) { return ApplicationInitStatus.ɵfac(t); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ɵfac = function Console_Factory(t) { return new (t || Console)(); };\n        Console.ɵprov = ɵɵdefineInjectable({ token: Console, factory: function (t) { return Console.ɵfac(t); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ɵfac = function Compiler_Factory(t) { return new (t || Compiler)(); };\n        Compiler.ɵprov = ɵɵdefineInjectable({ token: Compiler, factory: function (t) { return Compiler.ɵfac(t); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getNativeRequestAnimationFrame() {\n        var nativeRequestAnimationFrame = _global['requestAnimationFrame'];\n        var nativeCancelAnimationFrame = _global['cancelAnimationFrame'];\n        if (typeof Zone !== 'undefined' && nativeRequestAnimationFrame && nativeCancelAnimationFrame) {\n            // use unpatched version of requestAnimationFrame(native delegate) if possible\n            // to avoid another Change detection\n            var unpatchedRequestAnimationFrame = nativeRequestAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedRequestAnimationFrame) {\n                nativeRequestAnimationFrame = unpatchedRequestAnimationFrame;\n            }\n            var unpatchedCancelAnimationFrame = nativeCancelAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedCancelAnimationFrame) {\n                nativeCancelAnimationFrame = unpatchedCancelAnimationFrame;\n            }\n        }\n        return { nativeRequestAnimationFrame: nativeRequestAnimationFrame, nativeCancelAnimationFrame: nativeCancelAnimationFrame };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b, _c = _a.shouldCoalesceEventChangeDetection, shouldCoalesceEventChangeDetection = _c === void 0 ? false : _c;\n            this.hasPendingMacrotasks = false;\n            this.hasPendingMicrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            self.shouldCoalesceEventChangeDetection = shouldCoalesceEventChangeDetection;\n            self.lastRequestAnimationFrameId = -1;\n            self.nativeRequestAnimationFrame = getNativeRequestAnimationFrame().nativeRequestAnimationFrame;\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function delayChangeDetectionForEvents(zone) {\n        if (zone.lastRequestAnimationFrameId !== -1) {\n            return;\n        }\n        zone.lastRequestAnimationFrameId = zone.nativeRequestAnimationFrame.call(_global, function () {\n            zone.lastRequestAnimationFrameId = -1;\n            updateMicroTaskStatus(zone);\n            checkStable(zone);\n        });\n        updateMicroTaskStatus(zone);\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        var delayChangeDetectionForEventsDelegate = function () { delayChangeDetectionForEvents(zone); };\n        var maybeDelayChangeDetection = !!zone.shouldCoalesceEventChangeDetection &&\n            zone.nativeRequestAnimationFrame && delayChangeDetectionForEventsDelegate;\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true, 'maybeDelayChangeDetection': maybeDelayChangeDetection },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    if (maybeDelayChangeDetection && task.type === 'eventTask') {\n                        maybeDelayChangeDetection();\n                    }\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone._hasPendingMicrotasks = hasTaskState.microTask;\n                        updateMicroTaskStatus(zone);\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function updateMicroTaskStatus(zone) {\n        if (zone._hasPendingMicrotasks ||\n            (zone.shouldCoalesceEventChangeDetection && zone.lastRequestAnimationFrameId !== -1)) {\n            zone.hasPendingMicrotasks = true;\n        }\n        else {\n            zone.hasPendingMicrotasks = false;\n        }\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ɵfac = function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); };\n        Testability.ɵprov = ɵɵdefineInjectable({ token: Testability, factory: function (t) { return Testability.ɵfac(t); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ɵfac = function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); };\n        TestabilityRegistry.ɵprov = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: function (t) { return TestabilityRegistry.ɵfac(t); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__POST_R3__;\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZoneEventCoalescing = (options && options.ngZoneEventCoalescing) || false;\n            var ngZone = getNgZone(ngZoneOption, ngZoneEventCoalescing);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ɵfac = function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); };\n        PlatformRef.ɵprov = ɵɵdefineInjectable({ token: PlatformRef, factory: function (t) { return PlatformRef.ɵfac(t); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null);\n    function getNgZone(ngZoneOption, ngZoneEventCoalescing) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) || new NgZone({\n                enableLongStackTrace: isDevMode(),\n                shouldCoalesceEventChangeDetection: ngZoneEventCoalescing\n            });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign(__assign({}, dst), objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ɵfac = function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); };\n        ApplicationRef.ɵprov = ɵɵdefineInjectable({ token: ApplicationRef, factory: function (t) { return ApplicationRef.ɵfac(t); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ɵfac = function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); };\n        SystemJsNgModuleLoader.ɵprov = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: function (t) { return SystemJsNgModuleLoader.ɵfac(t); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                if (className) {\n                    properties['className'] =\n                        properties['className'] ? properties['className'] + (\" \" + className) : className;\n                }\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                if (!this._classesProxy) {\n                    var element_1 = this.nativeElement;\n                    // we use a proxy here because VE code expects `.classes` to keep\n                    // track of which classes have been added and removed. Because we\n                    // do not make use of a debug renderer anymore, the return value\n                    // must always be `false` in the event that a class does not exist\n                    // on the element (even if it wasn't added and removed beforehand).\n                    this._classesProxy = createProxy({\n                        get: function (target, prop) {\n                            return element_1 ? element_1.classList.contains(prop) : false;\n                        },\n                        set: function (target, prop, value) {\n                            return element_1 ? element_1.classList.toggle(prop, !!value) : false;\n                        },\n                        ownKeys: function () { return element_1 ? Array.from(element_1.classList).sort() : []; },\n                        getOwnPropertyDescriptor: function (k) {\n                            // we use a special property descriptor here so that enumeration operations\n                            // such as `Object.keys` will work on this proxy.\n                            return {\n                                enumerable: true,\n                                configurable: true,\n                            };\n                        },\n                    });\n                }\n                return this._classesProxy;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__POST_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__POST_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        locale = locale || getGlobalLocale();\n        if (ivyEnabled) {\n            setLocaleId(locale);\n        }\n        return locale;\n    }\n    /**\n     * Work out the locale from the potential global properties.\n     *\n     * * Closure Compiler: use `goog.LOCALE`.\n     * * Ivy enabled: use `$localize.locale`\n     */\n    function getGlobalLocale() {\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            // * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.\n            // * In order to preserve backwards compatibility, we use Angular default value over\n            //   Closure Compiler's one.\n            return goog.LOCALE;\n        }\n        else {\n            // KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE\n            // COMPILE-TIME INLINER.\n            //\n            // * During compile time inlining of translations the expression will be replaced\n            //   with a string literal that is the current locale. Other forms of this expression are not\n            //   guaranteed to be replaced.\n            //\n            // * During runtime translation evaluation, the developer is required to set `$localize.locale`\n            //   if required, or just to provide their own `LOCALE_ID` provider.\n            return (ivyEnabled && typeof $localize !== 'undefined' && $localize.locale) ||\n                DEFAULT_LOCALE_ID;\n        }\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ɵmod = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ɵinj = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please run `ng add @angular/localize` from the Angular CLI.\\n' +\n                '(For non-CLI projects, add `import \\'@angular/localize/init\\';` to your polyfills.ts file)');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode$1;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵregisterLocaleData = registerLocaleData;\n    exports.ɵunregisterLocaleData = unregisterAllLocaleData;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵinvalidFactory = ɵɵinvalidFactory;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵCopyDefinitionFeature = ɵɵCopyDefinitionFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMP_DEF = NG_COMP_DEF;\n    exports.ɵNG_DIR_DEF = NG_DIR_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MOD_DEF = NG_MOD_DEF;\n    exports.ɵNG_PROV_DEF = NG_PROV_DEF;\n    exports.ɵNG_INJ_DEF = NG_INJ_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}