{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","key","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","queueInitHooks","onInit","doCheck","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","def","directives","queueContentHooks","queueViewHooks","queueDestroyHooks","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","MONKEY_PATCH_KEY_NAME","findMatchingElement","element","lViewData","result","native","attachLViewDataToNode","node","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","stringify$1","loadInternal","readElementValue","getNextLNode","viewData","view","getChildLNode","child","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkLNodeTree","startingNode","rootNode","action","renderParentNode","beforeNode","projectionNodeIndex","nextNode","parent_1","nodeType","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","viewRootLNode","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","container","insertMode","parentNode","insertView","viewNode","views","lView","splice","detachView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeChildOfElement","canInsertNativeChildOfView","grandParentContainer","canInsertNativeNode","grandParent","nativeInsertBefore","appendChild","renderParent","getRenderParent","appendProjectedNode","currentParent","parentView","lContainer","ngContainerChild","parentView_1","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","prop","sanitizer","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","elementDepthCount","previousOrParentNode","isParent","currentQueries","NG_HOST_SYMBOL","_CLEAN_PROMISE","HEADER_FILLER","fill","CIRCULAR$1","getRenderer","getRendererFactory","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","enterView","newView","host","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","contentQueries","directiveDefIdx","contentQueriesRefresh","setHostBindings","hostBindings","refreshChildComponents","components","componentRefresh","bindings","hostBindingStartIndex","defs","dirIndex","hostVars","executeInitAndContentHooks","createLViewData","instance","blueprint","createLNodeObject","nodeInjector","createLNode","tParent","isState","createTNode","tData","previousTNode","dynamicContainerNode","adjustBlueprintForNewNode","resetComponentState","rf","_isParent","_previousOrParentNode","template","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","hostView","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","localRefs","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","nativeNodeLocalRefExtractor","lNode","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","isContentQueryHost","clone","tDirectives","directiveCreate","saveResolvedLocalsInData","localIndex","registry","directiveRegistry","diPublic","throwCyclicDependencyError","queueComponentIndexForCheck","queueHostBindingForCheck","NO_CHANGE","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","consts","vars","pipes","viewQuery","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","loadElement","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","stylingContext","load","allocStylingContext","lElement","templateStyleContext","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","styles","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNode","textBinding","existingNode","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveIndex","componentView","addToViewTree","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","enumerable","attributes","createLContainer","parentLNode","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","nodeIndex","selectorIndex","nodeToProject","projectedView","grandparent","currentComponentHost","firstProjectedNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","rootComponent","_getComponentHostLElementNode","getRootView","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadDirective","loadQueryList","queryListIdx","loadElementInternal","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","CLEAN_PROMISE","createRootContext","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","pipeTypes","directiveTypes","declaredInputs","encapsulation","Emulated","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","ngOnDestroy","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","features","viewProviders","feature","ngComponentDef","ngDirectiveDef","ngPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getClosureSafeProperty$1","fillProperties","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","getPrototypeOf","_loop_1","e_1","superDef","baseDef","ngBaseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","elementIndex","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","RendererStyleFlags2","ChangeDetectorRef","ElementRef","nativeElement","NgModuleRef","NgModuleFactory","TemplateRef","ViewContainerRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","ViewRef","_view","_appRef","_viewContainerRef","_lViewNode","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","componentDef","isInternalRootView","wrapper","elementNode","componentTag","LifecycleHooksFeature","projection$$1","nodeList","firstTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","location","NG_ELEMENT_ID","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","b6","b5","directiveInject","getOrCreateInjectable","injectElementRef","getOrCreateElementRef","injectTemplateRef","getOrCreateTemplateRef","injectViewContainerRef","getOrCreateContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","injectRenderer2","getOrCreateRenderer2","injectAttribute","attrNameToInject","currentNode","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","bloomHash","bloomHashBit","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","formerInjector","startInjector","b7","ReadFromInjectorFn","read","ElementRef$1","ElementRef$$1","vcRefHost","hostParent","hostTNode","ViewContainerRef$1","NodeInjector","_lInjector","ViewContainerRef$$1","_lContainerNode","_hostNode","_viewRefs","parentLInjector","clear","createEmbeddedView","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","ngModuleRef","contextInjector","insert","destroyed","move","newIndex","shift","TemplateRef$1","getFactoryOf","ngInjectorDef","getInheritedFactory","TemplateRef$$1","_declarationParentView","_tView","_renderer","_queries","createEmbeddedViewNode","declarationView","queries","templateRefExtractor","PublicFeature","i18nTagRegex","appendI18nNode","previousNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","input","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","transform","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","LQueries_","shallow","deep","track","predicate","descend","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµtemplateRefExtractor","ÉµinjectRenderer2","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadDirective","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStylingProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","Éµzh","Éµzs","Éµzss","Éµzr","Éµzc","sanitizeScript","unsafeScript","SCRIPT","Éµzu","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_INJECTABLE_DEF","NG_INJECTOR_DEF","NG_PIPE_DEF","NG_MODULE_DEF","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModuleDefs","flatten$1","wrapReference","expandModuleWithProviders","emitInline","compileNgModule","jitExpression","expression","compileInjector","statements","patchComponentDefWithScope","transitiveScopes","from","compilation","dir","transitiveScopesFor","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","metadata","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","directiveMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","ngSelectorScope","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","isUseClassProvider","GET_PROPERTY_NAME$1","USE_VALUE$1","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","compilePipe","compilePipeFromMetadata","Version","R3_COMPILE_COMPONENT","R3_COMPILE_DIRECTIVE","R3_COMPILE_INJECTABLE","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","R3_COMPILE_NGMODULE","setScopeOnDeclaredComponents","declaration","R3_COMPILE_PIPE","Directive","Component","Default","Pipe","NG_BASE_DEF","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","VERSION","full","major","minor","patch","Injectable","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_NGCC__","createCompiler","compileNgModuleFactory","ApplicationRef","f","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","ApplicationModule_Factory","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","parentEl","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugContext","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","element$$1","Render3DebugContext","matchedDirectives","R3_COMPILE_COMPONENT__POST_NGCC__","R3_COMPILE_DIRECTIVE__POST_NGCC__","R3_COMPILE_INJECTABLE__POST_NGCC__","R3_COMPILE_NGMODULE__POST_NGCC__","R3_COMPILE_PIPE__POST_NGCC__","GET_PROPERTY_NAME$2","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","pipeBind2","Éµstore","ÉµwhenRendered","whenRendered","getRootContext","Éµi18nApply","i18nApply","instructions","localParentNode","localPreviousNode","instruction","textRNode","removedNode","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompileComponent","ÉµcompileDirective","ÉµcompilePipe","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµsanitizeUrl","ÉµsanitizeResourceUrl","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetElementContext","getElementContext","parentContext","ÉµR3_COMPILE_COMPONENT__POST_NGCC__","ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__","ÉµR3_COMPILE_INJECTABLE__POST_NGCC__","ÉµR3_COMPILE_NGMODULE__POST_NGCC__","ÉµR3_COMPILE_PIPE__POST_NGCC__","ÉµivyEnable__POST_NGCC__","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-beta.4+54.sha-2a672a9\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * #### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * #### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // NOTE: The order here matters: Checking window, then global, then self is important.\n    //   checking them in another order can result in errors in some Node environments.\n    var __global$1 = typeof window != 'undefined' && window || typeof global != 'undefined' && global ||\n        typeof self != 'undefined' && self;\n    function ngDevModeResetPerfCounters() {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        return __global$1['ngDevMode'] = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        __global$1['ngDevMode'] = ngDevModeResetPerfCounters();\n    }\n\n    var MONKEY_PATCH_KEY_NAME = '__ng_data__';\n    /** Returns the matching `ElementContext` data for a given DOM node.\n     *\n     * This function will examine the provided DOM element's monkey-patched property to figure out the\n     * associated index and view data (`LViewData`).\n     *\n     * If the monkey-patched value is the `LViewData` instance then the element context for that\n     * element will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s monkey-patch value.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned).\n     */\n    function getElementContext(element) {\n        var context = element[MONKEY_PATCH_KEY_NAME];\n        if (context) {\n            if (Array.isArray(context)) {\n                var lViewData = context;\n                var index = findMatchingElement(element, lViewData);\n                context = { index: index, native: element, lViewData: lViewData };\n                attachLViewDataToNode(element, context);\n            }\n        }\n        else {\n            var parent_1 = element;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = parent_1[MONKEY_PATCH_KEY_NAME];\n                if (parentContext) {\n                    var lViewData = Array.isArray(parentContext) ? parentContext : parentContext.lViewData;\n                    var index = findMatchingElement(element, lViewData);\n                    if (index >= 0) {\n                        context = { index: index, native: element, lViewData: lViewData };\n                        attachLViewDataToNode(element, context);\n                        break;\n                    }\n                }\n            }\n        }\n        return context || null;\n    }\n    /** Locates the element within the given LViewData and returns the matching index */\n    function findMatchingElement(element, lViewData) {\n        for (var i = HEADER_OFFSET; i < lViewData.length; i++) {\n            var result = lViewData[i];\n            if (result) {\n                // special case for styling since when [class] and [style] bindings\n                // are used they will wrap the element into a StylingContext array\n                if (Array.isArray(result)) {\n                    result = result[0 /* ElementPosition */];\n                }\n                if (result.native === element)\n                    return i;\n            }\n        }\n        return -1;\n    }\n    /** Assigns the given data to a DOM element using monkey-patching */\n    function attachLViewDataToNode(node, data) {\n        node[MONKEY_PATCH_KEY_NAME] = data;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(node.tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns wether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return readElementValue(viewData[node.tNode.child.index]);\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = node.data[CONTAINER_INDEX];\n            return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n        }\n        var parent = node.tNode.parent;\n        return readElementValue(parent ? node.view[parent.index] : node.view[HOST_NODE]);\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attatched to any container.\n     */\n    function getRenderParent(viewNode) {\n        var container = getParentLNode(viewNode);\n        return container ? container.data[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkLNodeTree.\n     *\n     * This is deliberately created outside of walkLNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered. This prevents walking past that node.\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        var projectionNodeIndex = -1;\n        while (node) {\n            var nextNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            var nodeType = node.tNode.type;\n            if (nodeType === 3 /* Element */) {\n                // Execute the action\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                if (node.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (nodeType === 0 /* Container */) {\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n                if (nextNode) {\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (nodeType === 1 /* Projection */) {\n                var componentHost = findComponentHost(node.view);\n                var head = componentHost.tNode.projection[node.tNode.projection];\n                projectionNodeStack[++projectionNodeIndex] = node;\n                nextNode = head ? componentHost.data[PARENT][head.index] : null;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            if (nextNode === null) {\n                nextNode = getNextLNode(node);\n                // this last node was projected, we need to get back down to its projection node\n                if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                    nextNode = getNextLNode(projectionNodeStack[projectionNodeIndex--]);\n                }\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (node && !nextNode) {\n                    node = getParentLNode(node);\n                    if (node === null || node === rootNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (!node.tNode.next && nodeType === 0 /* Container */) {\n                        beforeNode = node.native;\n                    }\n                    nextNode = getNextLNode(node);\n                }\n            }\n            node = nextNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        var lView = viewNode.data;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container'S host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (viewNode.tNode.index === -1) {\n            lView[CONTAINER_INDEX] = container.tNode.parent.index;\n            viewNode.view = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!container.tNode.detached) {\n            addRemoveViewFromContainer(container, viewNode, false);\n        }\n        // Notify query that view has been removed\n        var removedLView = viewNode.data;\n        if (removedLView[QUERIES]) {\n            removedLView[QUERIES].removeView();\n        }\n        removedLView[CONTAINER_INDEX] = -1;\n        viewNode.view = null;\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function canInsertNativeChildOfElement(parent, currentView) {\n        if (parent.view !== currentView) {\n            // If the Parent view is not the same as current view than we are inserting across\n            // Views. This happens when we insert a root element of the component view into\n            // the component host element and it should always be eager.\n            return true;\n        }\n        // Parent elements can be a component which may have projection.\n        if (parent.data === null) {\n            // Parent is a regular non-component element. We should eagerly insert into it\n            // since we know that this relationship will never be broken.\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reason:\n     * - view is not inserted into any container (view was created but not iserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view this view was inserted into a container and\n     * the container itself has it render parent determined.\n     */\n    function canInsertNativeChildOfView(parent) {\n        ngDevMode && assertNodeType(parent, 2 /* View */);\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var grandParentContainer = getParentLNode(parent);\n        if (grandParentContainer == null) {\n            // The `View` is not inserted into a `Container` we have to delay insertion.\n            return false;\n        }\n        ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n        if (grandParentContainer.data[RENDER_PARENT] == null) {\n            // The parent `Container` itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(parent, currentView) {\n        // We can only insert into a Component or View. Any other type should be an Error.\n        ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 4 /* ElementContainer */, 2 /* View */);\n        if (parent.tNode.type === 3 /* Element */) {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(parent, currentView);\n        }\n        else if (parent.tNode.type === 4 /* ElementContainer */) {\n            // Parent is an element container (ng-container).\n            // Its grand-parent might be an element, view or a sequence of ng-container parents.\n            var grandParent = getParentLNode(parent);\n            while (grandParent !== null && grandParent.tNode.type === 4 /* ElementContainer */) {\n                grandParent = getParentLNode(grandParent);\n            }\n            if (grandParent === null) {\n                return false;\n            }\n            else if (grandParent.tNode.type === 3 /* Element */) {\n                return canInsertNativeChildOfElement(grandParent, currentView);\n            }\n            else {\n                return canInsertNativeChildOfView(grandParent);\n            }\n        }\n        else {\n            // Parent is a View.\n            return canInsertNativeChildOfView(parent);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            var renderer = currentView[RENDERER];\n            if (parent.tNode.type === 2 /* View */) {\n                var container = getParentLNode(parent);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(parent);\n                var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n                nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n            }\n            else if (parent.tNode.type === 4 /* ElementContainer */) {\n                var beforeNode = parent.native;\n                var grandParent = getParentLNode(parent);\n                while (grandParent.tNode.type === 4 /* ElementContainer */) {\n                    grandParent = getParentLNode(grandParent);\n                }\n                if (grandParent.tNode.type === 2 /* View */) {\n                    var renderParent = getRenderParent(grandParent);\n                    nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, grandParent.native, child, beforeNode);\n                }\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                    parent.native.appendChild(child);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parent The parent from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n                parent.native.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView, renderParent, parentView) {\n        appendChild(currentParent, node.native, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachLViewDataToNode(node.native, parentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, node.native);\n            }\n        }\n        else if (node.tNode.type === 4 /* ElementContainer */) {\n            var ngContainerChild = getChildLNode(node);\n            var parentView_1 = currentView[HOST_NODE].view;\n            while (ngContainerChild) {\n                appendProjectedNode(ngContainerChild, currentParent, currentView, renderParent, parentView_1);\n                ngContainerChild = getNextLNode(ngContainerChild);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = [null, styleSanitizer || null, initialStylingValues, 0, 0, null];\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 6 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 6 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 6 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 6 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var ignoreAllClassUpdates = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (typeof classes == 'string') {\n            var cachedClassString = context[5 /* CachedCssClassString */];\n            if (cachedClassString && cachedClassString === classes) {\n                ignoreAllClassUpdates = true;\n            }\n            else {\n                context[5 /* CachedCssClassString */] = classes;\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n        }\n        else {\n            classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            context[5 /* CachedCssClassString */] = null;\n        }\n        classes = (classes || EMPTY_OBJ);\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (!ignoreAllClassUpdates || !isClassBased_2) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (valueToCompare !== newValue) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (initialValue !== newValue) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            if (ignoreAllClassUpdates && isClassBased_3)\n                break;\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            if (ignoreAllClassUpdates && isClassBased_4)\n                break;\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n            context.push(flag, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 6 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 6 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 6 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (inb this previousOrParentNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var tNode = previousOrParentNode.tNode;\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentNode.data !== viewData && !isContentQueryHost(tNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            tNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.hostBindingStartIndex + any hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.hostBindingStartIndex;\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings(dirIndex, bindings[i + 1]);\n                bindingRootIndex = viewData[BINDING_INDEX] = bindingRootIndex + def.hostVars;\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[PARENT] = viewData;\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            tNode: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            var tData = tView.data;\n            ngDevMode && assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n            viewData[adjustedIndex] = node;\n            if (tData[adjustedIndex] == null) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode &&\n                assertEqual(lViewData[HOST_NODE], null, 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    /**\n     * When LNodes are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.hostBindingStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentNode = null;\n        elementDepthCount = 0;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewNode(tView, context, declarationView, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        isParent = true;\n        previousOrParentNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n        return viewNode;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        if (viewNode.data[PARENT] == null && viewNode.data[CONTEXT] && !tView.template) {\n            // This is a root view inside the view tree\n            tickRootContext(viewNode.data[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentNode = null;\n                oldView = enterView(viewNode.data, viewNode);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentNode = _previousOrParentNode;\n            }\n        }\n        return viewNode;\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(tView.hostBindings);\n                componentRefresh(HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 4 /* ElementContainer */, native, null, attrs || null, null);\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(node, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 4 /* ElementContainer */);\n        currentQueries && (currentQueries = currentQueries.addNode(previousOrParentNode));\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(node, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (elementDepthCount === 0) {\n            attachLViewDataToNode(native, viewData);\n        }\n        elementDepthCount++;\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    function nativeNodeLocalRefExtractor(lNode) {\n        return lNode.native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param lNode LNode for which directive and locals should be created\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from LNode\n     */\n    function createDirectivesAndLocals(lNode, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = nativeNodeLocalRefExtractor; }\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(lNode.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(lNode, localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentNode.tNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, hostVars) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < hostVars; i++) {\n            tView.blueprint.push(NO_CHANGE);\n            viewData.push(NO_CHANGE);\n        }\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, previousOrParentNode.tNode.index - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(tNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(lNode, localRefExtractor) {\n        var localNames = lNode.tNode.localNames;\n        if (localNames) {\n            var localIndex = lNode.tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(lNode) : directives[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            hostBindingStartIndex: initialViewLength,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetComponentState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode &&\n            assertNodeOfPossibleTypes(previousOrParentNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var node = previousOrParentNode;\n        // add native event listener - applicable to elements only\n        if (previousOrParentNode.tNode.type === 3 /* Element */) {\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n                var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (firstTemplatePass) {\n                    getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        currentQueries && (currentQueries = currentQueries.addNode(previousOrParentNode));\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n        elementDepthCount--;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = previousOrParentNode.tNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = lElement.tNode;\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param styleName Name of property. Because it is going to DOM this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(directiveDefIdx, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx, directiveDef.hostVars);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, tNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def), tView, instance, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck();\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n            parentLNode :\n            null;\n        if (renderParent && renderParent.tNode.type === 2 /* View */) {\n            renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n        }\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var node = containerInternal(index, tagName || null, attrs || null, localRefs || null);\n        if (firstTemplatePass) {\n            node.tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(node, localRefs, localRefExtractor);\n        currentQueries && (currentQueries = currentQueries.addNode(node));\n        queueLifecycleHooks(node.tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainerNode for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var node = containerInternal(index, null, null, null);\n        firstTemplatePass && (node.tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName, attrs, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        return node;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = loadElement(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshDescendantViews();\n        isParent = false;\n        previousOrParentNode = viewData[HOST_NODE];\n        leaveView(viewData[PARENT]);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            detectChangesInternal(hostView, element, hostView[CONTEXT]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentHost(viewData);\n        if (!componentNode.tNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.tNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.tNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (node.tNode.projection === null)\n            node.tNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var parent = getParentLNode(node);\n        if (canInsertNativeNode(parent, viewData)) {\n            var componentNode = findComponentHost(viewData);\n            var nodeToProject = componentNode.tNode.projection[selectorIndex];\n            var projectedView = componentNode.view;\n            var projectionNodeIndex = -1;\n            var grandparent = void 0;\n            var renderParent = parent.tNode.type === 2 /* View */ ?\n                (grandparent = getParentLNode(parent)) &&\n                    grandparent.data[RENDER_PARENT] :\n                parent;\n            var parentView = viewData[HOST_NODE].view;\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentHost = findComponentHost(projectedView);\n                    var firstProjectedNode = currentComponentHost.tNode.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                        nodeToProject = firstProjectedNode;\n                        projectedView = currentComponentHost.view;\n                        continue;\n                    }\n                }\n                else {\n                    var lNode = projectedView[nodeToProject.index];\n                    lNode.tNode.flags |= 8192 /* isProjected */;\n                    appendProjectedNode(lNode, parent, viewData, renderParent, parentView);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                    // move down into the view of the component we're projecting right now\n                    var lNode = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = lNode.tNode;\n                    projectedView = lNode.view;\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var hostTView = hostView[TVIEW];\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            component = baseDirectiveCreate(0, componentDef.factory(), componentDef);\n            if (componentDef.hostBindings) {\n                queueHostBindingForCheck(0, componentDef.hostVars);\n            }\n            rootContext.components.push(component);\n            elementNode.data[CONTEXT] = component;\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(rootView[TVIEW].hostBindings);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var elementNode = _getComponentHostLElementNode(component);\n        // Root component is always created at dir index 0\n        var tView = elementNode.view[TVIEW];\n        queueInitHooks(0, def.onInit, def.doCheck, tView);\n        queueLifecycleHooks(elementNode.tNode.flags, tView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated;\n        var styles = componentDefinition.styles || EMPTY_ARRAY;\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || EMPTY$1,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation,\n            providers: EMPTY_ARRAY,\n            viewProviders: EMPTY_ARRAY,\n            id: \"c\" + _renderCompCount++, styles: styles,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY$1) {\n            return {};\n        }\n        else if (Array.isArray(value) && value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._lViewNode = null;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef);\n                if (this.componentDef.hostBindings) {\n                    queueHostBindingForCheck(0, this.componentDef.hostVars);\n                }\n                rootContext.components.push(component);\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n                elementNode.data[CONTEXT] = component;\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                LifecycleHooksFeature(component, this.componentDef);\n                setHostBindings(rootView[TVIEW].hostBindings);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = elementNode.tNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var lNode = createLNode(++index, 3 /* Element */, nodeList[j], null, null);\n                            if (previousTNode) {\n                                previousTNode.next = lNode.tNode;\n                            }\n                            else {\n                                firstTNode = lNode.tNode;\n                            }\n                            previousTNode = lNode.tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(elementNode, elementNode.data[TVIEW], component, 1 /* Create */);\n                elementNode.data[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, hostNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._lViewNode.tNode.child = elementNode.tNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._lViewNode = createLNode(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.location = new ElementRef(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        if (b7) {\n            b6 ? (b5 ? (injector.bf7 |= mask) : (injector.bf6 |= mask)) :\n                (b5 ? (injector.bf5 |= mask) : (injector.bf4 |= mask));\n        }\n        else {\n            b6 ? (b5 ? (injector.bf3 |= mask) : (injector.bf2 |= mask)) :\n                (b5 ? (injector.bf1 |= mask) : (injector.bf0 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null,\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getOrCreateNodeInjector());\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        var lNode = getPreviousOrParentNode();\n        ngDevMode && assertNodeOfPossibleTypes(lNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var tNode = lNode.tNode;\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 15 /* DirectiveStartingIndexShift */]);\n    }\n    function getOrCreateRenderer2(di) {\n        var renderer = di.node.view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(nodeInjector, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash !== null) {\n            var injector = nodeInjector;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return node.view[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === nodeInjector &&\n                    (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBit(token) {\n        var id = token[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id & BLOOM_MASK : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (b7) {\n                value = b6 ? (b5 ? injector.bf7 : injector.bf6) : (b5 ? injector.bf5 : injector.bf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.bf3 : injector.bf2) : (b5 ? injector.bf1 : injector.bf0);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if (value & mask) {\n                return injector;\n            }\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (b7) {\n                value = b6 ? (b5 ? injector.cbf7 : injector.cbf6) : (b5 ? injector.cbf5 : injector.cbf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.cbf3 : injector.cbf2) : (b5 ? injector.cbf1 : injector.cbf0);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            if (value & mask) {\n                injector = injector.parent;\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef$1(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef$$1(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer);\n            appendChild(hostParent, comment, vcRefHost.view);\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef$1(lContainerNode, vcRefHost);\n        }\n        return di.viewContainerRef;\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_lInjector) {\n            this._lInjector = _lInjector;\n        }\n        NodeInjector.prototype.get = function (token) {\n            if (token === TemplateRef) {\n                return getOrCreateTemplateRef(this._lInjector);\n            }\n            if (token === ViewContainerRef) {\n                return getOrCreateContainerRef(this._lInjector);\n            }\n            if (token === ElementRef) {\n                return getOrCreateElementRef(this._lInjector);\n            }\n            if (token === ChangeDetectorRef) {\n                return getOrCreateChangeDetectorRef(this._lInjector, null);\n            }\n            if (token === Renderer2) {\n                return getOrCreateRenderer2(this._lInjector);\n            }\n            return getOrCreateInjectable(this._lInjector, token);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef$$1(_lContainerNode, _hostNode) {\n            this._lContainerNode = _lContainerNode;\n            this._hostNode = _hostNode;\n            this._viewRefs = [];\n        }\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"element\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return getOrCreateElementRef(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"injector\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return new NodeInjector(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var parentLInjector = getParentLNode(this._hostNode).nodeInjector;\n                return parentLInjector ? new NodeInjector(parentLInjector) : new NullInjector();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef$$1.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && contextInjector) {\n                ngModuleRef = contextInjector.get(NgModuleRef, null);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef$$1.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            var views = this._lContainerNode.data[VIEWS];\n            var beforeNode = adjustedIdx + 1 < views.length ?\n                (getChildLNode(views[adjustedIdx + 1])).native :\n                this._lContainerNode.native;\n            addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef$$1.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef$$1.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef$$1.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef$$1;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef$1(hostNode.view, getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = typeAny.ngComponentDef || typeAny.ngDirectiveDef || typeAny.ngPipeDef ||\n            typeAny.ngInjectableDef || typeAny.ngInjectorDef;\n        if (def === undefined || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef$$1(_declarationParentView, elementRef, _tView, _renderer, _queries) {\n            this._declarationParentView = _declarationParentView;\n            this.elementRef = elementRef;\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n        }\n        TemplateRef$$1.prototype.createEmbeddedView = function (context, containerNode, index) {\n            var viewNode = createEmbeddedViewNode(this._tView, context, this._declarationParentView, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, viewNode, index);\n            }\n            renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n            var viewRef = new ViewRef(viewNode.data, context);\n            viewRef._lViewNode = viewNode;\n            return viewRef;\n        };\n        return TemplateRef$$1;\n    }());\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(lNode) {\n        return getOrCreateTemplateRef(getOrCreateNodeInjectorForNode(lNode));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(node, parentNode, previousNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        appendChild(parentNode, node.native || null, viewData);\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n                node.tNode.next = parentNode.tNode.child;\n                parentNode.tNode.child = node.tNode;\n            }\n            else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n                node.tNode.next = previousNode.tNode.next;\n                previousNode.tNode.next = node.tNode;\n            }\n            else {\n                node.tNode.next = null;\n            }\n            if (parentNode.view === node.view)\n                node.tNode.parent = parentNode.tNode;\n        }\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n            if (firstTemplatePass) {\n                node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n                node.dynamicLContainerNode.tNode.parent = node.tNode;\n            }\n            return node.dynamicLContainerNode;\n        }\n        return node;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n        var localPreviousNode = localParentNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                    localParentNode = element$$1;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var node = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(node, localParentNode, localPreviousNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createLNode takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var lastNodeIndex = viewData.length - 1;\n                    var textLNode = createLNode(lastNodeIndex - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousNode = localParentNode;\n                    localParentNode = getParentLNode(localParentNode);\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var index = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(index);\n                    var parentNode = getParentLNode(removedNode);\n                    removeChild(parentNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedNode.dynamicLContainerNode.tNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |--------consts--------|----------------vars----------------|------ hostVars (dir1) ------|\n     * ---------------------------------------------------------------------------------------------\n     * | nodes / refs / pipes | bindings | pure function bindings  | host bindings  | host slots |\n     * ---------------------------------------------------------------------------------------------\n     *                        ^                                    ^\n     *             TView.bindingStartIndex            TView.hostBindingStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the hostBindingStartIndex +\n     * any hostVars in directives evaluated before it.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.deep, node);\n            if (isContentQueryHost(node.tNode)) {\n                add(this.shallow, node);\n                if (node.tNode.parent && isContentQueryHost(node.tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, node);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(node.tNode) && add(this.shallow, node);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 15 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµinjectRenderer2': injectRenderer2,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadDirective': loadDirective,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind1,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStylingProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'Éµzh': sanitizeHtml,\n        'Éµzs': sanitizeStyle,\n        'Éµzss': defaultStyleSanitizer,\n        'Éµzr': sanitizeResourceUrl,\n        'Éµzc': sanitizeScript,\n        'Éµzu': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TARGET = {};\n    var NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\n    var NG_INJECTABLE_DEF = getClosureSafeProperty$1({ ngInjectableDef: TARGET }, TARGET);\n    var NG_INJECTOR_DEF = getClosureSafeProperty$1({ ngInjectorDef: TARGET }, TARGET);\n    var NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\n    var NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrap),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = component.ngComponentDef;\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = moduleType.ngModuleDef;\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (declaredWithDefs.ngPipeDef !== undefined) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (exportedTyped.ngPipeDef !== undefined) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return value.ngModuleDef !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var GET_PROPERTY_NAME$1 = {};\n    var USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return R3_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return R3_COMPILE_COMPONENT(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return R3_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Used to get the minified alias of ngBaseDef\n     */\n    var NG_BASE_DEF = Object.keys({ ngBaseDef: true })[0];\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return R3_COMPILE_NGMODULE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-beta.4+54.sha-2a672a9');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return R3_COMPILE_INJECTABLE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n    function compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        Object.defineProperty(DebugRenderer2.prototype, \"debugContext\", {\n            get: function () { return this.debugContextFactory(); },\n            enumerable: true,\n            configurable: true\n        });\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element$$1, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element$$1, renderData);\n            renderer.debugContextFactory = function () { return new Render3DebugContext(_getViewData()); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(viewData) {\n            this.viewData = viewData;\n            // The LNode will be created next and appended to viewData\n            this.nodeIndex = viewData ? viewData.length : null;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return this.viewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () {\n                if (this.nodeIndex !== null) {\n                    var lElementNode = this.view[this.nodeIndex];\n                    var nodeInjector = lElementNode.nodeInjector;\n                    if (nodeInjector) {\n                        return new NodeInjector(nodeInjector);\n                    }\n                }\n                return Injector.NULL;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () {\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var tView = this.view[TVIEW];\n                var components = tView.components;\n                return (components && components.indexOf(this.nodeIndex) == -1) ?\n                    null :\n                    this.view[this.nodeIndex].data[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            // TODO(vicb): add view providers when supported\n            get: function () {\n                var matchedDirectives = [];\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return matchedDirectives;\n                }\n                var directives = this.view[DIRECTIVES];\n                if (directives) {\n                    var currentNode = this.view[this.nodeIndex];\n                    for (var dirIndex = 0; dirIndex < directives.length; dirIndex++) {\n                        var directive = directives[dirIndex];\n                        if (directive[NG_HOST_SYMBOL] === currentNode) {\n                            matchedDirectives.push(directive.constructor);\n                        }\n                    }\n                }\n                return matchedDirectives;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () {\n                // TODO(vicb): implement retrieving references\n                throw new Error('Not implemented yet in ivy');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            get: function () {\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var lNode = this.view[this.nodeIndex];\n                return lNode.view[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(vicb): check previous implementation\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT;\n    var R3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE;\n    var R3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE;\n    var R3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE;\n    var R3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE;\n    var ivyEnable__POST_NGCC__ = ivyEnabled;\n    var GET_PROPERTY_NAME$2 = {};\n    var USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectElementRef = injectElementRef;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectRenderer2 = injectRenderer2;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.ÉµloadDirective = loadDirective;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStylingProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ÉµpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ÉµcompileComponent = compileComponent;\n    exports.ÉµcompileDirective = compileDirective;\n    exports.ÉµcompilePipe = compilePipe;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetElementContext = getElementContext;\n    exports.ÉµR3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT__POST_NGCC__;\n    exports.ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE__POST_NGCC__;\n    exports.ÉµivyEnable__POST_NGCC__ = ivyEnable__POST_NGCC__;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}