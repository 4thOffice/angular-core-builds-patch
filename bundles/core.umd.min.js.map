{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","apply","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","key","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","queueContentHooks","def","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","initHooks","checkHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","stringify$1","getNextLNode","node","viewData","view","getChildLNode","child","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkLNodeTree","startingNode","rootNode","action","renderParentNode","beforeNode","projectionNodeIndex","nextNode","parent_1","native","nodeType","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","lViewData","viewRootLNode","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","container","insertMode","parentNode","insertView","viewNode","views","lView","splice","detachView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeNode","grandParentContainer","appendChild","renderParent","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","setStyle","prop","styleStore","removeStyle","DashCase","removeProperty","setProperty","setDirty","isDirtyYes","adjustedIndex","isDirty","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiOrSingleIndex","getMultiStartIndex","setProp","setValue","setFlag","getPointers","getValue","getProp","setContextDirty","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","doShift","updateSinglePointerValues","indexStartPosition","singleIndex","initialIndexForSingle","rendererFactory","previousOrParentNode","isParent","currentQueries","directives","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","fill","CIRCULAR$1","getRenderer","getCurrentSanitizer","getViewData","getPreviousOrParentNode","getCleanup","getTViewCleanup","checkNoChangesMode","firstTemplatePass","enterView","newView","host","oldView","leaveView","creationOnly","refreshView","refreshDynamicEmbeddedViews","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","setHostBindings","hostBindings","refreshContentQueries","contentQueries","directiveDefIdx","contentQueriesRefresh","refreshChildComponents","components","componentRefresh","bindings","defs","dirIndex","executeInitAndContentHooks","createLViewData","sanitizer","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","tData","previousTNode","dynamicContainerNode","resetApplicationState","rf","_isParent","_previousOrParentNode","namespaceHTML","template","renderComponentOrTemplate","hostView","componentOrContext","begin","getRenderFlags","end","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","createElement","createElementNS","setUpAttributes","createDirectivesAndLocals","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","start","tDirectives","directiveCreate","saveResolvedLocalsInData","registry","directiveRegistry","diPublic","instance","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","pipes","viewQuery","ngPrivateData","createTView","viewIndex","bindingStartIndex","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","queueLifecycleHooks","elementAttribute","NO_CHANGE","element_1","load","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassNamed","className","lElement","addClass","classList","add","removeClass","remove","elementClass","elementStyling","styles","createStylingContextTemplate","initialStyleDeclarations","initialStyles","indexLookup","hasPassedDeclarations","allProps","totalProps","maxLength","multiStart","indexForInitial","indexForMulti","indexForSingle","elementStylingApply","getStylingContext","stylingContext","allocStylingContext","templateStyleContext","renderStyles","isContextDirty","multiStartIndex","styleToApply","elementStyleProp","styleIndex","suffixOrSanitizer","valueToAdd","updateStyleProp","currValue","currFlag","valueForMulti","multiDirty","singleDirty","elementStyle","updateStyleMap","propsToApply","dirty","ctxIndex","propIndex","newProp","newValue","indexOfEntry","textNode","textBinding","existingNode","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveIndex","componentView","addToViewTree","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","enumerable","attributes","createLContainer","parentLNode","isForViewContainerRef","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","nodeIndex","selectorIndex","nodeToProject","projectedView","grandparent","currentComponentHost","firstProjectedNode","lNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","tickRootContext","rootComponent","_getComponentHostLElementNode","getRootView","detectChanges","hostTView","createViewQuery","updateViewQuery","initBindings","bindingUpdated","reserveSlots","numSlots","moveBindingIndexToReservedSlot","offset","currentSlot","restoreBindingIndex","interpolationV","different","content","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","store","loadInternal","loadDirective","consumeBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","checkAndUpdateBinding","exp1","exp2","exp3","exp4","getTView","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","item","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_this","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","configurable","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","has","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","k","IterableDiffers","factories","copied","extend","find","iterable","f","getTypeNameForDebugging","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getClosureSafeProperty$1","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","R3_COMPILE_INJECTABLE","preR3InjectableCompile","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","metadata","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","ngOnDestroy","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","ngInjectorDef","ngModule","imported","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","ViewEncapsulation","KeyValueDiffers","kv","ChangeDetectorRef","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","encapsulation","None","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding$1","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","errorHandler","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","_b","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","_toStringWithNull","defineComponent","componentDefinition","pipeTypes","directiveTypes","declaredInputs","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","features","feature","ngComponentDef","ngDirectiveDef","ngPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","EMPTY$1","secondary","newLookup","minifiedKey","declaredName","defineDirective","definePipe","pipeDef","pure","fillProperties","PRIVATE_PREFIX","NgOnChangesFeature","definition","declaredToMinifiedInputs","proto","_loop_1","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","ViewRef","_view","callback","markForCheck","detach","reattach","checkNoChanges","detachFromAppRef","_appRef","attachToAppRef","appRef","EmbeddedViewRef","_super","_viewContainerRef","_lViewNode","attachToViewContainerRef","vcRef","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","directiveInject","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","injectTemplateRef","getOrCreateTemplateRef","hostTNode","TemplateRef","getOrCreateElementRef","injectViewContainerRef","getOrCreateContainerRef","vcRefHost","hostParent","ViewContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","currentNode","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","injectAttribute","attrNameToInject","startInjector","ReadFromInjectorFn","read","ElementRef","nativeElement","_lContainerNode","_viewRefs","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","notImplemented","insert","move","newIndex","shift","_tView","_renderer","_queries","createEmbeddedViewNode","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","rootSelectorOrNode","ElementRef$1","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","ComponentFactory$$1","componentDef","parentComponentInjector","elementNode","componentTag","ComponentRef$1","ComponentRef$$1","destroyCbs","location","i18nTagRegex","appendI18nNode","previousNode","NgModuleRef","NgModuleFactory","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","componentFactoryResolver","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","NgModuleFactory$$1","moduleType","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","LQueries_","deep","shallow","track","queryList","predicate","descend","createQuery","clone","query","containerValues","clonedQuery","list","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getCurrentQueries","QueryType","queryRefresh","angularCoreEnv","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","injectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµNgOnChangesFeature","ÉµInheritDefinitionFeature","InheritDefinitionFeature","superType","getSuperType","superDef","e_1","isComponentDef","prevHostBindings_1","superHostBindings_1","elementIndex","features_1","features_1_1","e_1_1","return","superPrototype","Éµa","Éµb","ÉµC","ÉµcR","Éµcr","Éµd","ÉµNH","ÉµNM","ÉµNS","ÉµE","Éµe","ÉµEe","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","ÉµiV","Éµk","Éµkn","ÉµL","Éµld","ÉµP","Éµp","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","ÉµpD","ÉµPp","ÉµQ","ÉµqR","ÉµrS","Éµs","Éµsm","Éµsp","Éµsa","ÉµT","Éµt","ÉµV","Éµv","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_INJECTABLE_DEF","NG_INJECTOR_DEF","NG_PIPE_DEF","NG_MODULE_DEF","TemplateRef$1","ViewContainerRef$1","getReflect","reflectDependencies","convertDependencies","reflectDependency","LiteralExpr","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$3","patchComponentDefWithScope","transitiveScopesFor","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","flatten$1","out","expandModuleWithProviders","isModuleWithProviders","directiveMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","split","piece","trim","isUseClassProvider","GET_PROPERTY_NAME$2","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","compileInjectable","hasAProvider","expression","computeProvidedIn","jitExpression","Directive","compileDirective","constantPool","ConstantPool","sourceMapUrl","compileDirectiveFromMetadata","makeBindingParser","Component","c","Default","compileComponent","maybeQueueResolutionOfComponentResources","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","hasSelectorScope","ngSelectorScope","Pipe","compilePipe","compilePipeFromMetadata","Input","Output","HostBinding","HostListener","NgModule","compileNgModule","emitInline","compileInjector","declaration","preR3NgModuleCompile","VERSION","full","major","minor","patch","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","merge","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","componentRef","ApplicationRef_Factory","el","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef$1","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","providerTokens","classes","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","ApplicationModule_Factory","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","childNode","Node","ELEMENT_NODE","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","tagSet","tags","_c","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","elDef","selectorOrNode","ns","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","setElementStyle","STYLE","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","BRAND","bypassSanitizationTrustString","trustedString","trusted","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµPublicFeature","PublicFeature","ÉµmarkDirty","markDirty","ÉµNC","ÉµQr","registerContentQuery","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","Éµql","loadQueryList","queryListIdx","Éµst","ÉµwhenRendered","whenRendered","getRootContext","ÉµiA","i18nApply","instructions","localParentNode","localPreviousNode","instruction","element$$1","textRNode","removedNode","ÉµiEM","i18nExpMapping","translation","placeholders","staticText","ÉµiI","i18nInterpolation","numberOfExp","ÉµIV","i18nInterpolationV","ÉµiM","i18nMapping","elements","expressions","tmplContainers","lastChildIndex","generateMappingInstructions","translationParts","tmplIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","phIndex","tmplElements","phKeys","ph","tmplExpressions","index_2","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-beta.3+113.sha-97277bc\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakeable Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, chainFn, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            var TypeDecorator = function TypeDecorator(cls) {\n                typeFn && typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                return cls;\n            };\n            if (chainFn)\n                chainFn(TypeDecorator);\n            return TypeDecorator;\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n            };\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * `CheckOnce` means that after calling detectChanges the mode of the change detector\n         * will become `Checked`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * `Checked` means that the change detector should be skipped until its mode changes to\n         * `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n         * will remain `CheckAlways`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * `Detached` means that the change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * `Errored` means that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state will no longer detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * `Destroyed` means that the change detector is destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 16;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 14 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {\n        function ngDevModeResetPerfCounters() {\n            global['ngDevMode'] = {\n                firstTemplatePass: 0,\n                tNode: 0,\n                tView: 0,\n                rendererCreateTextNode: 0,\n                rendererSetText: 0,\n                rendererCreateElement: 0,\n                rendererAddEventListener: 0,\n                rendererSetAttribute: 0,\n                rendererRemoveAttribute: 0,\n                rendererSetProperty: 0,\n                rendererSetClassName: 0,\n                rendererAddClass: 0,\n                rendererRemoveClass: 0,\n                rendererSetStyle: 0,\n                rendererRemoveStyle: 0,\n                rendererDestroy: 0,\n                rendererDestroyNode: 0,\n                rendererMoveNode: 0,\n                rendererRemoveNode: 0,\n            };\n        }\n        ngDevModeResetPerfCounters();\n        return ngDevModeResetPerfCounters;\n    })(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n        typeof global != 'undefined' && global));\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Must use this method for CD (instead of === ) since NaN !== NaN\n    */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     *  Function that throws a \"not implemented\" error so it's clear certain\n     *  behaviors/methods aren't yet ready.\n     *\n     * @returns Not implemented error\n     */\n    function notImplemented() {\n        return new Error('NotImplemented');\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return viewData[node.tNode.child.index];\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = node.data[CONTAINER_INDEX];\n            return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n        }\n        var parent = node.tNode.parent;\n        return parent ? node.view[parent.index] : node.view[HOST_NODE];\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkLNodeTree.\n     *\n     * This is deliberately created outside of walkLNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered. This prevents walking past that node.\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        var projectionNodeIndex = -1;\n        while (node) {\n            var nextNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            var nodeType = node.tNode.type;\n            if (nodeType === 3 /* Element */) {\n                // Execute the action\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                if (node.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (nodeType === 0 /* Container */) {\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n                if (nextNode) {\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (nodeType === 1 /* Projection */) {\n                var componentHost = findComponentHost(node.view);\n                var head = componentHost.tNode.projection[node.tNode.projection];\n                projectionNodeStack[++projectionNodeIndex] = node;\n                nextNode = head ? componentHost.data[PARENT][head.index] : null;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            if (nextNode === null) {\n                nextNode = getNextLNode(node);\n                // this last node was projected, we need to get back down to its projection node\n                if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                    nextNode = getNextLNode(projectionNodeStack[projectionNodeIndex--]);\n                }\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (node && !nextNode) {\n                    node = getParentLNode(node);\n                    if (node === null || node === rootNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (!node.tNode.next && nodeType === 0 /* Container */) {\n                        beforeNode = node.native;\n                    }\n                    nextNode = getNextLNode(node);\n                }\n            }\n            node = nextNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        var lView = viewNode.data;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container'S host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (viewNode.tNode.index === -1) {\n            lView[CONTAINER_INDEX] = container.tNode.parent.index;\n            viewNode.view = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!container.tNode.detached) {\n            addRemoveViewFromContainer(container, viewNode, false);\n        }\n        // Notify query that view has been removed\n        var removedLView = viewNode.data;\n        if (removedLView[QUERIES]) {\n            removedLView[QUERIES].removeView();\n        }\n        removedLView[CONTAINER_INDEX] = -1;\n        viewNode.view = null;\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = viewData[cleanup[i + 1]].native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(parent, currentView) {\n        // We can only insert into a Component or View. Any other type should be an Error.\n        ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 2 /* View */);\n        if (parent.tNode.type === 3 /* Element */) {\n            // Parent is an element.\n            if (parent.view !== currentView) {\n                // If the Parent view is not the same as current view than we are inserting across\n                // Views. This happens when we insert a root element of the component view into\n                // the component host element and it should always be eager.\n                return true;\n            }\n            // Parent elements can be a component which may have projection.\n            if (parent.data === null) {\n                // Parent is a regular non-component element. We should eagerly insert into it\n                // since we know that this relationship will never be broken.\n                return true;\n            }\n            else {\n                // Parent is a Component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would than move it to its final destination.\n                return false;\n            }\n        }\n        else {\n            // Parent is a View.\n            ngDevMode && assertNodeType(parent, 2 /* View */);\n            // Because we are inserting into a `View` the `View` may be disconnected.\n            var grandParentContainer = getParentLNode(parent);\n            if (grandParentContainer == null) {\n                // The `View` is not inserted into a `Container` we have to delay insertion.\n                return false;\n            }\n            ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n            if (grandParentContainer.data[RENDER_PARENT] == null) {\n                // The parent `Container` itself is disconnected. So we have to delay.\n                return false;\n            }\n            else {\n                // The parent `Container` is in inserted state, so we can eagerly insert into\n                // this location.\n                return true;\n            }\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            var renderer = currentView[RENDERER];\n            if (parent.tNode.type === 2 /* View */) {\n                var container = getParentLNode(parent);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(parent);\n                var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n                isProceduralRenderer(renderer) ?\n                    renderer.insertBefore(renderParent.native, child, beforeNode) :\n                    renderParent.native.insertBefore(child, beforeNode, true);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                    parent.native.appendChild(child);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parent The parent from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n                parent.native.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView, renderParent) {\n        appendChild(currentParent, node.native, currentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, node.native);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(templateStyleContext) {\n        // each instance gets a copy\n        return templateStyleContext.slice();\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     */\n    function createStylingContextTemplate(initialStyleDeclarations) {\n        var initialStyles = [null];\n        var context = [initialStyles, 0];\n        var indexLookup = {};\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 0 /* INITIAL_STYLES */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStyles.push(value);\n                        indexLookup[prop] = initialStyles.length - 1;\n                    }\n                    else {\n                        // it's safe to use `0` since the default initial value for\n                        // each property will always be null (which is at position 0)\n                        indexLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        var allProps = Object.keys(indexLookup);\n        var totalProps = allProps.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 2 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 2 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 2 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 2 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < allProps.length; i++) {\n            var prop = allProps[i];\n            var indexForInitial = indexLookup[prop];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            setFlag(context, indexForSingle, pointers(0 /* None */, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setFlag(context, indexForMulti, pointers(1 /* Dirty */, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't reference an initial style\n        // value\n        setFlag(context, 1 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStyles.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    /**\n     * Sets and resolves all `multi` styles on an `StylingContext` so that they can be\n     * applied to the element once `renderStyles` is called.\n     *\n     * All missing styles (any values that are not provided in the new `styles` param)\n     * will resolve to `null` within their respective positions in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStyleMap(context, styles) {\n        var propsToApply = styles ? Object.keys(styles) : EMPTY_ARR;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles are\n        // off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propsToApply.length) {\n            var flag = getPointers(context, ctxIndex);\n            var prop = getProp(context, ctxIndex);\n            var value = getValue(context, ctxIndex);\n            var newProp = propsToApply[propIndex];\n            var newValue = styles[newProp];\n            if (prop === newProp) {\n                if (value !== newValue) {\n                    setValue(context, ctxIndex, newValue);\n                    var initialValue = getInitialValue(context, flag);\n                    // there is no point in setting this to dirty if the previously\n                    // rendered value was being referenced by the initial style (or null)\n                    if (initialValue !== newValue) {\n                        setDirty(context, ctxIndex, true);\n                        dirty = true;\n                    }\n                }\n            }\n            else {\n                var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                if (indexOfEntry > 0) {\n                    // it was found at a later point ... just swap the values\n                    swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                    if (value !== newValue) {\n                        setValue(context, ctxIndex, newValue);\n                        dirty = true;\n                    }\n                }\n                else {\n                    // we only care to do this if the insertion is in the middle\n                    var doShift = ctxIndex < context.length;\n                    insertNewMultiProperty(context, ctxIndex, newProp, newValue);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles and in this case the\n        // goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var value = context[ctxIndex + 2 /* ValueOffset */];\n            if (value !== null) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over property in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        while (propIndex < propsToApply.length) {\n            var prop = propsToApply[propIndex];\n            var value = styles[prop];\n            context.push(1 /* Dirty */, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single CSS style on a property on an `StylingContext` so that they\n     * can be applied to the element once `renderElementStyles` is called.\n     *\n     * Note that prop-level styles are considered higher priority than styles that are applied\n     * using `updateStyleMap`, therefore, when styles are rendered then any styles that\n     * have been applied using this function will be considered first (then multi values second\n     * and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 2 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (currValue !== value) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (value == null && valueForMulti) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styles using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStyleMap` and `updateStyleProp`) onto the\n     * provided element using the provided renderer. Just before the styles\n     * are rendered a final key/value style map will be assembled.\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns an object literal. `{ color: 'red', height: 'auto'}`.\n     */\n    function renderStyles(lElement, context, renderer, styleStore) {\n        if (isContextDirty(context)) {\n            var native = lElement.native;\n            var multiStartIndex = getMultiStartIndex(context);\n            for (var i = 2 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isInSingleRegion = i < multiStartIndex;\n                    var styleToApply = value;\n                    // STYLE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && styleToApply == null) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        styleToApply = getValue(context, multiIndex);\n                    }\n                    // STYLE DEFER CASE 2: Use the initial value if all else fails (is null)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    if (styleToApply == null) {\n                        styleToApply = getInitialValue(context, flag);\n                    }\n                    setStyle(native, prop, styleToApply, renderer, styleStore);\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `styleStore` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param styleStore an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, styleStore) {\n        if (styleStore) {\n            styleStore[prop] = value;\n        }\n        else if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 2 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 2 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 1 /* Dirty */) | (staticIndex << 1 /* BitCountSize */) |\n            (dynamicIndex << (15 /* BitCountSize */ + 1 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[0 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 1 /* BitCountSize */) & 32767 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (15 /* BitCountSize */ + 1 /* BitCountSize */)) & 32767 /* BitMask */;\n        return index >= 2 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[1 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var updatedFlag = pointers(isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, name, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, 1 /* Dirty */, name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Directive and element indices for top-level directive.\n     *\n     * Saved here to avoid re-instantiating an array on every change detection run.\n     *\n     * Note: Element is not actually stored at index 0 because of the LViewData\n     * header, but the host bindings function expects an index that is NOT adjusted\n     * because it will ultimately be fed to instructions like elementProperty.\n     */\n    var _ROOT_DIRECTIVE_INDICES = [0, 0];\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    var rendererFactory;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (inb this previousOrParentNode points to a node on which we\n     * create content queries).\n     */\n    function getCurrentQueries(QueryType) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries ||\n            (currentQueries =\n                (previousOrParentNode.queries && previousOrParentNode.queries.clone() ||\n                    new QueryType()));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = newView;\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = -1;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings,\n     * refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshView() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        setHostBindings(tView.hostBindings);\n        refreshContentQueries(tView);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i += 2) {\n                componentRefresh(components[i], components[i + 1]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        return [\n            tView,\n            viewData,\n            null,\n            null,\n            flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n            null,\n            -1,\n            null,\n            null,\n            context,\n            viewData && viewData[INJECTOR$1],\n            renderer,\n            sanitizer || null,\n            null,\n            -1,\n            null,\n        ];\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state, queries) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            queries: queries,\n            tNode: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n            parent && parent.queries && parent.queries.child();\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null, queries);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            ngDevMode && assertDataNext(adjustedIndex);\n            var tData = tView.data;\n            viewData[adjustedIndex] = node;\n            // Every node adds a value to the static data array to avoid a sparse array\n            if (adjustedIndex >= tData.length) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                currentQueries = null;\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = null;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewNode(tView, context, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        isParent = true;\n        previousOrParentNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n        return viewNode;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        try {\n            isParent = true;\n            previousOrParentNode = null;\n            oldView = enterView(viewNode.data, viewNode);\n            namespaceHTML();\n            tView.template(rf, context);\n            if (rf & 2 /* Update */) {\n                refreshView();\n            }\n            else {\n                viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n            }\n        }\n        finally {\n            // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n            // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n            var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n            leaveView(oldView, isCreationOnly);\n            isParent = _isParent;\n            previousOrParentNode = _previousOrParentNode;\n        }\n        return viewNode;\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (template) {\n                namespaceHTML();\n                template(getRenderFlags(hostView), componentOrContext);\n                refreshView();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(_ROOT_DIRECTIVE_INDICES);\n                componentRefresh(0, HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native;\n        if (isProceduralRenderer(renderer)) {\n            native = renderer.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = renderer.createElement(name);\n            }\n            else {\n                native = renderer.createElementNS(_currentNamespace, name);\n            }\n        }\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(localRefs);\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the current node\n     */\n    function createDirectivesAndLocals(localRefs) {\n        var node = previousOrParentNode;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData();\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(dirIndex) {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(dirIndex, viewData.length - 1);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (count > 0) {\n            var start = tNode.flags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData() {\n        var localNames = previousOrParentNode.tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? previousOrParentNode.native : directives[index];\n                viewData.push(value);\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param template The template from which to get static data\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(template, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return template.ngPrivateData ||\n            (template.ngPrivateData = createTView(-1, template, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, template, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        return {\n            id: viewIndex,\n            template: template,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: -1,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        var node = previousOrParentNode;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n            }\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        var queries = previousOrParentNode.queries;\n        queries && queries.addNode(previousOrParentNode);\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = load(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = load(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassNamed(index, className, value) {\n        if (value !== NO_CHANGE) {\n            var lElement = load(index);\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                    lElement.native.classList.add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                    lElement.native.classList.remove(className);\n            }\n        }\n    }\n    /**\n     * Set the `className` property on a DOM element.\n     *\n     * This instruction is meant to handle the `[class]=\"exp\"` usage.\n     *\n     * `elementClass` instruction writes the value to the \"element's\" `className` property.\n     *\n     * @param index The index of the element to update in the data array\n     * @param value A value indicating a set of classes which should be applied. The method overrides\n     *   any existing classes. The value is stringified (`toString`) before it is applied to the\n     *   element.\n     */\n    function elementClass(index, value) {\n        if (value !== NO_CHANGE) {\n            // TODO: This is a naive implementation which simply writes value to the `className`. In the\n            // future\n            // we will add logic here which would work with the animation code.\n            var lElement = load(index);\n            ngDevMode && ngDevMode.rendererSetClassName++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n                lElement.native['className'] = stringify$1(value);\n        }\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styles A key/value map of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     */\n    function elementStyling(index, styles) {\n        var tNode = load(index - 1).tNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(styles);\n        }\n        // Allocate space but leave null for lazy creation.\n        viewData[index + HEADER_OFFSET] = null;\n        if (styles && styles.length) {\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: 'red' \">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!stylingContext) {\n            var lElement = load(index - 1);\n            var tNode = lElement.tNode;\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] = allocStylingContext(tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyles(load(index - 1), getStylingContext(index), renderer);\n    }\n    function elementStyleProp(index, styleIndex, value, suffixOrSanitizer) {\n        var valueToAdd = null;\n        if (value) {\n            valueToAdd =\n                typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n            if (typeof suffixOrSanitizer == 'string') {\n                valueToAdd = valueToAdd + suffixOrSanitizer;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param value A value indicating if a given style should be added or removed.\n     *   The expected shape of `value` is an object where keys are style names and the values\n     *   are their corresponding values to set. If value is null, then the style is removed.\n     */\n    function elementStyle(index, value) {\n        updateStyleMap(getStylingContext(index), value);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = load(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(directiveDefIdx, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, tNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck(directiveIndex);\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 14 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n            parentLNode :\n            null;\n        if (renderParent && renderParent.tNode.type === 2 /* View */) {\n            renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n        }\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode.\n     *\n     * Only `LViewNodes` can go into `LContainerNodes`.\n     *\n     * @param index The index of the container in the data array\n     * @param template Optional inline template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function container(index, template, tagName, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        if (firstTemplatePass) {\n            node.tNode.tViews = template ?\n                createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry, null) :\n                [];\n        }\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        var queries = node.queries;\n        if (queries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = queries.container();\n        }\n        createDirectivesAndLocals(localRefs);\n        isParent = false;\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        if (queries) {\n            // check if a given container node matches\n            queries.addNode(node);\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = load(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] =\n                createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshView();\n        isParent = false;\n        previousOrParentNode = viewData[HOST_NODE];\n        leaveView(viewData[PARENT]);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param directiveIndex Directive index in LViewData[DIRECTIVES]\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(directiveIndex, adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            ngDevMode && assertDataInRange(directiveIndex, directives);\n            detectChangesInternal(hostView, element, directives[directiveIndex]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentHost(viewData);\n        if (!componentNode.tNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.tNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.tNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (node.tNode.projection === null)\n            node.tNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var parent = getParentLNode(node);\n        if (canInsertNativeNode(parent, viewData)) {\n            var componentNode = findComponentHost(viewData);\n            var nodeToProject = componentNode.tNode.projection[selectorIndex];\n            var projectedView = componentNode.view;\n            var projectionNodeIndex = -1;\n            var grandparent = void 0;\n            var renderParent = parent.tNode.type === 2 /* View */ ?\n                (grandparent = getParentLNode(parent)) &&\n                    grandparent.data[RENDER_PARENT] :\n                parent;\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentHost = findComponentHost(projectedView);\n                    var firstProjectedNode = currentComponentHost.tNode.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                        nodeToProject = firstProjectedNode;\n                        projectedView = currentComponentHost.view;\n                        continue;\n                    }\n                }\n                else {\n                    var lNode = projectedView[nodeToProject.index];\n                    lNode.tNode.flags |= 8192 /* isProjected */;\n                    appendProjectedNode(lNode, parent, viewData, renderParent);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                    // move down into the view of the component we're projecting right now\n                    var lNode = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = lNode.tNode;\n                    projectedView = lNode.view;\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var hostTView = hostView[TVIEW];\n        var template = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            template(getRenderFlags(hostView), component);\n            refreshView();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     *  Initializes the binding start index. Will get inlined.\n     *\n     *  This function must be called before any binding related function is called\n     *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n     */\n    function initBindings() {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n        if (tView.bindingStartIndex === -1) {\n            tView.bindingStartIndex = viewData.length;\n        }\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(value) ? value : NO_CHANGE;\n    }\n    /**\n     * Reserves slots for pure functions (`pureFunctionX` instructions)\n     *\n     * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n     *\n     *  ----------------------------------------------------------------------------\n     *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n     *  ----------------------------------------------------------------------------\n     *                                         ^\n     *                                         TView.bindingStartIndex\n     *\n     * Pure function instructions are given an offset from TView.bindingStartIndex.\n     * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n     * are stored.\n     *\n     * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n     */\n    function reserveSlots(numSlots) {\n        // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n        // whether it happens or not during the first change detection pass - pure functions checks\n        // might be skipped when short-circuited.\n        viewData.length += numSlots;\n        viewData.fill(NO_CHANGE, -numSlots);\n        // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n        // called first in the update section.\n        initBindings();\n    }\n    /**\n     * Sets up the binding index before executing any `pureFunctionX` instructions.\n     *\n     * The index must be restored after the pure function is executed\n     *\n     * {@link reserveSlots}\n     */\n    function moveBindingIndexToReservedSlot(offset) {\n        var currentSlot = viewData[BINDING_INDEX];\n        viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n        return currentSlot;\n    }\n    /**\n     * Restores the binding index to the given value.\n     *\n     * This function is typically used to restore the index after a `pureFunctionX` has\n     * been executed.\n     */\n    function restoreBindingIndex(index) {\n        viewData[BINDING_INDEX] = index;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation bindings with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRange(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Gets the current binding value and increments the binding index. */\n    function consumeBinding() {\n        ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n        ngDevMode &&\n            assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[viewData[BINDING_INDEX]++];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        if (viewData[BINDING_INDEX] === -1)\n            initBindings();\n        var bindingIndex = viewData[BINDING_INDEX];\n        if (bindingIndex >= viewData.length) {\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else {\n            viewData[BINDING_INDEX]++;\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding if changed, then returns the latest value. */\n    function checkAndUpdateBinding(value) {\n        bindingUpdated(value);\n        return value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(exp1, exp2) {\n        var different = bindingUpdated(exp1);\n        return bindingUpdated(exp2) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(exp1, exp2);\n        return bindingUpdated2(exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    /**\n     * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n     *\n     * If not, they might not have been actually reserved.\n     */\n    function assertReservedSlotInitialized(slotOffset, numSlots) {\n        if (firstTemplatePass) {\n            var startIndex = tView.bindingStartIndex - slotOffset;\n            for (var i = 0; i < numSlots; i++) {\n                assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n            }\n        }\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    var ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        var component;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = baseDirectiveCreate(0, componentDef.factory(), componentDef));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(ROOT_DIRECTIVE_INDICES);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n        return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, throw.\n            if (def == null) {\n                throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding$1(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            diPublic: null,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || [],\n            declarations: def.declarations || [],\n            imports: def.imports || [],\n            exports: def.exports || [],\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    var EMPTY$1 = {};\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        var _loop_1 = function () {\n            var e_1, _a;\n            if (isComponentDef(definition)) {\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                superDef = superType.ngDirectiveDef;\n            }\n            if (superDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType && !superDef) {\n            _loop_1();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    }\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () { destroyLView(this._view); };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef(viewNode, template, context) {\n            var _this = _super.call(this, viewNode.data, context) || this;\n            _this._viewContainerRef = null;\n            _this._lViewNode = viewNode;\n            return _this;\n        }\n        EmbeddedViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            _super.prototype.destroy.call(this);\n        };\n        EmbeddedViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        return EmbeddedViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        // This means that after 255, some directives will share slots, leading to some false positives\n        // when checking for a directive's presence.\n        var bloomBit = id % BLOOM_SIZE;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        if (bloomBit < 128) {\n            // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n            bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n                (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n        }\n        else {\n            bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n                (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertDefined(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 14 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Searches for an instance of the given directive type up the injector tree and returns\n     * that instance if found.\n     *\n     * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n     * checks that bit against the bloom filter structure to identify an injector that might have\n     * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n     * for a match.\n     *\n     * If not found, it will propagate up to the next parent injector until the token\n     * is found or the top is reached.\n     *\n     * @param di Node injector where the search should start\n     * @param token The directive type to search for\n     * @param flags Injection flags (e.g. CheckParent)\n     * @returns The instance found\n     */\n    function getOrCreateInjectable(di, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic). If there is no hash, fall back to the module injector.\n        if (bloomHash === null) {\n            var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n            var formerInjector = setCurrentInjector(moduleInjector);\n            try {\n                return inject(token, flags);\n            }\n            finally {\n                setCurrentInjector(formerInjector);\n            }\n        }\n        else {\n            var injector = di;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return node.view[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        // No directive was found for the given token.\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Given a directive type, this function returns the bit in an injector's bloom filter\n     * that should be used to determine whether or not the directive is present.\n     *\n     * When the directive was added to the bloom filter, it was given a unique ID that can be\n     * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n     * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n     * BLOOM_SIZE is reached).\n     *\n     * @param type The directive type\n     * @returns The bloom bit to check for the directive\n     */\n    function bloomHashBit(type) {\n        var id = type[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id % BLOOM_SIZE : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                    (bloomBit < 96 ? injector.bf2 : injector.bf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                    (bloomBit < 224 ? injector.bf6 : injector.bf7);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if ((value & mask) === mask) {\n                return injector;\n            }\n            else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                    (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                    (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            injector = (value & mask) ? injector.parent : null;\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer, null);\n            appendChild(hostParent, comment, vcRefHost.view);\n            if (vcRefHost.queries) {\n                lContainerNode.queries = vcRefHost.queries.container();\n            }\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef(lContainerNode);\n        }\n        return di.viewContainerRef;\n    }\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef(_lContainerNode) {\n            this._lContainerNode = _lContainerNode;\n            this._viewRefs = [];\n        }\n        ViewContainerRef.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n            throw notImplemented();\n        };\n        ViewContainerRef.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            var views = this._lContainerNode.data[VIEWS];\n            var beforeNode = adjustedIdx + 1 < views.length ?\n                (getChildLNode(views[adjustedIdx + 1])).native :\n                this._lContainerNode.native;\n            addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            var lViewNode = detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef(getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef(elementRef, _tView, _renderer, _queries) {\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n            this.elementRef = elementRef;\n        }\n        TemplateRef.prototype.createEmbeddedView = function (context, containerNode, index) {\n            var viewNode = createEmbeddedViewNode(this._tView, context, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, viewNode, index);\n            }\n            renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n            return new EmbeddedViewRef(viewNode, this._tView.template, context);\n        };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (parentComponentInjector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngDevMode && assertDefined(ngModule, 'ngModule should always be defined');\n            var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : document;\n            var hostNode = locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule.injector.get(ROOT_CONTEXT);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null, null), null, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            // TODO(misko): this is the wrong injector here.\n            return new ComponentRef$1(this.componentType, component, rootView, ngModule.injector, hostNode);\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n             * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n             * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n             * given component won't work (as these are always called at the level above a component).\n             *\n             * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n             * component instance. So passing in the root view (1 level above the component) is sufficient.\n             * We might  want to think about creating a fake component for the top level? Or overwrite\n             * detectChanges with a function that calls tickRootContext? */\n            _this.hostView = _this.changeDetectorRef = new ViewRef(rootView, instance);\n            _this.injector = injector;\n            _this.location = new ElementRef$1(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /\\{\\$([^}]+)\\}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param tmplContainers An array of template container placeholders whose content should be ignored\n     * when generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, tmplContainers, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var instructions = [];\n        generateMappingInstructions(0, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param index The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param tmplContainers An array of template container placeholders whose content should be ignored\n     * when generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex) {\n        var tmplIndex = instructions.length;\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        instructions.push(tmplInstructions);\n        for (; index < translationParts.length; index++) {\n            var value = translationParts[index];\n            // Odd indexes are placeholders\n            if (index & 1) {\n                var phIndex = void 0;\n                if (elements && elements[tmplIndex] &&\n                    typeof (phIndex = elements[tmplIndex][value]) !== 'undefined') {\n                    // The placeholder represents a DOM element\n                    // Add an instruction to move the element\n                    tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                    phVisited.push(value);\n                    openedTagCount++;\n                }\n                else if (expressions && expressions[tmplIndex] &&\n                    typeof (phIndex = expressions[tmplIndex][value]) !== 'undefined') {\n                    // The placeholder represents an expression\n                    // Add an instruction to move the expression\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else { // It is a closing tag\n                    tmplInstructions.push(-2147483648 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (typeof phIndex !== 'undefined' && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (tmplContainers && tmplContainers.indexOf(value) !== -1 &&\n                    tmplContainers.indexOf(value) >= tmplIndex) {\n                    index = generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Check if some elements from the template are missing from the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index_1 = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index_1 | -1610612736 /* RemoveNode */);\n                        if (index_1 > maxIndex) {\n                            maxIndex = index_1;\n                        }\n                    }\n                }\n            }\n        }\n        // Check if some expressions from the template are missing from the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index_2 = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index_2.toString(2).length, 28, \"Index \" + index_2 + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index_2 | -1610612736 /* RemoveNode */);\n                        if (index_2 > maxIndex) {\n                            maxIndex = index_2;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                // We consider those additional placeholders as expressions because we don't care about\n                // their children, all we need to do is to append them\n                tmplInstructions.push(i | 1610612736 /* Expression */);\n            }\n        }\n        return index;\n    }\n    function appendI18nNode(node, parentNode, previousNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = getViewData();\n        appendChild(parentNode, node.native || null, viewData);\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n                node.tNode.next = parentNode.tNode.child;\n                parentNode.tNode.child = node.tNode;\n            }\n            else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n                node.tNode.next = previousNode.tNode.next;\n                previousNode.tNode.next = node.tNode;\n            }\n            else {\n                node.tNode.next = null;\n            }\n            if (parentNode.view === node.view)\n                node.tNode.parent = parentNode.tNode;\n        }\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            // (node.native as RComment).textContent = 'test';\n            // console.log(node.native);\n            appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n            if (firstTemplatePass) {\n                node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n                node.dynamicLContainerNode.tNode.parent = node.tNode;\n            }\n            return node.dynamicLContainerNode;\n        }\n        return node;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], -1, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n        var localPreviousNode = localParentNode;\n        resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                    localParentNode = element$$1;\n                    break;\n                case 1610612736 /* Expression */:\n                    var expr = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(expr, localParentNode, localPreviousNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createLNode takes a raw index (not adjusted by header offset).\n                    var textLNode = createLNode(viewData.length - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                    resetApplicationState();\n                    break;\n                case -2147483648 /* CloseNode */:\n                    localPreviousNode = localParentNode;\n                    localParentNode = getParentLNode(localParentNode);\n                    break;\n                case -1610612736 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var index = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(index);\n                    var parentNode = getParentLNode(removedNode);\n                    removeChild(parentNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedNode.dynamicLContainerNode.tNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation(instructions, numberOfExp, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var different = bindingUpdated(v0);\n        if (numberOfExp > 1) {\n            different = bindingUpdated(v1) || different;\n            if (numberOfExp > 2) {\n                different = bindingUpdated(v2) || different;\n                if (numberOfExp > 3) {\n                    different = bindingUpdated(v3) || different;\n                    if (numberOfExp > 4) {\n                        different = bindingUpdated(v4) || different;\n                        if (numberOfExp > 5) {\n                            different = bindingUpdated(v5) || different;\n                            if (numberOfExp > 6) {\n                                different = bindingUpdated(v6) || different;\n                                if (numberOfExp > 7) {\n                                    different = bindingUpdated(v7) || different;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            var value = void 0;\n            // Odd indexes are placeholders\n            if (i & 1) {\n                switch (instructions[i]) {\n                    case 0:\n                        value = v0;\n                        break;\n                    case 1:\n                        value = v1;\n                        break;\n                    case 2:\n                        value = v2;\n                        break;\n                    case 3:\n                        value = v3;\n                        break;\n                    case 4:\n                        value = v4;\n                        break;\n                    case 5:\n                        value = v5;\n                        break;\n                    case 6:\n                        value = v6;\n                        break;\n                    case 7:\n                        value = v7;\n                        break;\n                }\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param pureFn Function that returns a value\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = getCreationMode() ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg) : pureFn()) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated(exp) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated2(exp1, exp2) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated2(exp1, exp2);\n        var value = bindingUpdated(exp3) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated(exp5) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated2(exp5, exp6) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        different = bindingUpdated2(exp5, exp6) || different;\n        var value = bindingUpdated(exp7) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(exps[i]) && (different = true);\n        }\n        var value = different ? checkAndUpdateBinding(pureFn.apply(thisArg, exps)) : consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * @usageNotes\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n         * delivers events synchronously or asynchronously.\n         *\n         * @param isAsync By default, events are delivered synchronously (default value: `false`).\n         * Set to `true` for asynchronous event delivery.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(deep) {\n            this.shallow = null;\n            this.deep = null;\n            this.deep = deep == null ? null : deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return this.deep ? new LQueries_(this.deep) : null; };\n        LQueries_.prototype.child = function () {\n            if (this.deep === null) {\n                // if we don't have any deep queries then no need to track anything more.\n                return null;\n            }\n            if (this.shallow === null) {\n                // DeepQuery: We can reuse the current state if the child state would be same as current\n                // state.\n                return this;\n            }\n            else {\n                // We need to create new state\n                return new LQueries_(this.deep);\n            }\n        };\n        LQueries_.prototype.container = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var containerValues = []; // prepare room for views\n                query.values.push(containerValues);\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: containerValues,\n                    containerValues: null\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: [],\n                    containerValues: query.values\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                query.containerValues.splice(index, 0, query.values);\n                query = query.next;\n            }\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.shallow, node);\n            add(this.deep, node);\n        };\n        LQueries_.prototype.removeView = function () {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                var containerValues = query.containerValues;\n                var viewValuesIdx = containerValues.indexOf(query.values);\n                var removed = containerValues.splice(viewValuesIdx, 1);\n                // mark a query as dirty only when removed view had matching modes\n                ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n                if (removed[0].length) {\n                    query.list.setDirty();\n                }\n                query = query.next;\n            }\n        };\n        return LQueries_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 14 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'Éµa': elementAttribute,\n        'Éµb': bind,\n        'ÉµC': container,\n        'ÉµcR': containerRefreshStart,\n        'Éµcr': containerRefreshEnd,\n        'Éµd': loadDirective,\n        'ÉµNH': namespaceHTML,\n        'ÉµNM': namespaceMathML,\n        'ÉµNS': namespaceSVG,\n        'ÉµE': elementStart,\n        'Éµe': elementEnd,\n        'ÉµEe': element,\n        'Éµf0': pureFunction0,\n        'Éµf1': pureFunction1,\n        'Éµf2': pureFunction2,\n        'Éµf3': pureFunction3,\n        'Éµf4': pureFunction4,\n        'Éµf5': pureFunction5,\n        'Éµf6': pureFunction6,\n        'Éµf7': pureFunction7,\n        'Éµf8': pureFunction8,\n        'ÉµfV': pureFunctionV,\n        'Éµi1': interpolation1,\n        'Éµi2': interpolation2,\n        'Éµi3': interpolation3,\n        'Éµi4': interpolation4,\n        'Éµi5': interpolation5,\n        'Éµi6': interpolation6,\n        'Éµi7': interpolation7,\n        'Éµi8': interpolation8,\n        'ÉµiV': interpolationV,\n        'Éµk': elementClass,\n        'Éµkn': elementClassNamed,\n        'ÉµL': listener,\n        'Éµld': load,\n        'ÉµP': projection,\n        'Éµp': elementProperty,\n        'Éµpb1': pipeBind1,\n        'Éµpb2': pipeBind2,\n        'Éµpb3': pipeBind3,\n        'Éµpb4': pipeBind4,\n        'ÉµpbV': pipeBindV,\n        'ÉµpD': projectionDef,\n        'ÉµPp': pipe,\n        'ÉµQ': query,\n        'ÉµqR': queryRefresh,\n        'ÉµrS': reserveSlots,\n        'Éµs': elementStyling,\n        'Éµsm': elementStyle,\n        'Éµsp': elementStyleProp,\n        'Éµsa': elementStylingApply,\n        'ÉµT': text,\n        'Éµt': textBinding,\n        'ÉµV': embeddedViewStart,\n        'Éµv': embeddedViewEnd,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TARGET = {};\n    var NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\n    var NG_INJECTABLE_DEF = getClosureSafeProperty$1({ ngInjectableDef: TARGET }, TARGET);\n    var NG_INJECTOR_DEF = getClosureSafeProperty$1({ ngInjectorDef: TARGET }, TARGET);\n    var NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\n    var NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    function compileNgModule(type, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(type, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(type),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$3).map(wrap),\n                        declarations: declarations.map(wrap),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef =\n                        compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngModuleDef.js\");\n                }\n                return ngModuleDef;\n            },\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(type, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: type.name,\n                        type: wrap(type),\n                        deps: reflectDependencies(type),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$3),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$3,\n                            ngModule.exports || EMPTY_ARRAY$3,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef =\n                        compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectorDef.js\");\n                }\n                return ngInjectorDef;\n            },\n        });\n        declarations.forEach(function (declaration) {\n            // Some declared components may be compiled asynchronously, and thus may not have their\n            // ngComponentDef set yet. If this is the case, then a reference to the module is written into\n            // the `ngSelectorScope` property of the declared type.\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                patchComponentDefWithScope(declaration.ngComponentDef, type);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = type;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, module) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopesFor(module).compilation.directives)\n            .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopesFor(module).compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = moduleType.ngModuleDef;\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (declaredWithDefs.ngPipeDef !== undefined) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (exportedTyped.ngPipeDef !== undefined) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return value.ngModuleDef !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var def = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (def === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    });\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [] }), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", constantPool);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it finishes\n                    // compiling.\n                    if (hasSelectorScope(type)) {\n                        patchComponentDefWithScope(def, type.ngSelectorScope);\n                    }\n                }\n                return def;\n            },\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var def = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, constantPool);\n                }\n                return def;\n            },\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, meta) {\n        // TODO(alxhub): handle JIT of bare @Injectable().\n        if (!meta) {\n            return;\n        }\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var deps = undefined;\n                    if (!hasAProvider || (isUseClassProvider(meta) && type === meta.useClass)) {\n                        deps = reflectDependencies(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps) || [];\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var expression = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        deps: deps,\n                    }).expression;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\");\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var GET_PROPERTY_NAME$2 = {};\n    var USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var def = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl);\n                }\n                return def;\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Component metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return (R3_COMPILE_PIPE || (function () { }))(type, meta); });\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     */\n    function (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('6.1.0-beta.3+113.sha-97277bc');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * A function that will be executed when an application is initialized.\n     * @experimental\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @experimental\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory() { return new ApplicationInitStatus(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory() { return new Console(); }, providedIn: null });\n        return Console;\n    }());\n\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory() { return new Compiler(); }, providedIn: null });\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    isPeriodic: t.data.isPeriodic,\n                    delay: t.data.delay,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    // Added by Zones for XHRs\n                    // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                    xhr: t.data.target\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory() { return new Testability(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory() { return new TestabilityRegistry(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     *\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var options = optionsReducer({}, compilerOptions);\n            var compiler$$1 = compilerFactory.createCompiler([options]);\n            return compiler$$1.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory() { return new PlatformRef(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory() { return new ApplicationRef(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory() { return new SystemJsNgModuleLoader(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef$1 = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory() { return new ApplicationModule(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding$1(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef$1(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef$1(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef$1(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef$1));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef$1);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef$1);\n    var TemplateRefTokenKey = tokenKey(TemplateRef$1);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef$1(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef$1(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            var def = resolveDefinition(this._ngModuleDefFactory);\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (unsafeResourceUrl instanceof String &&\n            unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, 'Html');\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, 'Style');\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, 'Script');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, 'Url');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef$1;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef$1;\n    exports.ViewContainerRef = ViewContainerRef$1;\n    exports.EmbeddedViewRef = EmbeddedViewRef$1;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNC = NO_CHANGE;\n    exports.ÉµC = container;\n    exports.ÉµE = elementStart;\n    exports.ÉµNH = namespaceHTML;\n    exports.ÉµNM = namespaceMathML;\n    exports.ÉµNS = namespaceSVG;\n    exports.ÉµEe = element;\n    exports.ÉµL = listener;\n    exports.ÉµT = text;\n    exports.ÉµV = embeddedViewStart;\n    exports.ÉµQ = query;\n    exports.ÉµQr = registerContentQuery;\n    exports.Éµd = loadDirective;\n    exports.ÉµP = projection;\n    exports.Éµb = bind;\n    exports.Éµi1 = interpolation1;\n    exports.Éµi2 = interpolation2;\n    exports.Éµi3 = interpolation3;\n    exports.Éµi4 = interpolation4;\n    exports.Éµi5 = interpolation5;\n    exports.Éµi6 = interpolation6;\n    exports.Éµi7 = interpolation7;\n    exports.Éµi8 = interpolation8;\n    exports.ÉµiV = interpolationV;\n    exports.Éµpb1 = pipeBind1;\n    exports.Éµpb2 = pipeBind2;\n    exports.Éµpb3 = pipeBind3;\n    exports.Éµpb4 = pipeBind4;\n    exports.ÉµpbV = pipeBindV;\n    exports.Éµf0 = pureFunction0;\n    exports.Éµf1 = pureFunction1;\n    exports.Éµf2 = pureFunction2;\n    exports.Éµf3 = pureFunction3;\n    exports.Éµf4 = pureFunction4;\n    exports.Éµf5 = pureFunction5;\n    exports.Éµf6 = pureFunction6;\n    exports.Éµf7 = pureFunction7;\n    exports.Éµf8 = pureFunction8;\n    exports.ÉµfV = pureFunctionV;\n    exports.ÉµcR = containerRefreshStart;\n    exports.Éµcr = containerRefreshEnd;\n    exports.ÉµqR = queryRefresh;\n    exports.Éµql = loadQueryList;\n    exports.Éµe = elementEnd;\n    exports.Éµp = elementProperty;\n    exports.ÉµpD = projectionDef;\n    exports.ÉµrS = reserveSlots;\n    exports.Éµa = elementAttribute;\n    exports.Éµs = elementStyling;\n    exports.Éµsm = elementStyle;\n    exports.Éµsp = elementStyleProp;\n    exports.Éµsa = elementStylingApply;\n    exports.Éµk = elementClass;\n    exports.Éµkn = elementClassNamed;\n    exports.Éµt = textBinding;\n    exports.Éµv = embeddedViewEnd;\n    exports.Éµst = store;\n    exports.Éµld = load;\n    exports.ÉµPp = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.ÉµiA = i18nApply;\n    exports.ÉµiEM = i18nExpMapping;\n    exports.ÉµiI = i18nInterpolation;\n    exports.ÉµIV = i18nInterpolationV;\n    exports.ÉµiM = i18nMapping;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}