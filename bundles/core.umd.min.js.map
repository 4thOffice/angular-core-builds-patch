{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","target","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","R3ResolvedDependencyType","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","j","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","MONKEY_PATCH_KEY_NAME","stringify$1","loadInternal","readElementValue","getNativeByIndex","getNativeByTNode","tNode","hostView","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","isRootView","getRootView","lViewData","readPatchedLViewData","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderer","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","currentQueries","viewData","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","getRenderer","getRendererFactory","getCurrentSanitizer","enableBindings","disableBindings","getCurrentView","_getViewData","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getTView","getCurrentQueries","setCurrentQueries","queries","getCreationMode","getViewData","getCleanup","getTViewCleanup","cleanup","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentData","footer","parent","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveViewData","previousTView","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","injectorView","currentTView","canAccessViewProviders","node","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","nodeFlags","nodeProviderIndexes","providerIndexes","tInjectables","startInjectables","startDirectives","directiveCount","providerTokenOrDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","NodeInjector","_tNode","_lView","_injectorIndex","previousTNode","previousLView","getFactoryOf","typeAny","getInheritedFactory","getContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","directiveEndIndex","slice","startIndex","count","noop","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","SWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","NgModuleRef","NgModuleFactory","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","throwMultipleComponentError","tagName","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getFirstParentNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","NO_CHANGE","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","_CLEAN_PROMISE","refreshDescendantViews","rf","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","componentRefresh","createLViewData","parentLView","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","addNode","elementCreate","setUpAttributes","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","totalHostVars","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","storeCleanupFn","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","tViews","tParent","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","classIndex","directive","hackImplementationOfElementClassProp","hostStylingHack","classDeclarations","classList","val","updateClassProp","addOrRemove","elementStyling","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","initialClasses","elementStylingApply","hackImplementationOfElementStyling","hackSquashDeclaration","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","hackImplementationOfElementStyleProp","valueToAdd","elementStylingMap","classes","hackImplementationOfElementStylingMap","classInputVal","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","elementIndex","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","queueHostBindingForCheck","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","renderFlags","viewFlags","updateViewQuery","markDirty","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextViewData","loadQueryList","queryListIdx","load","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","msg","updateBinding","exp1","exp2","exp3","exp4","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","result","tNodeChild","enumerable","configurable","_lookUpContext","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","NodeInjector$1","NodeInjector$$1","_hostView","getComponent","Node","loadContext","getComponentAtNodeIndex","getViewComponent","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","hostRNode","rootFlags","rootViewInjector","createChainedInjector","tElementNode","projection$$1","nodeList","firstTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","activeCaseIndex","tagNameValue","removedPhTNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","attr","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","expandModuleWithProviders","emitInline","compileInjector","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","metadata","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","hasSelectorScope","compileDirective","facade","typeArgumentCount","EMPTY_OBJ$1","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","meta_1","hasAProvider","compilerMeta","ctorDeps","userDeps","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","ngModuleRef","contextInjector","insert","move","commentNode","nativeNextSibling","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","listeners","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","notImplemented","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","event","createEvent","initEvent","dispatchEvent","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","getModuleFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.1.0+49.sha-e024f2f\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LViewData` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LViewData`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LViewData` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, arr) {\n        return readElementValue(arr[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    function _getViewData() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    var tView;\n    function getTView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return tView;\n    }\n    var currentQueries;\n    function getCurrentQueries() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries;\n    }\n    function setCurrentQueries(queries) {\n        currentQueries = queries;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getContextViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextViewData;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        rendererFactory = newView && newView[RENDERER_FACTORY];\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 4096 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0, AcrossHostBoundary is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n            32768 /* AcrossHostBoundary */ :\n            0;\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n                acrossHostBoundary :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lViewData, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lViewData);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                    throw new Error(\"No provider for \" + stringify$1(token));\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lViewData);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, or if there is no injector on this node, start by searching\n            // the parent injector.\n            if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lViewData) :\n                    lViewData[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lViewData[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lViewData[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lViewData[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lViewData, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lViewData)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lViewData[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, injectorView, token, previousTView) {\n        var currentTView = injectorView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we step through providers\n        var canAccessViewProviders = false;\n        // We need to determine if view providers can be accessed by the starting element.\n        // It happens in 2 cases:\n        // 1) On the initial element injector , if we are instantiating a token which can see the\n        // viewProviders of the component of that element. Such token are:\n        // - the component itself (but not other directives)\n        // - viewProviders tokens of the component (but not providers tokens)\n        // 2) Upper in the element injector tree, if the starting element is actually in the view of\n        // the current element. To determine this, we track the transition of view during the climb,\n        // and check the host node of the current view to identify component views.\n        if (previousTView == null && isComponent(tNode) && includeViewProviders ||\n            previousTView != null && previousTView != currentTView &&\n                (currentTView.node == null || currentTView.node.type === 3 /* Element */)) {\n            canAccessViewProviders = true;\n        }\n        var injectableIdx = locateDirectiveOrProvider(tNode, injectorView, token, canAccessViewProviders);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, injectorView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param view The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, view, token, canAccessViewProviders) {\n        var tView = view[TVIEW];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var startInjectables = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var startDirectives = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? startInjectables : startInjectables + cptViewProvidersCount;\n        var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n        for (var i = startingIndex; i < startDirectives + directiveCount; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < startDirectives && token === providerTokenOrDef ||\n                i >= startDirectives && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & exports.InjectFlags.Self ||\n            (flags & exports.InjectFlags.Host &&\n                (parentLocation & 32768 /* AcrossHostBoundary */)));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getViewData());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _lView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            var previousTNode = getPreviousOrParentTNode();\n            var previousLView = _getViewData();\n            setTNodeAndViewData(this._tNode, this._lView);\n            try {\n                return getOrCreateInjectable(this._tNode, this._lView, token);\n            }\n            finally {\n                setTNodeAndViewData(previousTNode, previousLView);\n            }\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lViewData[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lViewData[index]);\n                        var context = createLContext(lViewData, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, nodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var nodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lViewData);\n            var context = createLContext(lViewData, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, target) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lViewData);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lViewData) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        return tNode.flags & 4096 /* isComponent */ ? lViewData[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, nodeIndex) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) : lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        if (tNode.parent == null) {\n            return getHostNative(currentView);\n        }\n        else {\n            var parentTNode = getFirstParentNative(tNode);\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Get the first parent of a node that isn't an IcuContainer TNode\n     */\n    function getFirstParentNative(tNode) {\n        var parent = tNode.parent;\n        while (parent && parent.type === 5 /* IcuContainer */) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]);\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent) {\n            if (tNode.parent.type === 4 /* ElementContainer */) {\n                currentNode = getHighestElementContainer(tNode);\n                parent = currentNode.parent;\n            }\n            else if (tNode.parent.type === 5 /* IcuContainer */) {\n                currentNode = getFirstParentNative(currentNode);\n                parent = currentNode.parent;\n            }\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl === void 0) { childEl = null; }\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else if (parentTNode.type === 5 /* IcuContainer */) {\n                var icuAnchorNode = getNativeByTNode(childTNode.parent, currentView);\n                nativeInsertBefore(renderer, parentEl, childEl, icuAnchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName || current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased_6) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                            setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(viewData, rf) {\n        var tView = getTView();\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // Dynamically created views must run first only in creation mode. If this is a\n        // creation-only pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update-only pass.\n        if (rf !== 1 /* Create */) {\n            var creationMode = getCreationMode();\n            var checkNoChangesMode = getCheckNoChangesMode();\n            if (!checkNoChangesMode) {\n                executeInitHooks(viewData, tView, creationMode);\n            }\n            refreshDynamicEmbeddedViews(viewData);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n            }\n            setHostBindings(tView, viewData);\n        }\n        refreshChildComponents(tView.components, rf);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, rf) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], rf);\n            }\n        }\n    }\n    function createLViewData(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            tNode = tView.data[adjustedIndex] =\n                createTNode(viewData, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        setIsParent(true);\n        var tNode = view[TVIEW].node;\n        setPreviousOrParentTNode(tNode);\n        return view[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLViewData(declarationView, tView, context, 2 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender, null);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, rf, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(rf || getRenderFlags(hostView), componentOrContext);\n            }\n            refreshDescendantViews(hostView, rf);\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var renderer = getRenderer();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tView = getTView();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, viewData);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getRenderer();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getRenderer();\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var viewData = getViewData();\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = getRenderer();\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (getFirstTemplatePass()) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(viewData, outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(viewData, outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = getViewData();\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, getTView());\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var viewData = getViewData();\n            var renderer = getRenderer();\n            var element_1 = getNativeByIndex(index, viewData);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var viewData = getViewData();\n        var element = getNativeByIndex(index, viewData);\n        var tNode = getTNode(index, viewData);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(viewData, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(viewData, index + HEADER_OFFSET);\n            if (ngDevMode && tNode.type === 3 /* Element */) {\n                setNgReflectProperties(element, propName, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = getRenderer();\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(viewData, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(viewData, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    function setNgReflectProperties(element, propName, value) {\n        var renderer = getRenderer();\n        var isProcedural = isProceduralRenderer(renderer);\n        var attrName = normalizeDebugBindingName(propName);\n        var debugValue = normalizeDebugBindingValue(value);\n        isProcedural ? renderer.setAttribute(element, attrName, debugValue) :\n            element.setAttribute(attrName, debugValue);\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var tView = getTView();\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param classIndex Index of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementClassProp(index, classIndex, value, directive); // proper supported in next PR\n        }\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, getViewData()), classIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        if (directive != undefined) {\n            getCreationMode() &&\n                hackImplementationOfElementStyling(classDeclarations || null, styleDeclarations || null, styleSanitizer || null, directive); // supported in next PR\n            return;\n        }\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 32768 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index - HEADER_OFFSET;\n            if (delegateToClassInput(tNode)) {\n                var stylingContext = getStylingContext(index, getViewData());\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(getViewData(), tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingApply(index, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementStylingApply(index, directive); // supported in next PR\n        }\n        var viewData = getViewData();\n        var isFirstRender = (viewData[FLAGS] & 1 /* CreationMode */) !== 0;\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, viewData), getRenderer(), viewData, isFirstRender);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(viewData);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directive); // supported in next PR\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, getViewData()), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var viewData = getViewData();\n        var tNode = getTNode(index, viewData);\n        var stylingContext = getStylingContext(index, viewData);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(getViewData(), tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    function hackImplementationOfElementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        var node = getNativeByTNode(getPreviousOrParentTNode(), getViewData());\n        ngDevMode && assertDefined(node, 'expecting parent DOM node');\n        var hostStylingHackMap = (node.hostStylingHack || (node.hostStylingHack = new Map()));\n        hostStylingHackMap.set(directive, {\n            classDeclarations: hackSquashDeclaration(classDeclarations),\n            styleDeclarations: hackSquashDeclaration(styleDeclarations), styleSanitizer: styleSanitizer\n        });\n    }\n    function hackSquashDeclaration(declarations) {\n        // assume the array is correct. This should be fine for View Engine compatibility.\n        return declarations || [];\n    }\n    function hackImplementationOfElementClassProp(index, classIndex, value, directive) {\n        var node = getNativeByIndex(index, getViewData());\n        ngDevMode && assertDefined(node, 'could not locate node');\n        var hostStylingHack = node.hostStylingHack.get(directive);\n        var className = hostStylingHack.classDeclarations[classIndex];\n        var renderer = getRenderer();\n        if (isProceduralRenderer(renderer)) {\n            value ? renderer.addClass(node, className) : renderer.removeClass(node, className);\n        }\n        else {\n            var classList = node.classList;\n            value ? classList.add(className) : classList.remove(className);\n        }\n    }\n    function hackImplementationOfElementStylingApply(index, directive) {\n        // Do nothing because the hack implementation is eager.\n    }\n    function hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, getRenderer());\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, getViewData());\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = getRenderer();\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var totalHostVars = 0;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(tView, viewData, totalHostVars);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, viewData, previousOrParentTNode) {\n        var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        var end = start + (previousOrParentTNode.flags & 4095 /* DirectiveCountMask */);\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(viewData, previousOrParentTNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, viewData, i, previousOrParentTNode);\n            postProcessDirective(viewData, directive, def, i);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, viewData, totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(viewData, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        if (def.hostBindings) {\n            def.hostBindings(1 /* Create */, directive, previousOrParentTNode.index);\n        }\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getTView();\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n    */\n    function queueHostBindingForCheck(tView, def) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings || noop);\n        if (def.hostVars)\n            tView.expandoInstructions.push(def.hostVars);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 4096 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = index << 16 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ |\n            numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n        queueHostBindingForCheck(tView, def);\n    }\n    function addComponentLogic(viewData, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = getRendererFactory();\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(getViewData(), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, getRendererFactory().createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var viewData = getViewData();\n        var tView = getTView();\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor);\n        var currentQueries = getCurrentQueries();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(tNode.flags, tView);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = getRenderer().createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var previousOrParentTNode = loadInternal(index, tView.data);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getViewData()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var viewData = getViewData();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(getViewData(), getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, viewData, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getTView();\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewData = getViewData();\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews(viewData, null);\n        leaveView(viewData[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     * @param rf  The render flags that should be used to process this template\n     */\n    function componentRefresh(adjustedElementIndex, rf) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, getViewData());\n        ngDevMode && assertNodeType(getTView().data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT], rf);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getViewData())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var viewData = getViewData();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        var tView = getTView();\n        var firstTemplatePass = getFirstTemplatePass();\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewData, viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent, 2 /* Update */);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component, null);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component, rf) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, rf, hostView[FLAGS], component);\n            templateFn(rf || getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView, rf);\n            updateViewQuery(viewQuery, hostView[FLAGS], component);\n        }\n        finally {\n            leaveView(oldView, rf === 1 /* Create */);\n        }\n    }\n    function createViewQuery(viewQuery, renderFlags, viewFlags, component) {\n        if (viewQuery && (renderFlags === 1 /* Create */ ||\n            (renderFlags === null && (viewFlags & 1 /* CreationMode */)))) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, flags, component) {\n        if (viewQuery && flags & 2 /* Update */) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(getViewData()[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(getViewData()[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var tView = getTView();\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        getViewData()[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextViewData = getContextViewData();\n        return loadInternal(index, contextViewData);\n    }\n    function loadQueryList(queryListIdx) {\n        var viewData = getViewData();\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, getViewData());\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        var viewData = getViewData();\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        var viewData = getViewData();\n        var checkNoChangesMode = getCheckNoChangesMode();\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(getCreationMode(), checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return getViewData()[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getViewData(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 32768 /* hasClassInput */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._view[HOST] == null) {\n                    var tView = this._view[HOST_NODE];\n                    return collectNativeNodes(this._view, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = this._view[RENDERER_FACTORY];\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getViewData());\n    }\n    var NodeInjector$1 = /** @class */ (function () {\n        function NodeInjector$$1(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector$$1.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, exports.InjectFlags.Default, notFoundValue);\n        };\n        return NodeInjector$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector$1(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector$1(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getViewData());\n    }\n\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved for.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadContext(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lViewData);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadContext(element);\n        var lView = context.lViewData;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 64 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadContext(target).lViewData;\n        var rootLViewData = getRootView$1(lViewData);\n        return rootLViewData[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector$1(tNode, context.lViewData);\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lViewData, false);\n        }\n        return context.directives || [];\n    }\n    function loadContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lViewData;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lViewData');\n            lViewData = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lViewData = readPatchedLViewData(componentOrView);\n        }\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getContext(directive).native;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lViewData = context.lViewData;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lViewData);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lViewData);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 4096 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass)\n            prefillHostVars(tView, rootView, componentDef.hostVars);\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 16 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                        definition.hostVars += superDef.hostVars;\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null && !isDuplicate) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider.useClass || provider.provide);\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var viewData = getViewData();\n        var tView = viewData[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var viewData = getViewData();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var beginIndex = previousOrParentTNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var cptViewProvidersCount = previousOrParentTNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    viewData[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.1.0+49.sha-e024f2f');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            var sanitizer = null;\n            if (ngModule) {\n                rendererFactory = ngModule.injector.get(RendererFactory2);\n                sanitizer = ngModule.injector.get(Sanitizer, null);\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ? ngModule.injector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                refreshDescendantViews(rootView, 1 /* Create */);\n            }\n            finally {\n                leaveView(oldView, true);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootView), rootView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootView = _rootView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        var viewData = _getViewData();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = _getViewData();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass) {\n            i18nEndFirstPass(tView);\n        }\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = _getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getRenderer();\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        removeChild(removedPhTNode, removedPhRNode || null, viewData);\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var tView = getTView();\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var viewData = _getViewData();\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = viewData[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lViewData = _getViewData();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lViewData);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2),\n                        declarations: declarations,\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery), directives: new Map(), pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ$1,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    var EMPTY_OBJ$1 = {};\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : selector;\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var meta_1 = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1) ||\n                        isUseValueProvider(meta_1) || isUseExistingProvider(meta_1);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        providedIn: meta_1.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1)) && meta_1.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta_1.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta_1)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta_1.useClass;\n                    }\n                    else if (isUseValueProvider(meta_1)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta_1.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta_1)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta_1.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta_1)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta_1.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], [{\n            type: undefined,\n            decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }]\n        }], null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], [{\n            type: NgZone\n        }], null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], [], null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], [{\n            type: Injector\n        }], null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], [{\n            type: NgZone\n        }, {\n            type: Console\n        }, {\n            type: Injector\n        }, {\n            type: ErrorHandler\n        }, {\n            type: ComponentFactoryResolver\n        }, {\n            type: ApplicationInitStatus\n        }], null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], [{\n            type: Compiler\n        }, {\n            type: SystemJsNgModuleLoaderConfig,\n            decorators: [{\n                    type: Optional\n                }]\n        }], null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    function notImplemented() {\n        throw new Error('Missing proper ivy implementation.');\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                // TODO: add real implementation;\n                // https://angular-team.atlassian.net/browse/FW-719\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () {\n                // TODO move to discoverable utils\n                var context = loadContext(this.nativeNode, false);\n                if (!context)\n                    return [];\n                var lView = context.lViewData;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var providerTokens = [];\n                var nodeFlags = tNode.flags;\n                var startIndex = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n                var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n                var endIndex = startIndex + directiveCount;\n                for (var i = startIndex; i < endIndex; i++) {\n                    var value = tView.data[i];\n                    if (isDirectiveDefHack(value)) {\n                        // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                        // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                        // is that for Components/Directives we store the def instead the type. The correct behavior\n                        // is that we should always be storing injectable type in this location.\n                        value = value.type;\n                    }\n                    providerTokens.push(value);\n                }\n                return providerTokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadContext(this.nativeNode);\n                var lView = context.lViewData;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            // This is a hack implementation. The correct implementation would bypass the DOM and `TNode`\n            // information to invoke the listeners directly.\n            // https://angular-team.atlassian.net/browse/FW-719\n            var event = document.createEvent('MouseEvent');\n            event.initEvent(eventName, true, true);\n            this.nativeElement.dispatchEvent(event);\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], [{\n            type: ApplicationRef\n        }], null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetContext = getContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}