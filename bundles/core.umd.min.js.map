{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","NodeInjectorFactory","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","isProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","flags","isComponent","isComponentDef","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","R3ResolvedDependencyType","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","arr","findComponentView","rootTNode","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","elementDepthCount","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","directiveStart","end","directiveEnd","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","allHooks","hooksToCall","callHooks","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","parent","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","injectorView","isFirstHostTNode","NodeInjector","_tNode","_lView","getFactoryOf","typeAny","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","slice","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","directive","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","name_1","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","throwMultipleComponentError","tagName","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","nativeInsertBefore","nativeRemoveChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","removeListeners","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","getHighestElementOrICUContainer","getParentNative","getHostNative","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","insertBefore","removeChild","appendChild","childEl","childTNode","parentTNode","getBeforeNodeForView","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","NG_TEMPLATE_SELECTOR","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","sanitizer","initialStyles","initialClasses","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","hasClassInput","initializeStaticContext","attr","patchInitialStylingValue","initialStyling","prop","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","_updateSingleStylingValue","offset","input","isClassBased","directiveRef","directiveIndex","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","getValue","currFlag","getPointers","currDirective","getDirectiveIndexFromEntry","hasValueChanged","allowValueChange","newValue","currentDirectiveOwner","newDirectiveOwner","isClassBased_1","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","playerBuilderIndex","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","getStyleSanitizer","setSanitizeFlag","sanitizeYes","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setDirectiveDirty","setContextDirty","setContextPlayersDirty","store","DashCase","setProperty","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","entryIsClassBased","initialIndex","getInitialStylingValuesIndexOf","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","getDirectiveRegistryValuesIndexOf","keyValues","dirs","dirtyYes","getInitialClassNameValue","initialClassValues","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","renderComponentOrTemplate","templateFn","normalExecutionPath","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialStylesAndClasses","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","eventName","listenerFn","eventTargetResolver","resolved","lCleanupIndex","getCleanup","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","generatePropertyAliases","propsLength","subscription","subscribe","idx","decreaseElementDepthCount","setInputsForProperty","elementAttribute","element_1","removeAttribute","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","loadComponentRenderer","loadRendererFn","dataValue","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","updateContextWithBindings","onlyProcessSingleClasses","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","elementHostAttrs","patchContextWithStaticAttrs","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","stillDirty","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","onOrOffClassValue","updateClassProp","addOrRemove","elementStylingMap","classes","hackImplementationOfElementStylingMap","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","styleProps","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","adjustedPropIndex","newProp","initialValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","ctxIndex_1","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInternal","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","markDirty","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","content","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","getTViewCleanup","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","publicToDeclaredInputs","publicToMinifiedInputs","proto","declaredKey_1","privateMinKey_1","originalProperty","checkProto","setter_1","set","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","noop","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR$1","NEW_LINE","NO_NEW_LINE","records","_records","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","_this","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","Function","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","enumerable","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","msg","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_bootstrapComponents","_r3Injector","injectFlags","NgModuleFactory$1","NgModuleFactory$$1","moduleType","parentInjector","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","QueryList","_results","changes","filter","find","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","memoryIndex","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","NgModuleFactoryLoader","modules","assertNotExisting","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","moduleQueue","flushingModuleQueue","isResolvedDeclaration","declaration","every","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","setScopeOnDeclaredComponents","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","flushModuleScopingQueueAsMuchAsPossible","hasSelectorScope","compileDirective","facade","typeArgumentCount","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","eAttrs","lContext","lNode","eClasses","classList","styleName","eStyles","style","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","parentEl","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_s","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_r","ɵangular_packages_core_core_t","ɵangular_packages_core_core_g","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_m","ɵangular_packages_core_core_l","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_k","ɵangular_packages_core_core_u","ɵangular_packages_core_core_w","ɵangular_packages_core_core_v","ɵangular_packages_core_core_z","ɵangular_packages_core_core_x","ɵangular_packages_core_core_y","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_bb","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue$1","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.2.0+45.sha-b9c6df6\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, \n        /**\n         * Set to `true` if the token is a provider, and not a directive.\n         */\n        isProvider, injectImplementation) {\n            this.factory = factory;\n            this.isProvider = isProvider;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 128 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LView\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode && currentView[FLAGS] & 32 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode);\n            currentView[FLAGS] &= ~32 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(currentView, allHooks, checkHooks, checkNoChangesMode) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = currentView[FLAGS] & 2 /* FirstLViewPass */ ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        else {\n            executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode);\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            lView[FLAGS] &= ~(8 /* Dirty */ | 2 /* FirstLViewPass */);\n            lView[FLAGS] |= 32 /* RunInit */;\n            lView[BINDING_INDEX] = tView.bindingStartIndex;\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[HOST_NODE] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringify$1(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[HOST_NODE] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n                var tView = lData[TVIEW];\n                if (value && factory.isProvider && value.ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(index, value.ngOnDestroy);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getLView());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 128 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(isCreationMode(lView), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the native node (element or a comment) for the parent of a given node. */\n    function getParentNative(tNode, currentView) {\n        return tNode.parent == null ? getHostNative(currentView) :\n            getNativeByTNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveChild(renderer, parent, node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 16 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~16 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 64 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[HOST_NODE];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        readElementValue(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            // skip over element and ICU containers as those are represented by a comment node and\n            // can't be used as a render parent\n            tNode = getHighestElementOrICUContainer(tNode);\n            var hostTNode = currentView[HOST_NODE];\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 1 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent;\n        currentNode = getHighestElementOrICUContainer(currentNode);\n        parent = currentNode.parent;\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Removes a native child node from a given native parent node.\n     */\n    function nativeRemoveChild(renderer, parent, child) {\n        isProceduralRenderer(renderer) ? renderer.removeChild(parent, child) :\n            parent.removeChild(child);\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var renderParent = getRenderParent(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */ ||\n                parentTNode.type === 5 /* IcuContainer */) {\n                var anchorNode = getNativeByTNode(parentTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(renderParent, childEl) :\n                    renderParent.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getRenderParent(childTNode, currentView);\n            nativeRemoveChild(currentView[RENDERER], parentNative, childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        return [\n            0,\n            [null, -1, false, sanitizer || null],\n            initialStyles || [null],\n            initialClasses || [null],\n            [0, 0],\n            element || null,\n            null,\n            null,\n            null,\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 32 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[0 /* MasterFlagPosition */] === 'number' &&\n            Array.isArray(value[2 /* InitialStyleValuesPosition */]);\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n    function hasClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */ ? true : false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directive the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, directive) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n            // this is a new directive which we have not seen yet.\n            directives.push(directive, -1, false, null);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = 0; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial styling data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStylesAndClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer, onlyProcessSingleClasses) {\n        if (context[0 /* MasterFlagPosition */] & 32 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        stylesInput = stylesInput || null;\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* CachedClassValueOrInitialClassString */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* CachedStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* CachedClassValueOrInitialClassString */] = classesValue;\n        context[7 /* CachedStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARRAY;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // SKIP IF INITIAL CHECK\n                        // If the former `value` is `null` then it means that an initial value\n                        // could be being rendered on screen. If that is the case then there is\n                        // no point in updating the value incase it matches. In other words if the\n                        // new value is the exact same as the previously rendered value (which\n                        // happens to be the initial value) then do nothing.\n                        if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n                            if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context, directiveIndex);\n        while (propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var ctxIndex_1 = context.length;\n                context.push(flag, prop, value, 0);\n                setPlayerBuilderIndex(context, ctxIndex_1, playerBuilderIndex, directiveIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, offset, addOrRemove, directiveRef) {\n        _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStyleProp(context, offset, input, directiveRef) {\n        _updateSingleStylingValue(context, offset, input, false, directiveRef);\n    }\n    function _updateSingleStylingValue(context, offset, input, isClassBased, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            allowValueChange(currValue, value, currDirective, directiveIndex)) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 63 /* BitMask */) | (staticIndex << 6 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 6 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 6 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 6 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[0 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[0 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = 0;\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directive) {\n        var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n        ngDevMode &&\n            assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n        return index > 0 ? index / 4 /* Size */ : 0;\n        // return index / DirectiveRegistryValuesIndex.Size;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 1 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // ... this decides what to do if and when there is a collision.\n        if (currentValue) {\n            if (newValue) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * This function is only designed to be called for `[class]` bindings when\n     * `[ngClass]` (or something that uses `class` as an input) is present. Once\n     * directive host bindings fully work for `[class]` and `[style]` inputs\n     * then this can be deleted.\n     */\n    function getInitialClassNameValue(context) {\n        var className = context[6 /* CachedClassValueOrInitialClassString */];\n        if (className == null) {\n            className = '';\n            var initialClassValues = context[3 /* InitialClassValuesPosition */];\n            for (var i = 1 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            context[6 /* CachedClassValueOrInitialClassString */] = className;\n        }\n        return className;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!isCreationMode(lView)) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode);\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 16 /* Attached */ | 32 /* RunInit */ |\n            2 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            // TODO(misko): Refactor createTNode so that it does not depend on LView.\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        return view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 4 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 128 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                setFirstTemplatePass(false);\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        try {\n            if (normalExecutionPath && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (isCreationMode(hostView)) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate && (tNode.flags & 8 /* hasClassInput */) === 0) {\n            renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i++];\n            if (typeof attrName == 'number') {\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i++];\n                    var attrName_1 = attrs[i++];\n                    var attrVal = attrs[i++];\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                }\n                else {\n                    // All other `AttributeMarker`s are ignored here.\n                    break;\n                }\n            }\n            else {\n                /// attrName is string;\n                var attrVal = attrs[i++];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                target.addEventListener(eventName, wrappedListener, useCapture);\n                lCleanup.push(wrappedListener);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(readElementValue(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 2) {\n                    ngDevMode && assertDataInRange(lView, props[i]);\n                    var subscription = lView[props[i]][props[i + 1]].subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub components renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, inputs[i]);\n            lView[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 2) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 1]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer, hasClassInput(tNode));\n    }\n    /**\n     * Assign static styling values to a host element.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array containing class and styling information. The values must be marked with\n     *              `AttributeMarker`.\n     *\n     *        ```\n     *        var attrs = [AttributeMarker.Classes, 'foo', 'bar',\n     *                     AttributeMarker.Styles, 'width', '100px', 'height, '200px']\n     *        elementHostAttrs(directive, attrs);\n     *        ```\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 2 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        var onOrOffClassValue = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue, directive);\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the Element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element.\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        else {\n            updateStylingMap(stylingContext, classes, styles);\n        }\n    }\n    /* START OF HACK BLOCK */\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), false, null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 3 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        attachPatchData(native, lView);\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], tNode, lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 4 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (4 /* CheckAlways */ | 8 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 16 /* Attached */) === 16 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 2 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 4 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 8 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView[FLAGS] |= 8 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 8 /* Dirty */;\n        ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n        var rootContext = lView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        if (isCreationMode(view)) {\n            checkView(view, context); // creation mode pass\n        }\n        checkView(view, context); // update mode pass\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            updateViewQuery(viewQuery, hostView, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, view, component) {\n        if (viewQuery && isCreationMode(view)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, view, component) {\n        if (viewQuery && !isCreationMode(view)) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n            4 /* CheckAlways */ | 128 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~1 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        queueLifecycleHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var publicToDeclaredInputs = definition.declaredInputs;\n        var publicToMinifiedInputs = definition.inputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (publicName) {\n            if (publicToDeclaredInputs.hasOwnProperty(publicName)) {\n                var minifiedKey = publicToMinifiedInputs[publicName];\n                var declaredKey_1 = publicToDeclaredInputs[publicName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredKey_1];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredKey_1] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var publicName in publicToDeclaredInputs) {\n            _loop_1(publicName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR$1 = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR$1; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR$1 : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, true, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, true, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 64 /* Destroyed */) === 64 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~16 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 16 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.2.0+45.sha-b9c6df6');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n                4 /* CheckAlways */ | 128 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            removeChild(removedPhTNode, removedPhRNode, viewData);\n        }\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE], viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR$1) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            getLView()[getBindingRoot()] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queryList._valuesTree = [];\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing && existing.moduleType);\n        modules.set(id, factory);\n    }\n    function assertNotExisting(id, type) {\n        if (type) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = modules.get(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$2, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$2(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringify$1(type) + \"' declared by the module '\" + stringify$1(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringify$1(type) + \" from \" + stringify$1(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(stringify$1).sort();\n                errors.push(\"Type \" + stringify$1(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + stringify$1(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringify$1(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringify$1(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify$1(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify$1(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/template.html\", meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringify$1(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_s = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_p = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_r = _localeFactory;\n    exports.ɵangular_packages_core_core_t = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_n = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_o = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_m = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_l = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_c = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_k = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_u = wtfEnabled;\n    exports.ɵangular_packages_core_core_w = createScope;\n    exports.ɵangular_packages_core_core_v = detectWTF;\n    exports.ɵangular_packages_core_core_z = endTimeRange;\n    exports.ɵangular_packages_core_core_x = leave;\n    exports.ɵangular_packages_core_core_y = startTimeRange;\n    exports.ɵangular_packages_core_core_bc = SCHEDULER;\n    exports.ɵangular_packages_core_core_bd = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_be = getLView;\n    exports.ɵangular_packages_core_core_bf = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bg = nextContextImpl;\n    exports.ɵangular_packages_core_core_bk = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bi = loadInternal;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_j = createViewRef;\n    exports.ɵangular_packages_core_core_a = makeParamDecorator;\n    exports.ɵangular_packages_core_core_b = makePropDecorator;\n    exports.ɵangular_packages_core_core_bl = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_ba = _def;\n    exports.ɵangular_packages_core_core_bb = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue$1;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}