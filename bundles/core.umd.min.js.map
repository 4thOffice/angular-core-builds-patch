{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_PROV_DEF","NG_INJECTABLE_DEF","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","ngInjectableDef","ngInjectorDef","stringify","isArray","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","ɵɵinject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","error_1","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","elementDepthCount","bindingsEnabled","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","currentDirectiveDef","setCurrentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","activeDirectiveId","hasActiveElementFlag","flag","_selectedIndex","setActiveHostElement","elementIndex","getSelectedIndex","executeElementExitFn","setSelectedIndex","previousOrParentTNode","isParent","_elementExitFn","setElementExitFn","setActiveElementFlag","getActiveDirectiveId","incrementActiveDirectiveId","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","view","getIsParent","setIsNotParent","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","selectView","newView","hostTNode","oldView","_currentSanitizer","RendererStyleFlags3","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","resetCurrentStyleSanitizer","getCurrentStyleSanitizer","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","charCodeAt","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","NO_CHANGE","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","DEFAULT_BINDING_VALUE","DEFAULT_BINDING_INDEX","DEFAULT_TOTAL_SOURCES","DEFAULT_GUARD_MASK_VALUE","getConfig","hasConfig","allowDirectStyling","hostBindingsMode","allow","config","contextIsLocked","getLockedConfig","patchConfig","getProp","isSanitizationRequired","getPropConfig","getGuardMask","isHostBinding","getValuesCount","getTotalSources","getBindingValue","offset","getDefaultValue","setValue","bindingIndex","getValue","isContextLocked","getPropValuesStartPosition","startPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","MAP_DIRTY_VALUE","setMapValue","getMapValue","isHostStylingActive","directiveOrSourceId","stylingMapToString","isClassBased","str","prop","attrValue","addItemToStylingMap","stylingMapArr","allowOverwrite","propAtIndex","applied","selectClassBasedInputName","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","getComponentViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","resetPreOrderHookFlags","getLViewParent","parent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstTemplatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","getPrototypeOf","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","getUrlSanitizer","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentView","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","classes","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","_state","sourceIndex","classesBitMask","classesIndex","stylesBitMask","stylesIndex","lastDirectClassMap","lastDirectStyleMap","BIT_MASK_START_VALUE","INDEX_START_VALUE","getStylingState","STYLING_INDEX_FOR_MAP_BINDING","updateClassViaContext","forceUpdate","isMapBased","state","countIndex","updateBindingData","updateStyleViaContext","sanitizationRequired","counterIndex","registerBinding","changed","renderHostBindingsAsStale","bindingsStart","valuesCount","itemsPerRow","found","valuesEnd","i_1","stylingMap","countId","bindingValue","totalSources","addNewSourceColumn","isBindingIndexValue","entriesPerRow","allocateNewContextEntry","addBindingIntoContext","totalBindingsPerEntry","bitIndex","setGuardMask","maskValue","setDefaultValue","insertOffset","lockAndFinalizeContext","updateInitialStylingOnContext","initialStyling","hasInitialStyling","lockContext","applyStylingViaContext","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","applyAllValues","getStylingMapsSyncFn","_activeStylingMapApplyFn","totalBindingsToVisit","mapsMode","valueApplied","defaultValue","valueAppliedWithinMap","applyStylingValue","applyFn","valueToApply","findAndApplyMapValue","setStyle","nativeStyle","DashCase","style","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","activateStylingMapFeature","setStylingMapsSyncFn","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","mapsLimit","recurseInnerMaps","checkValuesOnly","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","innerMode","resolveInnerMapMode","isValueAllowedToBeApplied","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","currentMode","doApplyValue","TStylingContextDebug","_isClassBased","buildConfig","enumerable","configurable","totalColumns","entries","templateBitMask","hostBindingsBitMask","bindingsStartPosition","sources","printSources","output","prefix","bindingsBySource","isDefaultColumn","getTypeFromColumn","binding","sort","entry","toUpperCase","repeat","tab","log","printTable","table","totalProps","Math","floor","tpl mask","generateBitString","host mask","leftPad","max","pad","times","NodeStylingDebug","_data","_sanitizer","_debugContext","overrideSanitizer","_mapValues","mockElement","mapFn","hasMapBindings","hasPropBindings","hasCollisions","hasTemplateBindings","hasHostBindings","templateBindingsLocked","hostBindingsLocked","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","bindingStartIndex","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyBindings","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","setHostBindings","viewData","selectedIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localRefExtractor","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","initializeInputAndOutputAliases","defs","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","inputsToStore","createLContainer","hostNative","isForViewContainerRef","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","isComponent","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","getHostNative","ShadowDom","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","tViewNodeChild","currentChild","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","tNodeType","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","componentIndex","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","ngFactoryDef","metadata","compileFactory","injectFn","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","provider","processProvider","processInjectorType","set","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","resolveProvider","computeDeps","providerDeps","staticError","useNew","multiProviderMixError","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","StaticInjector","_records","recursivelyProcessProviders","resolvedProvider","multiProvider","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","constsIndex","tViewConsts","tContainerNode","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","stylingProp","resolveStylePropValue","resolvedValue","ɵɵclassProp","updated","isHostStyling","getClassesContext","getStylesContext","sanitizerToUse","applyStylingValueDirectly","getRenderer","stylingApply","ɵɵstyleMap","updateDirectiveInputValue","_stylingMap","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","applyStylingMapDirectly","initialStyles","newValue","inputName","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","flushStyling","classesContext","stylesContext","styleSanitizer","resetStylingState","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getContext","allocTStylingContext","hasDirectives","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵproperty","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContext","getComponentAtNodeIndex","getContext$1","getViewComponent","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sortListeners","getDebugNode","debugNode","loadLContextFromNode","valueInLView","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","COMPILED","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","DirectiveDefFlags","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","exportedType","exportedScope","isModuleWithProviders","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","animations","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","propertyName","splitByComma","piece","static","compilePipe","ngPipeDef","getPipeMetadata","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","Console_Factory","LOCALE_ID$1","TRANSLATIONS","TRANSLATIONS_FORMAT","trace","events","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__POST_R3__","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","bindingIndexes","metadataParts","collectClassNames","debugElement","lowercaseTNodeAttrs","eAttrs","_classesProxy","element_1","createProxy","handler","g","Proxy","contains","toggle","ownKeys","getOwnPropertyDescriptor","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","parentElement","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","getDebugNode$1","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","selectorOrNode","ns","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵINJECTOR_SCOPE","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵallowSanitizationBypassAndThrow","ɵgetSanitizationBypassType","ɵunwrapSafeValue","ɵdetectChanges","ɵrenderComponent","renderComponent$1","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMP_DEF","ɵNG_DIR_DEF","ɵNG_PIPE_DEF","ɵNG_MOD_DEF","ɵNG_BASE_DEF","ɵNG_PROV_DEF","ɵNG_INJ_DEF","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.11+38.sha-43487f6.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ɵprov` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has a `ɵprov` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n     * inherited value.\n     *\n     * @param type A type which may have its own (non-inherited) `ɵprov`.\n     */\n    function getInjectableDef(type) {\n        var def = (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ɵprov's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n     *\n     * @param type A type which may have `ɵprov`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ɵprov` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        var def = type && (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n        if (def) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return def;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the injector def type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have an injector def (`ɵinj`)\n     */\n    function getInjectorDef(type) {\n        return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n            type[NG_INJ_DEF] :\n            null;\n    }\n    var NG_PROV_DEF = getClosureSafeProperty({ ɵprov: getClosureSafeProperty });\n    var NG_INJ_DEF = getClosureSafeProperty({ ɵinj: getClosureSafeProperty });\n    // We need to keep these around so we can read off old defs if new defs are unavailable\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (Array.isArray(token)) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\n    var NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\n    var NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ɵprov = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ɵprov = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error_1 = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error_1.name = 'NullInjectorError';\n                throw error_1;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (Array.isArray(obj)) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵcmp = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            decls: componentDefinition.decls,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            consts: componentDefinition.consts || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ɵcmp;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵdir = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ɵpipe = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMP_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIR_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275fac' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MOD_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275mod' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        return obj instanceof NodeInjectorFactory;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var activeDirectiveId = 0;\n    /**\n     * Determines whether or not a flag is currently set for the active element.\n     */\n    function hasActiveElementFlag(flag) {\n        return (_selectedIndex & flag) === flag;\n    }\n    /**\n     * Sets a flag is for the active element.\n     */\n    function setActiveElementFlag(flag) {\n        _selectedIndex |= flag;\n    }\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (getSelectedIndex() !== elementIndex) {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n            activeDirectiveId = 0;\n        }\n    }\n    var _elementExitFn = null;\n    function executeElementExitFn() {\n        _elementExitFn();\n        // TODO (matsko|misko): remove this unassignment once the state management of\n        //                      global variables are better managed.\n        _selectedIndex &= ~1 /* RunExitFn */;\n    }\n    /**\n     * Queues a function to be run once the element is \"exited\" in CD.\n     *\n     * Change detection will focus on an element either when the `advance()`\n     * instruction is called or when the template or host bindings instruction\n     * code is invoked. The element is then \"exited\" when the next element is\n     * selected or when change detection for the template or host bindings is\n     * complete. When this occurs (the element change operation) then an exit\n     * function will be invoked if it has been set. This function can be used\n     * to assign that exit function.\n     *\n     * @param fn\n     */\n    function setElementExitFn(fn) {\n        setActiveElementFlag(1 /* RunExitFn */);\n        _elementExitFn = fn;\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        // Each directive gets a uniqueId value that is the same for both\n        // create and update calls when the hostBindings function is called. The\n        // directive uniqueId is not set anywhere--it is just incremented between\n        // each hostBindings call and is useful for helping instruction code\n        // uniquely determine which directive is currently active when executed.\n        activeDirectiveId += 1;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param host Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function selectView(newView, hostTNode) {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n    }\n    /* tslint:disable */\n    var _selectedIndex = -1 << 1 /* Size */;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex >> 1 /* Size */;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index << 1 /* Size */;\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function resetCurrentStyleSanitizer() {\n        setCurrentStyleSanitizer(null);\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer.setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    function isAnimationProp(name) {\n        // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n        // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n        // charCodeAt doesn't allocate memory to return a substring.\n        return name.charCodeAt(0) === 64; // @\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    var MAP_BASED_ENTRY_PROP_NAME = '[MAP]';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_BINDING_INDEX = 0;\n    var DEFAULT_TOTAL_SOURCES = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling, hasDirectives) {\n        initialStyling = initialStyling || allocStylingMapArray();\n        var config = 0 /* Initial */;\n        if (hasDirectives) {\n            config |= 1 /* HasDirectives */;\n        }\n        if (initialStyling.length > 1 /* ValuesStartPosition */) {\n            config |= 16 /* HasInitialStyling */;\n        }\n        return [\n            config,\n            DEFAULT_TOTAL_SOURCES,\n            initialStyling,\n        ];\n    }\n    function allocStylingMapArray() {\n        return [''];\n    }\n    function getConfig(context) {\n        return context[0 /* ConfigPosition */];\n    }\n    function hasConfig(context, flag) {\n        return (getConfig(context) & flag) !== 0;\n    }\n    /**\n     * Determines whether or not to apply styles/classes directly or via context resolution.\n     *\n     * There are three cases that are matched here:\n     * 1. there are no directives present AND ngDevMode is falsy\n     * 2. context is locked for template or host bindings (depending on `hostBindingsMode`)\n     * 3. There are no collisions (i.e. properties with more than one binding) across multiple\n     *    sources (i.e. template + directive, directive + directive, directive + component)\n     */\n    function allowDirectStyling(context, hostBindingsMode) {\n        var allow = false;\n        var config = getConfig(context);\n        var contextIsLocked = (config & getLockedConfig(hostBindingsMode)) !== 0;\n        var hasNoDirectives = (config & 1 /* HasDirectives */) === 0;\n        // if no directives are present then we do not need populate a context at all. This\n        // is because duplicate prop bindings cannot be registered through the template. If\n        // and when this happens we can safely apply the value directly without context\n        // resolution...\n        if (hasNoDirectives) {\n            // `ngDevMode` is required to be checked here because tests/debugging rely on the context being\n            // populated. If things are in production mode then there is no need to build a context\n            // therefore the direct apply can be allowed (even on the first update).\n            allow = ngDevMode ? contextIsLocked : true;\n        }\n        else if (contextIsLocked) {\n            var hasNoCollisions = (config & 8 /* HasCollisions */) === 0;\n            var hasOnlyMapsOrOnlyProps = (config & 6 /* HasPropAndMapBindings */) !== 6 /* HasPropAndMapBindings */;\n            allow = hasNoCollisions && hasOnlyMapsOrOnlyProps;\n        }\n        return allow;\n    }\n    function setConfig(context, value) {\n        context[0 /* ConfigPosition */] = value;\n    }\n    function patchConfig(context, flag) {\n        context[0 /* ConfigPosition */] |= flag;\n    }\n    function getProp(context, index) {\n        return context[index + 3 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) !==\n            0;\n    }\n    function getGuardMask(context, index, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        return context[position];\n    }\n    function setGuardMask(context, index, maskValue, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        context[position] = maskValue;\n    }\n    function getValuesCount(context) {\n        return getTotalSources(context) + 1;\n    }\n    function getTotalSources(context) {\n        return context[1 /* TotalSourcesPosition */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 4 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)];\n    }\n    function setDefaultValue(context, index, value) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)] =\n            value;\n    }\n    function setValue(data, bindingIndex, value) {\n        data[bindingIndex] = value;\n    }\n    function getValue(data, bindingIndex) {\n        return bindingIndex > 0 ? data[bindingIndex] : null;\n    }\n    function lockContext(context, hostBindingsMode) {\n        patchConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function isContextLocked(context, hostBindingsMode) {\n        return hasConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function getLockedConfig(hostBindingsMode) {\n        return hostBindingsMode ? 256 /* HostBindingsLocked */ :\n            128 /* TemplateBindingsLocked */;\n    }\n    function getPropValuesStartPosition(context) {\n        var startPosition = 3 /* ValuesStartPosition */;\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            startPosition += 4 /* BindingsStartOffset */ + getValuesCount(context);\n        }\n        return startPosition;\n    }\n    function hasValueChanged(a, b) {\n        if (b === NO_CHANGE)\n            return false;\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[2 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) && value.length >= 3 /* ValuesStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function isStylingMapArray(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            (typeof value[1 /* ValuesStartPosition */] === 'string');\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    var MAP_DIRTY_VALUE = typeof ngDevMode !== 'undefined' && ngDevMode ? {} : { MAP_DIRTY_VALUE: true };\n    function setMapAsDirty(map) {\n        map[0 /* RawValuePosition */] = MAP_DIRTY_VALUE;\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n    function isHostStylingActive(directiveOrSourceId) {\n        return directiveOrSourceId !== TEMPLATE_DIRECTIVE_INDEX;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the `{key:value}` map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n        stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    // TODO (matsko|AndrewKushnir): refactor this once we figure out how to generate separate\n    // `input('class') + classMap()` instructions.\n    function selectClassBasedInputName(inputs) {\n        return inputs.hasOwnProperty('class') ? 'class' : 'className';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentIndex = getParentInjectorIndex(parentLoc);\n            var parentLView = getParentInjectorView(parentLoc, hostView);\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ɵcmp = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() || null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵcmp;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵdir;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        // we lowercase the class attribute value to be able to match\n        // selectors without case-sensitivity\n        // (selectors are already in lowercase when generated)\n        var matchIndex = nodeClassAttrVal.toLowerCase().indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    // these values will get filled in the very first time this is accessed...\n    var _state = {\n        element: null,\n        directiveIndex: -1,\n        sourceIndex: -1,\n        classesBitMask: -1,\n        classesIndex: -1,\n        stylesBitMask: -1,\n        stylesIndex: -1,\n        lastDirectClassMap: null,\n        lastDirectStyleMap: null,\n    };\n    var BIT_MASK_START_VALUE = 0;\n    // the `0` start value is reserved for [map]-based entries\n    var INDEX_START_VALUE = 1;\n    /**\n     * Returns (or instantiates) the styling state for the given element.\n     *\n     * Styling state is accessed and processed each time a style or class binding\n     * is evaluated.\n     *\n     * If and when the provided `element` doesn't match the current element in the\n     * state then this means that styling was recently cleared or the element has\n     * changed in change detection. In both cases the styling state is fully reset.\n     *\n     * If and when the provided `directiveIndex` doesn't match the current directive\n     * index in the state then this means that a new source has introduced itself into\n     * the styling code (or, in other words, another directive or component has started\n     * to apply its styling host bindings to the element).\n     */\n    function getStylingState(element, directiveIndex) {\n        if (_state.element !== element) {\n            _state.element = element;\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex = directiveIndex === TEMPLATE_DIRECTIVE_INDEX ? 0 : 1;\n            _state.classesBitMask = BIT_MASK_START_VALUE;\n            _state.classesIndex = INDEX_START_VALUE;\n            _state.stylesBitMask = BIT_MASK_START_VALUE;\n            _state.stylesIndex = INDEX_START_VALUE;\n            _state.lastDirectClassMap = null;\n            _state.lastDirectStyleMap = null;\n        }\n        else if (_state.directiveIndex !== directiveIndex) {\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex++;\n        }\n        return _state;\n    }\n    /**\n     * Clears the styling state so that it can be used by another element's styling code.\n     */\n    function resetStylingState() {\n        _state.element = null;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        if (value !== NO_CHANGE) {\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, false);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular CSS class need to be\n                // applied again because on or more of the bindings for the CSS\n                // class have changed.\n                state.classesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, sanitizer, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        if (value !== NO_CHANGE) {\n            var sanitizationRequired = isMapBased ?\n                true :\n                (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular property need to be\n                // applied again because on or more of the bindings for the CSS\n                // property have changed.\n                state.stylesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired) {\n        var hostBindingsMode = isHostStylingActive(sourceIndex);\n        if (!isContextLocked(context, hostBindingsMode)) {\n            // this will only happen during the first update pass of the\n            // context. The reason why we can't use `tNode.firstTemplatePass`\n            // here is because its not guaranteed to be true when the first\n            // update pass is executed (remember that all styling instructions\n            // are run in the update phase, and, as a result, are no more\n            // styling instructions that are run in the creation phase).\n            registerBinding(context, counterIndex, sourceIndex, prop, bindingIndex, sanitizationRequired);\n            patchConfig(context, hostBindingsMode ? 64 /* HasHostBindings */ : 32 /* HasTemplateBindings */);\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            setValue(data, bindingIndex, value);\n            var doSetValuesAsStale = (getConfig(context) & 64 /* HasHostBindings */) &&\n                !hostBindingsMode && (prop ? !value : true);\n            if (doSetValuesAsStale) {\n                renderHostBindingsAsStale(context, data, prop);\n            }\n        }\n        return changed;\n    }\n    /**\n     * Iterates over all host-binding values for the given `prop` value in the context and sets their\n     * corresponding binding values to `null`.\n     *\n     * Whenever a template binding changes its value to `null`, all host-binding values should be\n     * re-applied\n     * to the element when the host bindings are evaluated. This may not always happen in the event\n     * that none of the bindings changed within the host bindings code. For this reason this function\n     * is expected to be called each time a template binding becomes falsy or when a map-based template\n     * binding changes.\n     */\n    function renderHostBindingsAsStale(context, data, prop) {\n        var valuesCount = getValuesCount(context);\n        if (prop !== null && hasConfig(context, 2 /* HasPropBindings */)) {\n            var itemsPerRow = 4 /* BindingsStartOffset */ + valuesCount;\n            var i = 3 /* ValuesStartPosition */;\n            var found = false;\n            while (i < context.length) {\n                if (getProp(context, i) === prop) {\n                    found = true;\n                    break;\n                }\n                i += itemsPerRow;\n            }\n            if (found) {\n                var bindingsStart = i + 4 /* BindingsStartOffset */;\n                var valuesStart = bindingsStart + 1; // the first column is template bindings\n                var valuesEnd = bindingsStart + valuesCount - 1;\n                for (var i_1 = valuesStart; i_1 < valuesEnd; i_1++) {\n                    var bindingIndex = context[i_1];\n                    if (bindingIndex !== 0) {\n                        setValue(data, bindingIndex, null);\n                    }\n                }\n            }\n        }\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            var bindingsStart = 3 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */;\n            var valuesStart = bindingsStart + 1; // the first column is template bindings\n            var valuesEnd = bindingsStart + valuesCount - 1;\n            for (var i = valuesStart; i < valuesEnd; i++) {\n                var stylingMap = getValue(data, context[i]);\n                if (stylingMap) {\n                    setMapAsDirty(stylingMap);\n                }\n            }\n        }\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, their property name value is set as `[MAP]`.\n     */\n    function registerBinding(context, countId, sourceIndex, prop, bindingValue, sanitizationRequired) {\n        var found = false;\n        prop = prop || MAP_BASED_ENTRY_PROP_NAME;\n        var totalSources = getTotalSources(context);\n        // if a new source is detected then a new column needs to be allocated into\n        // the styling context. The column is basically a new allocation of binding\n        // sources that will be available to each property.\n        while (totalSources <= sourceIndex) {\n            addNewSourceColumn(context);\n            totalSources++;\n        }\n        var isBindingIndexValue = typeof bindingValue === 'number';\n        var entriesPerRow = 4 /* BindingsStartOffset */ + getValuesCount(context);\n        var i = 3 /* ValuesStartPosition */;\n        // all style/class bindings are sorted by property name\n        while (i < context.length) {\n            var p = getProp(context, i);\n            if (prop <= p) {\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                }\n                else if (isBindingIndexValue) {\n                    patchConfig(context, 8 /* HasCollisions */);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n                found = true;\n                break;\n            }\n            i += entriesPerRow;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n            addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n        }\n    }\n    /**\n     * Inserts a new row into the provided `TStylingContext` and assigns the provided `prop` value as\n     * the property entry.\n     */\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, // 1) config value\n        DEFAULT_GUARD_MASK_VALUE, // 2) template bit mask\n        DEFAULT_GUARD_MASK_VALUE, // 3) host bindings bit mask\n        prop);\n        index += 4; // the 4 values above\n        // 5...) default binding index for the template value\n        // depending on how many sources already exist in the context,\n        // multiple default index entries may need to be inserted for\n        // the new value in the context.\n        var totalBindingsPerEntry = getTotalSources(context);\n        for (var i = 0; i < totalBindingsPerEntry; i++) {\n            context.splice(index, 0, DEFAULT_BINDING_INDEX);\n            index++;\n        }\n        // 6) default binding value for the new entry\n        context.splice(index, 0, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, bitIndex, sourceIndex) {\n        if (typeof bindingValue === 'number') {\n            var hostBindingsMode = isHostStylingActive(sourceIndex);\n            var cellIndex = index + 4 /* BindingsStartOffset */ + sourceIndex;\n            context[cellIndex] = bindingValue;\n            var updatedBitMask = getGuardMask(context, index, hostBindingsMode) | (1 << bitIndex);\n            setGuardMask(context, index, updatedBitMask, hostBindingsMode);\n        }\n        else if (bindingValue !== null && getDefaultValue(context, index) === null) {\n            setDefaultValue(context, index, bindingValue);\n        }\n    }\n    /**\n     * Registers a new column into the provided `TStylingContext`.\n     *\n     * If and when a new source is detected then a new column needs to\n     * be allocated into the styling context. The column is basically\n     * a new allocation of binding sources that will be available to each\n     * property.\n     *\n     * Each column that exists in the styling context resembles a styling\n     * source. A styling source an either be the template or one or more\n     * components or directives all containing styling host bindings.\n     */\n    function addNewSourceColumn(context) {\n        // we use -1 here because we want to insert right before the last value (the default value)\n        var insertOffset = 4 /* BindingsStartOffset */ + getValuesCount(context) - 1;\n        var index = 3 /* ValuesStartPosition */;\n        while (index < context.length) {\n            index += insertOffset;\n            context.splice(index++, 0, DEFAULT_BINDING_INDEX);\n            // the value was inserted just before the default value, but the\n            // next entry in the context starts just after it. Therefore++.\n            index++;\n        }\n        context[1 /* TotalSourcesPosition */]++;\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the internal `stylingApply` function (which is scheduled to run at the very\n     * end of change detection for an element if one or more style/class bindings\n     * were processed) and will rely on any state values that are set from when\n     * any of the styling bindings executed.\n     *\n     * This function is designed to be called twice: one when change detection has\n     * processed an element within the template bindings (i.e. just as `advance()`\n     * is called) and when host bindings have been processed. In both cases the\n     * styles and classes in both contexts will be applied to the element, but the\n     * algorithm will selectively decide which bindings to run depending on the\n     * columns in the context. The provided `directiveIndex` value will help the\n     * algorithm determine which bindings to apply: either the template bindings or\n     * the host bindings (see `applyStylingToElement` for more information).\n     *\n     * Note that once this function is called all temporary styling state data\n     * (i.e. the `bitMask` and `counter` values for styles and classes will be cleared).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var state = getStylingState(element, directiveIndex);\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        if (stylesContext) {\n            if (!isContextLocked(stylesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(stylesContext, hostBindingsMode);\n            }\n            if (state.stylesBitMask !== 0) {\n                applyStylingViaContext(stylesContext, renderer, element, data, state.stylesBitMask, setStyle, styleSanitizer, hostBindingsMode);\n            }\n        }\n        if (classesContext) {\n            if (!isContextLocked(classesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(classesContext, hostBindingsMode);\n            }\n            if (state.classesBitMask !== 0) {\n                applyStylingViaContext(classesContext, renderer, element, data, state.classesBitMask, setClass, null, hostBindingsMode);\n            }\n        }\n        resetStylingState();\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     *\n     * Note that the `TStylingContext` styling context contains two locks: one for template bindings\n     * and another for host bindings. Either one of these locks will be set when styling is applied\n     * during the template binding flush and/or during the host bindings flush.\n     */\n    function lockAndFinalizeContext(context, hostBindingsMode) {\n        var initialValues = getStylingMapArray(context);\n        updateInitialStylingOnContext(context, initialValues);\n        lockContext(context, hostBindingsMode);\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a apart\n        // of a binding (since it's static)\n        var COUNT_ID_FOR_STYLING = -1;\n        var hasInitialStyling = false;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, COUNT_ID_FOR_STYLING, 0, prop, value, false);\n                hasInitialStyling = true;\n            }\n        }\n        if (hasInitialStyling) {\n            patchConfig(context, 16 /* HasInitialStyling */);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * the `flushStyling` function so that it can call this function for both\n     * the styles and classes contexts).\n     */\n    function applyStylingViaContext(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer, hostBindingsMode) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = null;\n        var applyAllValues = false;\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            stylingMapsSyncFn = getStylingMapsSyncFn();\n            var mapsGuardMask = getGuardMask(context, 3 /* ValuesStartPosition */, hostBindingsMode);\n            applyAllValues = (bitMask & mapsGuardMask) !== 0;\n        }\n        var valuesCount = getValuesCount(context);\n        var totalBindingsToVisit = 1;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        if (hostBindingsMode) {\n            mapsMode |= 8 /* RecurseInnerMaps */;\n            totalBindingsToVisit = valuesCount - 1;\n        }\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var guardMask = getGuardMask(context, i, hostBindingsMode);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var defaultValue = getDefaultValue(context, i);\n                // Part 1: Visit the `[styling.prop]` value\n                for (var j = 0; j < totalBindingsToVisit; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    if (!valueApplied && bindingIndex !== 0) {\n                        var value = getValue(bindingData, bindingIndex);\n                        if (isStylingValueDefined(value)) {\n                            var checkValueOnly = hostBindingsMode && j === 0;\n                            if (!checkValueOnly) {\n                                var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                                    sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                                    unwrapSafeValue(value);\n                                applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                            }\n                            valueApplied = true;\n                        }\n                    }\n                    // Part 2: Visit the `[style]` or `[class]` map-based value\n                    if (stylingMapsSyncFn) {\n                        // determine whether or not to apply the target property or to skip it\n                        var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                            2 /* ApplyTargetProp */);\n                        // the first column in the context (when `j == 0`) is special-cased for\n                        // template bindings. If and when host bindings are being processed then\n                        // the first column will still be iterated over, but the values will only\n                        // be checked against (not applied). If and when this happens we need to\n                        // notify the map-based syncing code to know not to apply the values it\n                        // comes across in the very first map-based binding (which is also located\n                        // in column zero).\n                        if (hostBindingsMode && j === 0) {\n                            mode |= 16 /* CheckValuesOnly */;\n                        }\n                        var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, j, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                        valueApplied = valueApplied || valueAppliedWithinMap;\n                    }\n                }\n                // Part 3: apply the default value (e.g. `<div style=\"width:200\">` => `200px` gets applied)\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 4 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            if (hostBindingsMode) {\n                mapsMode |= 16 /* CheckValuesOnly */;\n            }\n            stylingMapsSyncFn(context, renderer, element, bindingData, 0, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    /**\n     * Applies the provided styling map to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has three different cases that can occur (for each item in the map):\n     *\n     * - Case 1: Attempt to apply the current value in the map to the element (if it's `non null`).\n     *\n     * - Case 2: If a map value fails to be applied then the algorithm will find a matching entry in\n     *           the initial values present in the context and attempt to apply that.\n     *\n     * - Default Case: If the initial value cannot be applied then a default value of `null` will be\n     *                 applied (which will remove the style/class value from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the styling map was applied to the element.\n     */\n    function applyStylingMapDirectly(renderer, context, element, data, bindingIndex, map, isClassBased, applyFn, sanitizer, forceUpdate) {\n        if (forceUpdate || hasValueChanged(data[bindingIndex], map)) {\n            setValue(data, bindingIndex, map);\n            var initialStyles = hasConfig(context, 16 /* HasInitialStyling */) ? getStylingMapArray(context) : null;\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                // case 1: apply the map value (if it exists)\n                var applied = applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer);\n                // case 2: apply the initial value (if it exists)\n                if (!applied && initialStyles) {\n                    applied = findAndApplyMapValue(renderer, element, applyFn, initialStyles, prop, bindingIndex, sanitizer);\n                }\n                // default case: apply `null` to remove the value\n                if (!applied) {\n                    applyFn(renderer, element, prop, null, bindingIndex);\n                }\n            }\n            var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n            if (isClassBased) {\n                state.lastDirectClassMap = map;\n            }\n            else {\n                state.lastDirectStyleMap = map;\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Applies the provided styling prop/value to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has four different cases that can occur:\n     *\n     * - Case 1: Apply the provided prop/value (style or class) entry to the element\n     *           (if it is `non null`).\n     *\n     * - Case 2: If value does not get applied (because its `null` or `undefined`) then the algorithm\n     *           will check to see if a styling map value was applied to the element as well just\n     *           before this (via `styleMap` or `classMap`). If and when a map is present then the\n      *          algorithm will find the matching property in the map and apply its value.\n      *\n     * - Case 3: If a map value fails to be applied then the algorithm will check to see if there\n     *           are any initial values present and attempt to apply a matching value based on\n     *           the target prop.\n     *\n     * - Default Case: If a matching initial value cannot be applied then a default value\n     *                 of `null` will be applied (which will remove the style/class value\n     *                 from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the prop/value styling was applied to the element.\n     */\n    function applyStylingValueDirectly(renderer, context, element, data, bindingIndex, prop, value, isClassBased, applyFn, sanitizer) {\n        var applied = false;\n        if (hasValueChanged(data[bindingIndex], value)) {\n            setValue(data, bindingIndex, value);\n            // case 1: apply the provided value (if it exists)\n            applied = applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer);\n            // case 2: find the matching property in a styling map and apply the detected value\n            if (!applied && hasConfig(context, 4 /* HasMapBindings */)) {\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                var map = isClassBased ? state.lastDirectClassMap : state.lastDirectStyleMap;\n                applied = map ?\n                    findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) :\n                    false;\n            }\n            // case 3: apply the initial value (if it exists)\n            if (!applied && hasConfig(context, 16 /* HasInitialStyling */)) {\n                var map = getStylingMapArray(context);\n                applied =\n                    map ? findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex) : false;\n            }\n            // default case: apply `null` to remove the value\n            if (!applied) {\n                applyFn(renderer, element, prop, null, bindingIndex);\n            }\n        }\n        return applied;\n    }\n    function applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer) {\n        var valueToApply = unwrapSafeValue(value);\n        if (isStylingValueDefined(valueToApply)) {\n            valueToApply =\n                sanitizer ? sanitizer(prop, value, 3 /* ValidateAndSanitize */) : valueToApply;\n            applyFn(renderer, element, prop, valueToApply, bindingIndex);\n            return true;\n        }\n        return false;\n    }\n    function findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) {\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var p = getMapProp(map, i);\n            if (p === prop) {\n                var valueToApply = getMapValue(map, i);\n                valueToApply = sanitizer ?\n                    sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                    valueToApply;\n                applyFn(renderer, element, prop, valueToApply, bindingIndex);\n                return true;\n            }\n            if (p > prop) {\n                break;\n            }\n        }\n        return false;\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        if (renderer !== null) {\n            // Use `isStylingValueDefined` to account for falsy values that should be bound like 0.\n            if (isStylingValueDefined(value)) {\n                // opacity, z-index and flexbox all have number values\n                // and these need to be converted into strings so that\n                // they can be assigned properly.\n                value = value.toString();\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    // The reason why native style may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.setProperty(prop, value);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.removeProperty(prop);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (renderer !== null && className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(native, className);\n                }\n                else {\n                    // the reason why classList may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.add(className);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeClass(native, className);\n                }\n                else {\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.remove(className);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `advance(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, sourceIndex, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & 1 /* ApplyAllValues */) === 0) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, sourceIndex, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var totalMaps = getValuesCount(context) - 1; // maps have no default value\n        var mapsLimit = totalMaps - 1;\n        var recurseInnerMaps = currentMapIndex < mapsLimit && (mode & 8 /* RecurseInnerMaps */) !== 0;\n        var checkValuesOnly = (mode & 16 /* CheckValuesOnly */) !== 0;\n        if (checkValuesOnly) {\n            // inner modes do not check values ever (that can only happen\n            // when sourceIndex === 0)\n            mode &= ~16 /* CheckValuesOnly */;\n        }\n        var targetPropValueWasApplied = false;\n        if (currentMapIndex <= mapsLimit) {\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            var bindingIndex = getBindingValue(context, 3 /* ValuesStartPosition */, currentMapIndex);\n            var stylingMapArr = getValue(data, bindingIndex);\n            if (stylingMapArr) {\n                while (cursor < stylingMapArr.length) {\n                    var prop = getMapProp(stylingMapArr, cursor);\n                    var iteratedTooFar = targetProp && prop > targetProp;\n                    var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                    var value = getMapValue(stylingMapArr, cursor);\n                    var valueIsDefined = isStylingValueDefined(value);\n                    // the recursive code is designed to keep applying until\n                    // it reaches or goes past the target prop. If and when\n                    // this happens then it will stop processing values, but\n                    // all other map values must also catch up to the same\n                    // point. This is why a recursive call is still issued\n                    // even if the code has iterated too far.\n                    var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                    var innerProp = iteratedTooFar ? targetProp : prop;\n                    var valueApplied = recurseInnerMaps ?\n                        innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue) :\n                        false;\n                    if (iteratedTooFar) {\n                        if (!targetPropValueWasApplied) {\n                            targetPropValueWasApplied = valueApplied;\n                        }\n                        break;\n                    }\n                    if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                        valueApplied = true;\n                        if (!checkValuesOnly) {\n                            var useDefault = isTargetPropMatched && !valueIsDefined;\n                            var bindingIndexToApply = isTargetPropMatched ? bindingIndex : null;\n                            var finalValue = void 0;\n                            if (useDefault) {\n                                finalValue = defaultValue;\n                            }\n                            else {\n                                finalValue = sanitizer ?\n                                    sanitizer(prop, value, 3 /* ValidateAndSanitize */) :\n                                    (value ? unwrapSafeValue(value) : null);\n                            }\n                            applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                        }\n                    }\n                    targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                    cursor += 2 /* TupleSize */;\n                }\n                setCurrentSyncCursor(currentMapIndex, cursor);\n                // this is a fallback case in the event that the styling map is `null` for this\n                // binding but there are other map-based bindings that need to be evaluated\n                // afterwards. If the `prop` value is falsy then the intention is to cycle\n                // through all of the properties in the remaining maps as well. If the current\n                // styling map is too short then there are no values to iterate over. In either\n                // case the follow-up maps need to be iterated over.\n                if (recurseInnerMaps &&\n                    (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp)) {\n                    targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n                }\n            }\n            else if (recurseInnerMaps) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map\n     *   (i.e. the `SkipTargetProp` flag is set)\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *   (i.e. the `SkipTargetProp` flag is unset)\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isTargetPropMatched) {\n        var innerMode = currentMode;\n        // the statements below figures out whether or not an inner styling map\n        // is allowed to apply its value or not. The main thing to keep note\n        // of is that if the target prop isn't matched then its expected that\n        // all values before it are allowed to be applied so long as \"apply all values\"\n        // is set to true.\n        var applyAllValues = currentMode & 1 /* ApplyAllValues */;\n        var applyTargetProp = currentMode & 2 /* ApplyTargetProp */;\n        var allowInnerApply = !valueIsDefined && (isTargetPropMatched ? applyTargetProp : applyAllValues);\n        if (allowInnerApply) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) !== 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context\n     */\n    function attachStylingDebugObject(context, isClassBased) {\n        var debug = new TStylingContextDebug(context, isClassBased);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context, _isClassBased) {\n            this.context = context;\n            this._isClassBased = _isClassBased;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `DebugStylingContextEntry`.\n             */\n            get: function () {\n                var context = this.context;\n                var totalColumns = getValuesCount(context);\n                var entries = {};\n                var start = getPropValuesStartPosition(context);\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp(context, i);\n                    var templateBitMask = getGuardMask(context, i, false);\n                    var hostBindingsBitMask = getGuardMask(context, i, true);\n                    var defaultValue = getDefaultValue(context, i);\n                    var sanitizationRequired = isSanitizationRequired(context, i);\n                    var bindingsStartPosition = i + 4 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < totalColumns; j++) {\n                        var bindingIndex = context[bindingsStartPosition + j];\n                        if (bindingIndex !== 0) {\n                            sources.push(bindingIndex);\n                        }\n                    }\n                    entries[prop] = {\n                        prop: prop,\n                        templateBitMask: templateBitMask,\n                        hostBindingsBitMask: hostBindingsBitMask,\n                        sanitizationRequired: sanitizationRequired,\n                        valuesCount: sources.length, defaultValue: defaultValue, sources: sources,\n                    };\n                    i += 4 /* BindingsStartOffset */ + totalColumns;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Prints a detailed summary of each styling source grouped together with each binding index in\n         * the context.\n         */\n        TStylingContextDebug.prototype.printSources = function () {\n            var output = '\\n';\n            var context = this.context;\n            var prefix = this._isClassBased ? 'class' : 'style';\n            var bindingsBySource = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            for (var i = 0; i < totalColumns; i++) {\n                var isDefaultColumn = i === totalColumns - 1;\n                var hostBindingsMode = i !== TEMPLATE_DIRECTIVE_INDEX;\n                var type = getTypeFromColumn(i, totalColumns);\n                var entries = [];\n                var j = 3 /* ValuesStartPosition */;\n                while (j < context.length) {\n                    var value = getBindingValue(context, j, i);\n                    if (isDefaultColumn || value > 0) {\n                        var bitMask = getGuardMask(context, j, hostBindingsMode);\n                        var bindingIndex = isDefaultColumn ? -1 : value;\n                        var prop = getProp(context, j);\n                        var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                        var binding = \"\" + prefix + (isMapBased ? '' : '.' + prop);\n                        entries.push({ binding: binding, value: value, bindingIndex: bindingIndex, bitMask: bitMask });\n                    }\n                    j += itemsPerRow;\n                }\n                bindingsBySource.push({ type: type, entries: entries.sort(function (a, b) { return a.bindingIndex - b.bindingIndex; }) });\n            }\n            bindingsBySource.forEach(function (entry) {\n                output += \"[\" + entry.type.toUpperCase() + \"]\\n\";\n                output += repeat('-', entry.type.length + 2) + '\\n';\n                var tab = '  ';\n                entry.entries.forEach(function (entry) {\n                    var isDefault = typeof entry.value !== 'number';\n                    var value = entry.value;\n                    if (!isDefault || value !== null) {\n                        output += tab + \"[\" + entry.binding + \"] = `\" + value + \"`\";\n                        output += '\\n';\n                    }\n                });\n                output += '\\n';\n            });\n            /* tslint:disable */\n            console.log(output);\n        };\n        /**\n         * Prints a detailed table of the entire styling context.\n         */\n        TStylingContextDebug.prototype.printTable = function () {\n            // IE (not Edge) is the only browser that doesn't support this feature. Because\n            // these debugging tools are not apart of the core of Angular (they are just\n            // extra tools) we can skip-out on older browsers.\n            if (!console.table) {\n                throw new Error('This feature is not supported in your browser');\n            }\n            var context = this.context;\n            var table = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            var totalProps = Math.floor(context.length / itemsPerRow);\n            var i = 3 /* ValuesStartPosition */;\n            while (i < context.length) {\n                var prop = getProp(context, i);\n                var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                var entry = {\n                    prop: prop,\n                    'tpl mask': generateBitString(getGuardMask(context, i, false), isMapBased, totalProps),\n                    'host mask': generateBitString(getGuardMask(context, i, true), isMapBased, totalProps),\n                };\n                for (var j = 0; j < totalColumns; j++) {\n                    var key = getTypeFromColumn(j, totalColumns);\n                    var value = getBindingValue(context, i, j);\n                    entry[key] = value;\n                }\n                i += itemsPerRow;\n                table.push(entry);\n            }\n            /* tslint:disable */\n            console.table(table);\n        };\n        return TStylingContextDebug;\n    }());\n    function generateBitString(value, isMapBased, totalProps) {\n        if (isMapBased || value > 1) {\n            return \"0b\" + leftPad(value.toString(2), totalProps, '0');\n        }\n        return null;\n    }\n    function leftPad(value, max, pad) {\n        return repeat(pad, max - value.length) + value;\n    }\n    function getTypeFromColumn(index, totalColumns) {\n        if (index === TEMPLATE_DIRECTIVE_INDEX) {\n            return 'template';\n        }\n        else if (index === totalColumns - 1) {\n            return 'defaults';\n        }\n        else {\n            return \"dir #\" + index;\n        }\n    }\n    function repeat(c, times) {\n        var s = '';\n        for (var i = 0; i < times; i++) {\n            s += c;\n        }\n        return s;\n    }\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n            this._debugContext = isStylingContext(context) ?\n                new TStylingContextDebug(context, _isClassBased) :\n                context;\n        }\n        Object.defineProperty(NodeStylingDebug.prototype, \"context\", {\n            get: function () { return this._debugContext; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this.context.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = hasConfig(this.context.context, 4 /* HasMapBindings */);\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { return fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            // run the template bindings\n            applyStylingViaContext(this.context.context, null, mockElement, this._data, true, mapFn, sanitizer, false);\n            // and also the host bindings\n            applyStylingViaContext(this.context.context, null, mockElement, this._data, true, mapFn, sanitizer, true);\n        };\n        return NodeStylingDebug;\n    }());\n    function buildConfig(context) {\n        var hasMapBindings = hasConfig(context, 4 /* HasMapBindings */);\n        var hasPropBindings = hasConfig(context, 2 /* HasPropBindings */);\n        var hasCollisions = hasConfig(context, 8 /* HasCollisions */);\n        var hasTemplateBindings = hasConfig(context, 32 /* HasTemplateBindings */);\n        var hasHostBindings = hasConfig(context, 64 /* HasHostBindings */);\n        var templateBindingsLocked = hasConfig(context, 128 /* TemplateBindingsLocked */);\n        var hostBindingsLocked = hasConfig(context, 256 /* HostBindingsLocked */);\n        var allowDirectStyling$1 = allowDirectStyling(context, false) || allowDirectStyling(context, true);\n        return {\n            hasMapBindings: hasMapBindings,\n            hasPropBindings: hasPropBindings,\n            hasCollisions: hasCollisions,\n            hasTemplateBindings: hasTemplateBindings,\n            hasHostBindings: hasHostBindings,\n            templateBindingsLocked: templateBindingsLocked,\n            hostBindingsLocked: hostBindingsLocked,\n            allowDirectStyling: allowDirectStyling$1,\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = NG_DEV_MODE && createNamedArrayType('LView') || null;\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas, //\n        consts) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n            this.consts = consts;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 64 /* hasInitialStyling */)\n                    flags.push('TNodeFlags.hasInitialStyling');\n                if (this.flags & 256 /* hasHostBindings */)\n                    flags.push('TNodeFlags.hasHostBindings');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 128 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"bindingIndex\", {\n            get: function () { return this._raw_lView[BINDING_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        var styles = isStylingContext(tNode.styles) ?\n            new NodeStylingDebug(tNode.styles, lView, false) :\n            null;\n        var classes = isStylingContext(tNode.classes) ?\n            new NodeStylingDebug(tNode.classes, lView, true) :\n            null;\n        return {\n            html: toHtml(native),\n            native: native, styles: styles, classes: classes,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            // It is important that this be called first before the actual instructions\n                            // are run because this way the first directive ID value is not zero.\n                            incrementActiveDirectiveId();\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstTemplatePass) {\n                tView.firstTemplatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            selectView(oldView, null);\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        var flags = lView[FLAGS];\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingRoot(lView[BINDING_INDEX] = tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            selectView(oldView, null);\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            setPreviousOrParentTNode(previousOrParentTNode, isParent);\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        if ((tNode.flags & 256 /* hasHostBindings */) === 256 /* hasHostBindings */) {\n            invokeDirectivesHostBindings(tView, lView, tNode);\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     * @param consts Constants for this view\n     */\n    function createTView(viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + decls;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas, // schemas: SchemaMetadata[]|null,\n            consts) : // consts: TAttributes[]\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n                consts: consts,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, publicName, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, publicName, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var tNodeAttrs = tNode.attrs;\n        var inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var directiveInputs = directiveDef.inputs;\n            inputsFromAttrs.push(tNodeAttrs !== null ? generateInitialInputs(directiveInputs, tNodeAttrs) : null);\n            inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        if (inputsStore !== null) {\n            if (inputsStore.hasOwnProperty('class') || inputsStore.hasOwnProperty('className')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputsStore.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n        }\n        tNode.initialInputs = inputsFromAttrs;\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, dataValue, value) {\n        if (type === 3 /* Element */ || type === 0 /* Container */) {\n            /**\n             * dataValue is an array containing runtime input or output names for the directives:\n             * i+0: directive instance index\n             * i+1: publicName\n             * i+2: privateName\n             *\n             * e.g. [0, 'change', 'change-minified']\n             * we want to set the reflected property with the privateName: dataValue[i+2]\n             */\n            for (var i = 0; i < dataValue.length; i += 3) {\n                setNgReflectProperty(lView, element, type, dataValue[i + 2], value);\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        return matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            isAnimationProp(propName) || typeof Node !== 'function' || !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives !== null) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries !== null)\n                    tNode.flags |= 8 /* hasContentQuery */;\n                if (def.hostBindings !== null)\n                    tNode.flags |= 256 /* hasHostBindings */;\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n            initializeInputAndOutputAliases(tView, tNode);\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i - start);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    // It is important that this be called first before the actual instructions\n                    // are run because this way the first directive ID value is not zero.\n                    incrementActiveDirectiveId();\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(null);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.initialInputs !== null) {\n            setInputsFromAttrs(lView, directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags |= 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        tNode.flags |= 1 /* isDirectiveHost */;\n        // When the first directive is created on a node, save the index\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs !== null) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput !== null) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param inputs The list of inputs from the directive def\n     * @param attrs The static attrs on this node\n     */\n    function generateInitialInputs(inputs, attrs) {\n        var inputsToStore = null;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            if (inputs.hasOwnProperty(attrName)) {\n                if (inputsToStore === null)\n                    inputsToStore = [];\n                inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);\n            }\n            i += 2;\n        }\n        return inputsToStore;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertLView(currentView);\n        ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n            setPreviousOrParentTNode(previousOrParentTNode, isParent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        var view = getComponentViewByInstance(component);\n        checkNoChangesInternal(view, component);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            if (tViewNodeChild !== null) {\n                if (tViewNodeChild.type === 4 /* ElementContainer */ ||\n                    tViewNodeChild.type === 5 /* IcuContainer */) {\n                    var currentChild = tViewNodeChild.child;\n                    while (currentChild && (currentChild.type === 4 /* ElementContainer */ ||\n                        currentChild.type === 5 /* IcuContainer */)) {\n                        currentChild = currentChild.child;\n                    }\n                    tViewNodeChild = currentChild || tViewNodeChild;\n                }\n                return getNativeByTNodeOrNull(tViewNodeChild, lView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 128 /* isDetached */) !== 128 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        // FIXME: ngModuleRef is optional, so its type allows \"undefined\", whereas the code\n                        // below is passing null for the default/absent value.\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, isPipe) {\n        if (isComponentHost(hostTNode) && !isPipe) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, null, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * injectable def (`ɵprov`) onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_PROV_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_PROV_DEF)) {\n            Object.defineProperty(type, NG_PROV_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275prov.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        ngFactoryDef =\n                            getCompilerFacade().compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", {\n                                name: metadata.name,\n                                type: metadata.type,\n                                typeArgumentCount: metadata.typeArgumentCount,\n                                deps: reflectDependencies(type),\n                                injectFn: 'inject',\n                                isPipe: false\n                            });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ɵprov = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an injectable\n                        // def with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with injector def) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the injector def (`ɵinj`).\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its injector def\n        // (`ɵinj`)\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing a \\u0275prov definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an injectable\n        // def from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ɵprov = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (Array.isArray(provider)) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (Array.isArray(token)) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (Array.isArray(b)) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ɵcmp for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            elementAttributeInternal(getSelectedIndex(), name, value, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param decls The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param constsIndex Index of template in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, decls, vars, tagName, constsIndex, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, tViewConsts === null || constsIndex == null ? null : tViewConsts[constsIndex]);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            registerPostOrderHooks(tView, tContainerNode);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n            var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n            embeddedTViewNode.injectorIndex = tContainerNode.injectorIndex;\n            embeddedTView.node = embeddedTViewNode;\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        if (isDirectiveHost(tContainerNode)) {\n            createDirectivesInstances(tView, lView, tContainerNode);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tContainerNode, localRefExtractor);\n        }\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(getNativeByTNode(tNode, lView), lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    /**\n     * Internal function for applying a single style to an element.\n     *\n     * The reason why this function has been separated from `ɵɵstyleProp` is because\n     * it is also called from `ɵɵstylePropInterpolate`.\n     */\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false);\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = stylingProp(getSelectedIndex(), bindingIndex, className, value, true);\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     *\n     * Depending on the state of the `tNode.styles` styles context, the style/prop\n     * value may be applied directly to the element instead of being processed\n     * through the context. The reason why this occurs is for performance and fully\n     * depends on the state of the context (i.e. whether or not there are duplicate\n     * bindings or whether or not there are map-based bindings and property bindings\n     * present together).\n     */\n    function stylingProp(elementIndex, bindingIndex, prop, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var hostBindingsMode = isHostStyling();\n        var context = isClassBased ? getClassesContext(tNode) : getStylesContext(tNode);\n        var sanitizer = isClassBased ? null : getCurrentStyleSanitizer();\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (!isContextLocked(context, hostBindingsMode)) {\n            patchConfig(context, 2 /* HasPropBindings */);\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class value directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingValueDirectly(renderer, context, native, lView, bindingIndex, prop, value, isClassBased, isClassBased ? setClass : setStyle, sanitizerToUse);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(resetCurrentStyleSanitizer);\n            }\n        }\n        else {\n            // Context Resolution (or first update) Case: save the value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            var directiveIndex = getActiveDirectiveId();\n            if (isClassBased) {\n                updated = updateClassViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value);\n            }\n            else {\n                updated = updateStyleViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value, sanitizer);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = _stylingMap(index, context, bindingIndex, styles, false);\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    /**\n     * Internal function for applying a class string or key/value map of classes to an element.\n     *\n     * The reason why this function has been separated from `ɵɵclassMap` is because\n     * it is also called from `ɵɵclassMapInterpolate`.\n     */\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true);\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(elementIndex, context, bindingIndex, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var directiveIndex = getActiveDirectiveId();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = lView[bindingIndex];\n        var hostBindingsMode = isHostStyling();\n        var sanitizer = getCurrentStyleSanitizer();\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (!isContextLocked(context, hostBindingsMode)) {\n            patchConfig(context, 4 /* HasMapBindings */);\n        }\n        var valueHasChanged = hasValueChanged(oldValue, value);\n        var stylingMapArr = value === NO_CHANGE ? NO_CHANGE : normalizeIntoStylingMap(oldValue, value, !isClassBased);\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class map values directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingMapDirectly(renderer, context, native, lView, bindingIndex, stylingMapArr, isClassBased, isClassBased ? setClass : setStyle, sanitizerToUse, valueHasChanged);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(resetCurrentStyleSanitizer);\n            }\n        }\n        else {\n            updated = valueHasChanged;\n            activateStylingMapFeature();\n            // Context Resolution (or first update) Case: save the map value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            if (isClassBased) {\n                updateClassViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, valueHasChanged);\n            }\n            else {\n                updateStyleViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, sanitizer, valueHasChanged);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context, false)) {\n                var inputName = isClassBased ? selectClassBasedInputName(tNode.inputs) : 'style';\n                var inputs = tNode.inputs[inputName];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n                setElementExitFn(stylingApply);\n            }\n            setValue(lView, bindingIndex, newValue);\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be scheduled from any of the four styling instructions\n     * in this file. When called it will flush all style and class bindings to the element\n     * via the context resolution algorithm.\n     */\n    function stylingApply() {\n        var lView = getLView();\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveId();\n        var renderer = getRenderer(tNode, lView);\n        var sanitizer = getCurrentStyleSanitizer();\n        var classesContext = isStylingContext(tNode.classes) ? tNode.classes : null;\n        var stylesContext = isStylingContext(tNode.styles) ? tNode.styles : null;\n        flushStyling(renderer, lView, classesContext, stylesContext, native, directiveIndex, sanitizer);\n        resetCurrentStyleSanitizer();\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || allocStylingMapArray();\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || allocStylingMapArray();\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        if (hasAdditionalInitialStyling) {\n            tNode.flags |= 64 /* hasInitialStyling */;\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            var hasDirectives = isDirectiveHost(tNode);\n            context = allocTStylingContext(context, hasDirectives);\n            if (ngDevMode) {\n                attachStylingDebugObject(context, isClassBased);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not the style/class binding being applied was executed within a host bindings\n     * function.\n     */\n    function isHostStyling() {\n        return isHostStylingActive(getActiveDirectiveId());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param constsIndex Index of the element in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, constsIndex, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        var consts = tViewConsts === null || constsIndex == null ? null : tViewConsts[constsIndex];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, consts);\n        if (consts != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, consts);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, consts, lastAttrIndex);\n            }\n        }\n        if ((tNode.flags & 64 /* hasInitialStyling */) === 64 /* hasInitialStyling */) {\n            renderInitialStyling(renderer, native, tNode);\n        }\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (hasClassInput(tNode)) {\n            var inputName = selectClassBasedInputName(tNode.inputs);\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs[inputName]);\n        }\n        if (hasStyleInput(tNode)) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param constsIndex Index of the element in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, constsIndex, localRefs) {\n        ɵɵelementStart(index, name, constsIndex, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = (context && getInitialStylingValue(context)) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param constsIndex Index of the container in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, constsIndex, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        var tViewConsts = tView.consts;\n        var consts = tViewConsts === null || constsIndex == null ? null : tViewConsts[constsIndex];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, consts);\n        if (consts && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, consts, 0);\n        }\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param constsIndex Index of the container in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, constsIndex, localRefs) {\n        ɵɵelementContainerStart(index, constsIndex, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, decls, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, decls, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, decls, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, null, tView.consts);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        selectView(lContainer[PARENT], null);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var renderer = loadComponentRenderer(tNode, lView);\n        listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tView = lView[TVIEW];\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs != null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(lView, getSelectedIndex(), propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, getSelectedIndex(), propName, lView[BINDING_INDEX] - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    lView[BINDING_INDEX] - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * @publicApi\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(nodeIndex - HEADER_OFFSET, lView);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getDebugNode', getDebugNode);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\n            // Note: we can't export `ng` when using closure enhanced optimization as:\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\n            //   for typings for AngularJS (via `goog.provide('ng....')`).\n            var w = _global;\n            ngDevMode && assertDefined(fn, 'function not defined');\n            if (w) {\n                var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n                if (!container) {\n                    container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n                }\n                container[name] = fn;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: function (token, notFoundValue) {\n            throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n        }\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(-1, null, 1, 0, null, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = selectView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            selectView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            incrementActiveDirectiveId();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ɵcmp = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵcmp || superType.ɵdir;\n            }\n            else {\n                if (superType.ɵcmp) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵdir;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    superHostBindings(rf, ctx, elementIndex);\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ɵcmp = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    decls: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DirectiveDefFlags;\n    (function (DirectiveDefFlags) {\n        DirectiveDefFlags[DirectiveDefFlags[\"ContentQuery\"] = 2] = \"ContentQuery\";\n    })(DirectiveDefFlags || (DirectiveDefFlags = {}));\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ɵprov = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.11+38.sha-43487f6.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ɵprov = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ɵprov = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(-1, null, 1, 0, null, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = selectView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                selectView(oldLView, null);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(lView, tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(lView, tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(lView, tView) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, lView);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, lView, /* markAsDetached */ true);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, lView);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, lView);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, lView);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, lView);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(viewData, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 128 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                            if (ngDevMode) {\n                                var element = getNativeByIndex(previousElementIndex, lView);\n                                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ɵmod.id !== null) {\n            var id = ngModuleType.ɵmod.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ɵmod.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearRegisteredModuleState() {\n        modules.clear();\n    }\n    function getRegisteredModulesState() {\n        return new Map(modules);\n    }\n    function restoreRegisteredModulesState(moduleMap) {\n        modules = new Map(moduleMap);\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MOD_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275mod.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJ_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275inj.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ɵcmp set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n                // A `ɵcmp` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) {\n                return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir);\n            })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have a module def (\\u0275mod property)\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have a \\u0275mod property\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have a\n            // ɵcmp as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * component def (ɵcmp) onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMP_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error_1 = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error_1.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error_1.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error_1.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error_1.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * directive def onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIR_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/\\u0275dir.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addBaseDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", __assign({}, meta.metadata, { injectFn: 'directiveInject', isPipe: false }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275fac.js\", __assign({}, metadata, { injectFn: 'directiveInject', isPipe: true }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275pipe.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ɵinj = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The existence of this constant (in this particular file) informs the Angular compiler that the\n     * current program is actually @angular/core, which needs to be compiled specially.\n     */\n    var ITS_JUST_ANGULAR = true;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ɵfac = function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); };\n        ApplicationInitStatus.ɵprov = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: function (t) { return ApplicationInitStatus.ɵfac(t); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ɵfac = function Console_Factory(t) { return new (t || Console)(); };\n        Console.ɵprov = ɵɵdefineInjectable({ token: Console, factory: function (t) { return Console.ɵfac(t); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ɵfac = function Compiler_Factory(t) { return new (t || Compiler)(); };\n        Compiler.ɵprov = ɵɵdefineInjectable({ token: Compiler, factory: function (t) { return Compiler.ɵfac(t); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ɵfac = function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); };\n        Testability.ɵprov = ɵɵdefineInjectable({ token: Testability, factory: function (t) { return Testability.ɵfac(t); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ɵfac = function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); };\n        TestabilityRegistry.ɵprov = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: function (t) { return TestabilityRegistry.ɵfac(t); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__POST_R3__;\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ɵfac = function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); };\n        PlatformRef.ɵprov = ɵɵdefineInjectable({ token: PlatformRef, factory: function (t) { return PlatformRef.ɵfac(t); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ɵfac = function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); };\n        ApplicationRef.ɵprov = ɵɵdefineInjectable({ token: ApplicationRef, factory: function (t) { return ApplicationRef.ɵfac(t); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ɵfac = function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); };\n        SystemJsNgModuleLoader.ɵprov = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: function (t) { return SystemJsNgModuleLoader.ɵfac(t); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an instance of a `Proxy` and creates with an empty target object and binds it to the\n     * provided handler.\n     *\n     * The reason why this function exists is because IE doesn't support\n     * the `Proxy` class. For this reason an error must be thrown.\n     */\n    function createProxy(handler) {\n        var g = _global;\n        if (!g.Proxy) {\n            throw new Error('Proxy is not supported in this browser');\n        }\n        return new g.Proxy({}, handler);\n    }\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                if (className) {\n                    properties['className'] =\n                        properties['className'] ? properties['className'] + (\" \" + className) : className;\n                }\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                if (!this._classesProxy) {\n                    var element_1 = this.nativeElement;\n                    // we use a proxy here because VE code expects `.classes` to keep\n                    // track of which classes have been added and removed. Because we\n                    // do not make use of a debug renderer anymore, the return value\n                    // must always be `false` in the event that a class does not exist\n                    // on the element (even if it wasn't added and removed beforehand).\n                    this._classesProxy = createProxy({\n                        get: function (target, prop) {\n                            return element_1 ? element_1.classList.contains(prop) : false;\n                        },\n                        set: function (target, prop, value) {\n                            return element_1 ? element_1.classList.toggle(prop, !!value) : false;\n                        },\n                        ownKeys: function () { return element_1 ? Array.from(element_1.classList).sort() : []; },\n                        getOwnPropertyDescriptor: function (k) {\n                            // we use a special property descriptor here so that enumeration operations\n                            // such as `Object.keys` will work on this proxy.\n                            return {\n                                enumerable: true,\n                                configurable: true,\n                            };\n                        },\n                    });\n                }\n                return this._classesProxy;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__POST_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__POST_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            if (ivyEnabled) {\n                setLocaleId(locale);\n            }\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            if (ivyEnabled) {\n                setLocaleId(goog.LOCALE);\n            }\n            return goog.LOCALE;\n        }\n        return DEFAULT_LOCALE_ID;\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ɵmod = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ɵinj = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please add `import \\'@angular/localize/init\\';` to your polyfills.ts file.');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode$1;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMP_DEF = NG_COMP_DEF;\n    exports.ɵNG_DIR_DEF = NG_DIR_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MOD_DEF = NG_MOD_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_PROV_DEF = NG_PROV_DEF;\n    exports.ɵNG_INJ_DEF = NG_INJ_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}