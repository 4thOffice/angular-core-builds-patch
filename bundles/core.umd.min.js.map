{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","ɵɵinject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","template","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponent","isComponentDef","isRootView","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","nodeIndex","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","_stylingState","_stateStorage","Map","_stylingElement","STYLING_INDEX_START_VALUE","BIT_MASK_START_VALUE","getStylingState","element","readFromMap","classesBitMask","classesIndex","stylesBitMask","stylesIndex","resetStylingState","elementDepthCount","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","lView","getNativeByTNode","getNativeByTNodeOrNull","getTNode","view","load","getComponentViewByIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","resetPreOrderHookFlags","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","safeToRunHooks","getSelectedIndex","_currentSanitizer","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","isDifferent","a","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","Function","RendererStyleFlags3","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","updateLastDirectiveIndex","lastDirectiveIndex","markContextToPersistState","setConfig","getConfig","getProp","getPropConfig","isSanitizationRequired","getGuardMask","setGuardMask","maskValue","config","getValuesCount","getBindingValue","offset","getDefaultValue","allowStylingFlush","isContextLocked","stateIsPersisted","getPropValuesStartPosition","hasValueChanged","compareValueA","compareValueB","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","setMapValue","getMapValue","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","ANIMATION_PROP_PREFIX","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","parent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","prop","getUrlSanitizer","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","classes","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","DEFAULT_GUARD_MASK_VALUE","STYLING_INDEX_FOR_MAP_BINDING","DEFAULT_BINDING_VALUE","DEFAULT_SIZE_VALUE","deferredBindingQueue","updateClassBinding","bindingIndex","deferRegistration","forceUpdate","isMapBased","state","updateBindingData","updateStyleBinding","counterIndex","sanitizationRequired","deferBindingRegistration","flushDeferredBindings","registerBinding","changed","countId","bindingValue","registered","found","valuesCount","allocateNewContextEntry","addBindingIntoContext","firstValueIndex","lastValueIndex","maybeApplyStyling","allowFlush","bitMask","styleSetter","styleSanitizer","lockAndFinalizeContext","initialValues","updateInitialStylingOnContext","initialStyling","lockContext","contextHasUpdates","applyStyling","bindingData","bitMaskValue","applyStylingFn","normalizeBitMaskValue","stylingMapsSyncFn","getStylingMapsSyncFn","_activeStylingMapApplyFn","mapsMode","valueApplied","valuesCountUpToDefault","defaultValue","valueAppliedWithinMap","setStyle","nativeStyle","style","DashCase","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","isClassBased","stylingMapArr","NO_CHANGE","ELEMENT_MARKER","COMMENT_MARKER","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","resolveInnerMapMode","isValueAllowedToBeApplied","useDefault","valueToApply","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","activateStylingMapFeature","setStylingMapsSyncFn","currentMode","isExactMatch","innerMode","doApplyValue","addItemToStylingMap","allowOverwrite","propAtIndex","applied","stylingMapToString","attrValue","stylingMapToStringMap","stringMap","TStylingContextDebug","enumerable","configurable","entries","guardMask","bindingsStartPosition","sources","NodeStylingDebug","_data","_isClassBased","_sanitizer","overrideSanitizer","_mapValues","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","readLViewValue","TNode","tView_","propertyMetadataStartIndex","propertyMetadataEndIndex","localNames","initialInputs","tViews","projectionNext","projection","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","ɵɵselect","selectInternal","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshDescendantViews","staticContentQueries","refreshContentQueries","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","renderEmbeddedTemplate","setHostBindings","viewData","selectedIndex","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","staticViewQueries","executeViewQueryFn","refreshChildComponents","hostLView","componentRefresh","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_previousOrParentTNode","templateFn","executeTemplate","getRenderFlags","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesAndLocals","localRefExtractor","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","directiveRegistry","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","i_1","minifiedInputName","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","createLContainer","hostNative","isForViewContainerRef","adjustedElementIndex","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","checkView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","storeBindingMetadata","prefix","suffix","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","setValue","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","executeActionOnElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","rNode","nativeInsertBefore","nativeRemoveNode","destroyNode","executeActionOnContainer","renderParent","anchor","executeActionOnView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","isIcuCase","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","viewIndexInContainer","nextViewIndex","tViewNodeChild","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNodes","tProjectionNode","selectorIndex","projectedView","nodeToProject","appendProjectedNode","appendProjectedChildren","ngContainerChildTNode","projectionView","projectedTNode","nodeOrContainer","viewRootTNode","executeActionOnNode","executeActionOnElementContainerOrIcuContainer","executeActionOnProjection","componentLView","projectionTNode","projectedComponentLView","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_super","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","embeddedTView","createEmbeddedViewAndNode","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","componentIndex","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","injectorDefTypes","Set","_destroyed","dedupStack","injectorDef","processInjectorType","provider","processProvider","set","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","record","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","multiProviderMixError","staticError","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","StaticInjector","_records","useNew","recursivelyProcessProviders","resolvedProvider","resolveProvider","computeDeps","providerDeps","multiProvider","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","metadata","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵproperty","bindReconciledValue","ɵɵattribute","bound","interpolationV","isBindingUpdated","interpolation1","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","tContainerNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","ɵɵstyling","updateLastDirectiveIndex$1","getClassesContext","getStylesContext","getActiveDirectiveStylingIndex","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","_stylingProp","resolveStylePropValue","resolvedValue","deferStylingUpdate","ɵɵclassProp","defer","updated","ɵɵstyleMap","updateDirectiveInputValue","_stylingMap","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","newValue","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","ɵɵstylingApply","getRenderer","flushStyling","classesContext","stylesContext","persistState","allowFlushClasses","allowFlushStyles","classesFlushed","stylesFlushed","deleteStylingStateFromStorage","storeStylingState","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","getContext","allocTStylingContext","getActiveDirectiveSuperClassHeight","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextBinding","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext$1","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","resetAllStylingState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","features_1","features_1_1","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","floor","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","ɵɵi18nLocalize","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","proto","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","e_3","e_3_1","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","e_4","lViewResults","e_4_1","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","typeName","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","LOCALE_ID$1","TRANSLATIONS$1","TRANSLATIONS_FORMAT","trace","events","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","tNodeAttrs","lowercaseTNodeAttrs","eAttrs","_getStylingDebugInfo","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","debugNode","getDebugNode","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.1+24.sha-914900a.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        var def = type[NG_INJECTABLE_DEF];\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n            stylingWritePersistedState: 0,\n            stylingReadPersistedState: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            // Add ngInjectableDef so components are reachable through the module injector by default\n            // (unless it has already been set by the @Injectable decorator). This is mostly to\n            // support injecting components in tests. In real application code, components should\n            // be retrieved through the node injector, so this isn't a problem.\n            if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n                type[NG_INJECTABLE_DEF] =\n                    ɵɵdefineInjectable({ token: type, factory: componentDefinition.factory });\n            }\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        if (checkHooks !== null || firstPassHooks !== null) {\n            var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n                firstPassHooks :\n                checkHooks;\n            if (hooksToCall !== null) {\n                callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n            }\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        var flags = currentView[FLAGS];\n        if (currentNodeIndex == null && (flags & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            currentView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * // TODO(matsko): add updateMask info\n     *\n     * This file contains all state-based logic for styling in Angular.\n     *\n     * Styling in Angular is evaluated with a series of styling-specific\n     * template instructions which are called one after another each time\n     * change detection occurs in Angular.\n     *\n     * Styling makes use of various temporary, state-based variables between\n     * instructions so that it can better cache and optimize its values.\n     * These values are usually populated and cleared when an element is\n     * exited in change detection (once all the instructions are run for\n     * that element).\n     *\n     * There are, however, situations where the state-based values\n     * need to be stored and used at a later point. This ONLY occurs when\n     * there are template-level as well as host-binding-level styling\n     * instructions on the same element. The example below shows exactly\n     * what could be:\n     *\n     * ```html\n     * <!-- two sources of styling: the template and the directive -->\n     * <div [style.width]=\"width\" dir-that-sets-height></div>\n     * ```\n     *\n     * If and when this situation occurs, the current styling state is\n     * stored in a storage map value and then later accessed once the\n     * host bindings are evaluated. Once styling for the current element\n     * is over then the map entry will be cleared.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    var _stylingState = null;\n    var _stateStorage = new Map();\n    // this value is not used outside this file and is only here\n    // as a caching check for when the element changes.\n    var _stylingElement = null;\n    var STYLING_INDEX_START_VALUE = 1;\n    var BIT_MASK_START_VALUE = 0;\n    function getStylingState(element, readFromMap) {\n        if (!_stylingElement || element !== _stylingElement) {\n            _stylingElement = element;\n            if (readFromMap) {\n                _stylingState = _stateStorage.get(element) || null;\n                ngDevMode && ngDevMode.stylingReadPersistedState++;\n            }\n            _stylingState = _stylingState || {\n                classesBitMask: BIT_MASK_START_VALUE,\n                classesIndex: STYLING_INDEX_START_VALUE,\n                stylesBitMask: BIT_MASK_START_VALUE,\n                stylesIndex: STYLING_INDEX_START_VALUE,\n            };\n        }\n        return _stylingState;\n    }\n    function resetStylingState() {\n        _stylingState = null;\n        _stylingElement = null;\n    }\n    function storeStylingState(element, state) {\n        ngDevMode && ngDevMode.stylingWritePersistedState++;\n        _stateStorage.set(element, state);\n    }\n    function deleteStylingStateFromStorage(element) {\n        _stateStorage.delete(element);\n    }\n    function resetAllStylingState() {\n        resetStylingState();\n        _stateStorage.clear();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        var index = tNode.index;\n        var node = index == -1 ? null : unwrapRNode(lView[index]);\n        ngDevMode && node !== null && assertDomNode(node);\n        return node;\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex === null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns he current depth of the super/sub class inheritance chain.\n     *\n     * This will return how many inherited directive/component classes\n     * exist in the current chain.\n     *\n     * ```typescript\n     * @Directive({ selector: '[super-dir]' })\n     * class SuperDir {}\n     *\n     * @Directive({ selector: '[sub-dir]' })\n     * class SubDir extends SuperDir {}\n     *\n     * // if `<div sub-dir>` is used then the super class height is `1`\n     * // if `<div super-dir>` is used then the super class height is `0`\n     * ```\n     */\n    function getActiveDirectiveSuperClassHeight() {\n        return activeDirectiveSuperClassHeight;\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n        resetAllStylingState();\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param safeToRunHooks Whether the runtime is in a state where running lifecycle hooks is valid.\n     * This is not always the case (for example, the application may have crashed and `leaveView` is\n     * being executed while unwinding the call stack).\n     */\n    function leaveView(newView, safeToRunHooks) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                safeToRunHooks && executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // we have now jumped to another element\n        // therefore the state is stale\n        resetStylingState();\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    var MAP_BASED_ENTRY_PROP_NAME = '--MAP--';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling) {\n        // because map-based bindings deal with a dynamic set of values, there\n        // is no way to know ahead of time whether or not sanitization is required.\n        // For this reason the configuration will always mark sanitization as active\n        // (this means that when map-based values are applied then sanitization will\n        // be checked against each property).\n        var mapBasedConfig = 1 /* SanitizationRequired */;\n        return [\n            initialStyling || [''],\n            0 /* Initial */,\n            TEMPLATE_DIRECTIVE_INDEX,\n            mapBasedConfig,\n            0,\n            MAP_BASED_ENTRY_PROP_NAME,\n        ];\n    }\n    /**\n     * Sets the provided directive as the last directive index in the provided `TStylingContext`.\n     *\n     * Styling in Angular can be applied from the template as well as multiple sources of\n     * host bindings. This means that each binding function (the template function or the\n     * hostBindings functions) will generate styling instructions as well as a styling\n     * apply function (i.e. `stylingApply()`). Because host bindings functions and the\n     * template function are independent from one another this means that the styling apply\n     * function will be called multiple times. By tracking the last directive index (which\n     * is what happens in this function) the styling algorithm knows exactly when to flush\n     * styling (which is when the last styling apply function is executed).\n     */\n    function updateLastDirectiveIndex(context, lastDirectiveIndex) {\n        if (lastDirectiveIndex === TEMPLATE_DIRECTIVE_INDEX) {\n            var currentValue = context[2 /* LastDirectiveIndexPosition */];\n            if (currentValue > TEMPLATE_DIRECTIVE_INDEX) {\n                // This means that a directive or two contained a host bindings function, but\n                // now the template function also contains styling. When this combination of sources\n                // comes up then we need to tell the context to store the state between updates\n                // (because host bindings evaluation happens after template binding evaluation).\n                markContextToPersistState(context);\n            }\n        }\n        else {\n            context[2 /* LastDirectiveIndexPosition */] = lastDirectiveIndex;\n        }\n    }\n    function getConfig(context) {\n        return context[1 /* ConfigPosition */];\n    }\n    function setConfig(context, value) {\n        context[1 /* ConfigPosition */] = value;\n    }\n    function getProp(context, index) {\n        return context[index + 2 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigAndGuardOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) > 0;\n    }\n    function getGuardMask(context, index) {\n        var configGuardValue = context[index + 0 /* ConfigAndGuardOffset */];\n        return configGuardValue >> 1 /* TotalBits */;\n    }\n    function setGuardMask(context, index, maskValue) {\n        var config = getPropConfig(context, index);\n        var guardMask = maskValue << 1 /* TotalBits */;\n        context[index + 0 /* ConfigAndGuardOffset */] = config | guardMask;\n    }\n    function getValuesCount(context, index) {\n        return context[index + 1 /* ValuesCountOffset */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 3 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        var valuesCount = getValuesCount(context, index);\n        return context[index + 3 /* BindingsStartOffset */ + valuesCount - 1];\n    }\n    /**\n     * Temporary function which determines whether or not a context is\n     * allowed to be flushed based on the provided directive index.\n     */\n    function allowStylingFlush(context, index) {\n        return (context && index === context[2 /* LastDirectiveIndexPosition */]) ? true :\n            false;\n    }\n    function lockContext(context) {\n        setConfig(context, getConfig(context) | 1 /* Locked */);\n    }\n    function isContextLocked(context) {\n        return (getConfig(context) & 1 /* Locked */) > 0;\n    }\n    function stateIsPersisted(context) {\n        return (getConfig(context) & 2 /* PersistStateValues */) > 0;\n    }\n    function markContextToPersistState(context) {\n        setConfig(context, getConfig(context) | 2 /* PersistStateValues */);\n    }\n    function getPropValuesStartPosition(context) {\n        return 6 /* MapBindingsBindingsStartPosition */ +\n            context[4 /* MapBindingsValuesCountPosition */];\n    }\n    function isMapBased(prop) {\n        return prop === MAP_BASED_ENTRY_PROP_NAME;\n    }\n    function hasValueChanged(a, b) {\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        // these are special cases for String based values (which are created as artifacts\n        // when sanitization is bypassed on a particular value)\n        if (compareValueA instanceof String) {\n            compareValueA = compareValueA.toString();\n        }\n        if (compareValueB instanceof String) {\n            compareValueB = compareValueB.toString();\n        }\n        return isDifferent(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[0 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            value.length >= 6 /* MapBindingsBindingsStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    var ANIMATION_PROP_PREFIX = '@';\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class ABC extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    /**\n     * Default size count value for a new entry in a context.\n     *\n     * A value of `1` is used here because each entry in the context has a default\n     * property.\n     */\n    var DEFAULT_SIZE_VALUE = 1;\n    var deferredBindingQueue = [];\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassBinding(context, data, element, prop, bindingIndex, value, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, false);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular CSS class need to be\n            // applied again because on or more of the bindings for the CSS\n            // class have changed.\n            state.classesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleBinding(context, data, element, prop, bindingIndex, value, sanitizer, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        var sanitizationRequired = isMapBased ?\n            true :\n            (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular property need to be\n            // applied again because on or more of the bindings for the CSS\n            // property have changed.\n            state.stylesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     * If the binding does get registered and the `deferRegistration` flag is true then the\n     * binding data will be queued up until the context is later flushed in `applyStyling`.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired) {\n        if (!isContextLocked(context)) {\n            if (deferRegistration) {\n                deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n            else {\n                deferredBindingQueue.length && flushDeferredBindings();\n                // this will only happen during the first update pass of the\n                // context. The reason why we can't use `tNode.firstTemplatePass`\n                // here is because its not guaranteed to be true when the first\n                // update pass is executed (remember that all styling instructions\n                // are run in the update phase, and, as a result, are no more\n                // styling instructions that are run in the creation phase).\n                registerBinding(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            data[bindingIndex] = value;\n        }\n        return changed;\n    }\n    /**\n     * Schedules a binding registration to be run at a later point.\n     *\n     * The reasoning for this feature is to ensure that styling\n     * bindings are registered in the correct order for when\n     * directives/components have a super/sub class inheritance\n     * chains. Each directive's styling bindings must be\n     * registered into the context in reverse order. Therefore all\n     * bindings will be buffered in reverse order and then applied\n     * after the inheritance chain exits.\n     */\n    function deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired) {\n        deferredBindingQueue.unshift(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n    }\n    /**\n     * Flushes the collection of deferred bindings and causes each entry\n     * to be registered into the context.\n     */\n    function flushDeferredBindings() {\n        var i = 0;\n        while (i < deferredBindingQueue.length) {\n            var context = deferredBindingQueue[i++];\n            var count = deferredBindingQueue[i++];\n            var prop = deferredBindingQueue[i++];\n            var bindingIndex = deferredBindingQueue[i++];\n            var sanitizationRequired = deferredBindingQueue[i++];\n            registerBinding(context, count, prop, bindingIndex, sanitizationRequired);\n        }\n        deferredBindingQueue.length = 0;\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * This function is shared between bindings that are assigned immediately\n     * (via `updateBindingData`) and at a deferred stage. When called, it will\n     * figure out exactly where to place the binding data in the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, because they do not have a property value\n     * (since it's a map), all map-based entries are stored in an already populated area of\n     * the context at the top (which is reserved for map-based entries).\n     */\n    function registerBinding(context, countId, prop, bindingValue, sanitizationRequired) {\n        var registered = false;\n        if (prop) {\n            // prop-based bindings (e.g `<div [style.width]=\"w\" [class.foo]=\"f\">`)\n            var found = false;\n            var i = getPropValuesStartPosition(context);\n            while (i < context.length) {\n                var valuesCount = getValuesCount(context, i);\n                var p = getProp(context, i);\n                found = prop <= p;\n                if (found) {\n                    // all style/class bindings are sorted by property name\n                    if (prop < p) {\n                        allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                    }\n                    addBindingIntoContext(context, false, i, bindingValue, countId);\n                    break;\n                }\n                i += 3 /* BindingsStartOffset */ + valuesCount;\n            }\n            if (!found) {\n                allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n                addBindingIntoContext(context, false, i, bindingValue, countId);\n                registered = true;\n            }\n        }\n        else {\n            // map-based bindings (e.g `<div [style]=\"s\" [class]=\"{className:true}\">`)\n            // there is no need to allocate the map-based binding region into the context\n            // since it is already there when the context is first created.\n            addBindingIntoContext(context, true, 3 /* MapBindingsPosition */, bindingValue, countId);\n            registered = true;\n        }\n        return registered;\n    }\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        // 1,2: splice index locations\n        // 3: each entry gets a config value (guard mask + flags)\n        // 4. each entry gets a size value (which is always one because there is always a default binding\n        // value)\n        // 5. the property that is getting allocated into the context\n        // 6. the default binding value (usually `null`)\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, DEFAULT_SIZE_VALUE, prop, DEFAULT_BINDING_VALUE);\n        setGuardMask(context, index, DEFAULT_GUARD_MASK_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     *\n     * Note that this function also handles map-based bindings and will insert them\n     * at the top of the context.\n     */\n    function addBindingIntoContext(context, isMapBased, index, bindingValue, countId) {\n        var valuesCount = getValuesCount(context, index);\n        var firstValueIndex = index + 3 /* BindingsStartOffset */;\n        var lastValueIndex = firstValueIndex + valuesCount;\n        if (!isMapBased) {\n            // prop-based values all have default values, but map-based entries do not.\n            // we want to access the index for the default value in this case and not just\n            // the bindings...\n            lastValueIndex--;\n        }\n        if (typeof bindingValue === 'number') {\n            // the loop here will check to see if the binding already exists\n            // for the property in the context. Why? The reason for this is\n            // because the styling context is not \"locked\" until the first\n            // flush has occurred. This means that if a repeated element\n            // registers its styling bindings then it will register each\n            // binding more than once (since its duplicated). This check\n            // will prevent that from happening. Note that this only happens\n            // when a binding is first encountered and not each time it is\n            // updated.\n            for (var i = firstValueIndex; i <= lastValueIndex; i++) {\n                var indexAtPosition = context[i];\n                if (indexAtPosition === bindingValue)\n                    return;\n            }\n            context.splice(lastValueIndex, 0, bindingValue);\n            context[index + 1 /* ValuesCountOffset */]++;\n            // now that a new binding index has been added to the property\n            // the guard mask bit value (at the `countId` position) needs\n            // to be included into the existing mask value.\n            var guardMask = getGuardMask(context, index) | (1 << countId);\n            setGuardMask(context, index, guardMask);\n        }\n        else if (bindingValue !== null && context[lastValueIndex] == null) {\n            context[lastValueIndex] = bindingValue;\n        }\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the `stylingApply()` instruction (which is run at the very end of styling\n     * change detection) and will rely on any state values that are set from when\n     * any styling bindings update.\n     *\n     * This function may be called multiple times on the same element because it can\n     * be called from the template code as well as from host bindings. In order for\n     * styling to be successfully flushed to the element (which will only happen once\n     * despite this being called multiple times), the following criteria must be met:\n     *\n     * - `flushStyling` is called from the very last directive that has styling for\n     *    the element (see `allowStylingFlush()`).\n     * - one or more bindings for classes or styles has updated (this is checked by\n     *   examining the classes or styles bit mask).\n     *\n     * If the style and class values are successfully applied to the element then\n     * the temporary state values for the element will be cleared. Otherwise, if\n     * this did not occur then the styling state is persisted (see `state.ts` for\n     * more information on how this works).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var persistState = classesContext ? stateIsPersisted(classesContext) :\n            (stylesContext ? stateIsPersisted(stylesContext) : false);\n        var allowFlushClasses = allowStylingFlush(classesContext, directiveIndex);\n        var allowFlushStyles = allowStylingFlush(stylesContext, directiveIndex);\n        // deferred bindings are bindings which are scheduled to register with\n        // the context at a later point. These bindings can only registered when\n        // the context will be 100% flushed to the element.\n        if (deferredBindingQueue.length && (allowFlushClasses || allowFlushStyles)) {\n            flushDeferredBindings();\n        }\n        var state = getStylingState(element, persistState);\n        var classesFlushed = maybeApplyStyling(renderer, element, data, classesContext, allowFlushClasses, state.classesBitMask, setClass, null);\n        var stylesFlushed = maybeApplyStyling(renderer, element, data, stylesContext, allowFlushStyles, state.stylesBitMask, setStyle, styleSanitizer);\n        if (classesFlushed && stylesFlushed) {\n            resetStylingState();\n            if (persistState) {\n                deleteStylingStateFromStorage(element);\n            }\n        }\n        else if (persistState) {\n            storeStylingState(element, state);\n        }\n    }\n    function maybeApplyStyling(renderer, element, data, context, allowFlush, bitMask, styleSetter, styleSanitizer) {\n        if (allowFlush && context) {\n            lockAndFinalizeContext(context);\n            if (contextHasUpdates(context, bitMask)) {\n                ngDevMode && (styleSanitizer ? ngDevMode.stylesApplied++ : ngDevMode.classesApplied++);\n                applyStyling(context, renderer, element, data, bitMask, styleSetter, styleSanitizer);\n                return true;\n            }\n        }\n        return allowFlush;\n    }\n    function contextHasUpdates(context, bitMask) {\n        return context && bitMask > BIT_MASK_START_VALUE;\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     */\n    function lockAndFinalizeContext(context) {\n        if (!isContextLocked(context)) {\n            var initialValues = getStylingMapArray(context);\n            if (initialValues) {\n                updateInitialStylingOnContext(context, initialValues);\n            }\n            lockContext(context);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling_next/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * `applyClasses` and `applyStyles` to actually apply styling values).\n     */\n    function applyStyling(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = getStylingMapsSyncFn();\n        var mapsGuardMask = getGuardMask(context, 3 /* MapBindingsPosition */);\n        var applyAllValues = (bitMask & mapsGuardMask) > 0;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var valuesCount = getValuesCount(context, i);\n            var guardMask = getGuardMask(context, i);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var valuesCountUpToDefault = valuesCount - 1;\n                var defaultValue = getBindingValue(context, i, valuesCountUpToDefault);\n                // case 1: apply prop-based values\n                // try to apply the binding values and see if a non-null\n                // value gets set for the styling binding\n                for (var j = 0; j < valuesCountUpToDefault; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    var value = bindingData[bindingIndex];\n                    if (isStylingValueDefined(value)) {\n                        var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                            sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                            value;\n                        applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                        valueApplied = true;\n                        break;\n                    }\n                }\n                // case 2: apply map-based values\n                // traverse through each map-based styling binding and update all values up to\n                // the provided `prop` value. If the property was not applied in the loop above\n                // then it will be attempted to be applied in the maps sync code below.\n                if (stylingMapsSyncFn) {\n                    // determine whether or not to apply the target property or to skip it\n                    var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                        2 /* ApplyTargetProp */);\n                    var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                    valueApplied = valueApplied || valueAppliedWithinMap;\n                }\n                // case 3: apply the default value\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 3 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        // the reason why this may be `null` is either because\n        // it's a container element or it's a part of a test\n        // environment that doesn't have styling. In either\n        // case it's safe not to apply styling to the element.\n        var nativeStyle = native.style;\n        if (value) {\n            // opacity, z-index and flexbox all have number values\n            // and these need to be converted into strings so that\n            // they can be assigned properly.\n            value = value.toString();\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.setProperty(prop, value));\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.removeProperty(prop));\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (className !== '') {\n            // the reason why this may be `null` is either because\n            // it's a container element or it's a part of a test\n            // environment that doesn't have styling. In either\n            // case it's safe not to apply styling to the element.\n            var classList = native.classList;\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    (classList && classList.add(className));\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    (classList && classList.remove(className));\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a spart\n        // of a binding (since it's static)\n        var INITIAL_STYLING_COUNT_ID = -1;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, INITIAL_STYLING_COUNT_ID, prop, value, false);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `select(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & ~1 /* ApplyAllValues */)) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, 0, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var targetPropValueWasApplied = false;\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (currentMapIndex < totalMaps) {\n            var bindingIndex = getBindingValue(context, 3 /* MapBindingsPosition */, currentMapIndex);\n            var stylingMapArr = data[bindingIndex];\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            while (cursor < stylingMapArr.length) {\n                var prop = getMapProp(stylingMapArr, cursor);\n                var iteratedTooFar = targetProp && prop > targetProp;\n                var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                var value = getMapValue(stylingMapArr, cursor);\n                var valueIsDefined = isStylingValueDefined(value);\n                // the recursive code is designed to keep applying until\n                // it reaches or goes past the target prop. If and when\n                // this happens then it will stop processing values, but\n                // all other map values must also catch up to the same\n                // point. This is why a recursive call is still issued\n                // even if the code has iterated too far.\n                var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                var innerProp = iteratedTooFar ? targetProp : prop;\n                var valueApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue);\n                if (iteratedTooFar) {\n                    if (!targetPropValueWasApplied) {\n                        targetPropValueWasApplied = valueApplied;\n                    }\n                    break;\n                }\n                if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                    var useDefault = isTargetPropMatched && !valueIsDefined;\n                    var valueToApply = useDefault ? defaultValue : value;\n                    var bindingIndexToApply = useDefault ? bindingIndex : null;\n                    var finalValue = sanitizer ?\n                        sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                        valueToApply;\n                    applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                    valueApplied = true;\n                }\n                targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                cursor += 2 /* TupleSize */;\n            }\n            setCurrentSyncCursor(currentMapIndex, cursor);\n            // this is a fallback case in the event that the styling map is `null` for this\n            // binding but there are other map-based bindings that need to be evaluated\n            // afterwards. If the `prop` value is falsy then the intention is to cycle\n            // through all of the properties in the remaining maps as well. If the current\n            // styling map is too short then there are no values to iterate over. In either\n            // case the follow-up maps need to be iterated over.\n            if (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp) {\n                return innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map.\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isExactMatch) {\n        var innerMode = currentMode;\n        if (!valueIsDefined && !(currentMode & 4 /* SkipTargetProp */) &&\n            (isExactMatch || (currentMode & 1 /* ApplyAllValues */))) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) > 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the {key:value} map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n        stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context.\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isLocked\", {\n            get: function () { return isContextLocked(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var entries = {};\n                var start = 3 /* MapBindingsPosition */;\n                var i = start;\n                while (i < context.length) {\n                    var valuesCount = getValuesCount(context, i);\n                    // the context may contain placeholder values which are populated ahead of time,\n                    // but contain no actual binding values. In this situation there is no point in\n                    // classifying this as an \"entry\" since no real data is stored here yet.\n                    if (valuesCount) {\n                        var prop = getProp(context, i);\n                        var guardMask = getGuardMask(context, i);\n                        var defaultValue = getDefaultValue(context, i);\n                        var sanitizationRequired = isSanitizationRequired(context, i);\n                        var bindingsStartPosition = i + 3 /* BindingsStartOffset */;\n                        var sources = [];\n                        for (var j = 0; j < valuesCount; j++) {\n                            sources.push(context[bindingsStartPosition + j]);\n                        }\n                        entries[prop] = { prop: prop, guardMask: guardMask, sanitizationRequired: sanitizationRequired, valuesCount: valuesCount, defaultValue: defaultValue, sources: sources };\n                    }\n                    i += 3 /* BindingsStartOffset */ + valuesCount;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this.context = context;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n        }\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = getValuesCount(this.context, 3 /* MapBindingsPosition */) > 0;\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            applyStyling(this.context, null, mockElement, this._data, true, mapFn, sanitizer);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = ngDevMode && createNamedArrayType('LView');\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n        }\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyMetadataStartIndex, //\n        propertyMetadataEndIndex, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyMetadataStartIndex = propertyMetadataStartIndex;\n            this.propertyMetadataEndIndex = propertyMetadataEndIndex;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 8 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 4 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 16 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 1 /* isComponent */)\n                    flags.push('TNodeFlags.isComponent');\n                if (this.flags & 32 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 2 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    var TViewData = ngDevMode && createNamedArrayType('TViewData');\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = ngDevMode && createNamedArrayType('LViewBlueprint');\n    var MatchesArray = ngDevMode && createNamedArrayType('MatchesArray');\n    var TViewComponents = ngDevMode && createNamedArrayType('TViewComponents');\n    var TNodeLocalNames = ngDevMode && createNamedArrayType('TNodeLocalNames');\n    var TNodeInitialInputs = ngDevMode && createNamedArrayType('TNodeInitialInputs');\n    var TNodeInitialData = ngDevMode && createNamedArrayType('TNodeInitialData');\n    var LCleanup = ngDevMode && createNamedArrayType('LCleanup');\n    var TCleanup = ngDevMode && createNamedArrayType('TCleanup');\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    queries: null,\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                var styles = isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView) :\n                    null;\n                var classes = isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true) :\n                    null;\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native, styles: styles, classes: classes,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug,\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        var lView = getLView();\n        selectInternal(lView, index);\n    }\n    function selectInternal(lView, index) {\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵselect` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        if (!creationMode) {\n            // Resetting the bindingIndex of the current LView as the next steps may trigger change\n            // detection.\n            lView[BINDING_INDEX] = tView.bindingStartIndex;\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        else {\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            tView.firstTemplatePass = false;\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n        }\n        // We must materialize query results before child components are processed\n        // in case a child component has projected a container. The LContainer needs\n        // to exist so the embedded views are properly attached by the container.\n        if (!creationMode || tView.staticViewQueries) {\n            executeViewQueryFn(2 /* Update */, tView, lView[CONTEXT]);\n        }\n        var components = tView.components;\n        if (components !== null) {\n            refreshChildComponents(lView, components);\n        }\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            componentRefresh(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // The first node is not always the one at index 0, in case of i18n, index 0 can be the\n        // instruction `i18nStart` and the first node has the index 1 or more\n        if (index === 0 || !tView.firstChild) {\n            tView.firstChild = tNode;\n        }\n        // Now link ourselves into the tree.\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Used for creating the LView of a dynamic embedded view, either through\n     * ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, injectorIndex) {\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        return lView;\n    }\n    /**\n     * Used for rendering views in a LContainer (embedded views or root component views for dynamically\n     * created components).\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor\n     * inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            oldView = enterView(viewToRender, viewToRender[T_HOST]);\n            resetPreOrderHookFlags(viewToRender);\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(viewToRender, templateFn, getRenderFlags(viewToRender), context);\n            }\n            refreshDescendantViews(viewToRender);\n            safeToRunHooks = true;\n        }\n        finally {\n            leaveView(oldView, safeToRunHooks);\n            setPreviousOrParentTNode(_previousOrParentTNode, _isParent);\n        }\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                templateFn && executeTemplate(hostView, templateFn, 1 /* Create */, context);\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && executeTemplate(hostView, templateFn, 2 /* Update */, context);\n            refreshDescendantViews(hostView);\n            safeToRunHooks = true;\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView, safeToRunHooks);\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */) {\n                // When we're updating, have an inherent ɵɵselect(0) so we don't have to generate that\n                // instruction for most update blocks\n                selectInternal(lView, 0);\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        invokeDirectivesHostBindings(tView, lView, tNode);\n        saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas) :\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        -1, // propertyMetadataStartIndex: number\n        -1, // propertyMetadataEndIndex: number\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyMetadataStartIndex: -1,\n                propertyMetadataEndIndex: -1,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries) {\n                    tNode.flags |= 4 /* hasContentQuery */;\n                }\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.attrs !== null) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags = 1 /* isComponent */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[hostTNode.index], hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        componentView[T_HOST] = hostTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] ||\n                    (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ngDevMode && createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    // The directives and pipes are not needed here as an existing view is only being\n                    // refreshed.\n                    ngDevMode && assertDefined(embeddedLView[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(embeddedLView, embeddedLView[TVIEW], embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(hostLView, adjustedElementIndex) {\n        ngDevMode && assertDataInRange(hostLView, adjustedElementIndex);\n        var componentView = getComponentViewByIndex(adjustedElementIndex, hostLView);\n        ngDevMode &&\n            assertNodeType(hostLView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only components in creation mode, attached CheckAlways\n        // components or attached, dirty OnPush components should be checked\n        if ((viewAttachedToChangeDetector(componentView) || isCreationMode(hostLView)) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(componentView);\n            checkView(componentView, componentView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        var view = getComponentViewByInstance(component);\n        checkNoChangesInternal(view, component);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck.\n     */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            resetPreOrderHookFlags(hostView);\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            executeTemplate(hostView, templateFn, getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            safeToRunHooks = true;\n        }\n        finally {\n            leaveView(oldView, safeToRunHooks);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery !== null) {\n            setCurrentQueryIndex(0);\n            viewQuery(flags, component);\n        }\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n        }\n        return tNode.inputs;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeActionOnElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped\n            // in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && assertDomNode(rNode);\n            if (action === 0 /* Insert */) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 1 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 2 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                executeActionOnContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 0 /* Insert */ : 1 /* Detach */;\n            executeActionOnView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        executeActionOnView(lView[RENDERER], 1 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                executeActionOnView(renderer, 2 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode);\n        var renderParent = parent.parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (renderParent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = parent && parent.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then its direct parent node is the renderer.\n            if (isIcuCase && parent.flags & 2 /* isProjected */) {\n                return getNativeByTNode(parent, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(renderParent, 3 /* Element */);\n            if (renderParent.flags & 1 /* isComponent */ && !isIcuCase) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[renderParent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(renderParent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_1, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            return tViewNodeChild !== null ? getNativeByTNodeOrNull(tViewNodeChild, lView) :\n                lContainer[NATIVE];\n        }\n        else {\n            return lContainer[NATIVE];\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target LView)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (!(nodeToProject.flags & 32 /* isDetached */)) {\n                    if (nodeToProject.type === 1 /* Projection */) {\n                        appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                    }\n                    else {\n                        // This flag must be set now or we won't know that this node is projected\n                        // if the nodes are inserted into a container later.\n                        nodeToProject.flags |= 2 /* isProjected */;\n                        appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                    }\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Loops over all children of a TNode container and appends them to the DOM\n     *\n     * @param ngContainerChildTNode The first child of the TNode container\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedChildren(ngContainerChildTNode, tProjectionNode, currentView, projectionView) {\n        while (ngContainerChildTNode) {\n            appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n            ngContainerChildTNode = ngContainerChildTNode.next;\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            for (var i = CONTAINER_HEADER_OFFSET; i < nodeOrContainer.length; i++) {\n                addRemoveViewFromContainer(nodeOrContainer[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else if (projectedTNode.type === 5 /* IcuContainer */) {\n            // The node we are adding is an ICU container which is why we also need to project all the\n            // children nodes that might have been created previously and are linked to this anchor\n            var ngContainerChildTNode = projectedTNode.child;\n            appendProjectedChildren(ngContainerChildTNode, ngContainerChildTNode, projectionView, projectionView);\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                appendProjectedChildren(projectedTNode.child, tProjectionNode, currentView, projectionView);\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n    /**\n     * `executeActionOnView` performs an operation on the view as specified in `action` (insert, detach,\n     * destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. While the recursive implementation is not the\n     * most efficient one, trying to unroll the nodes non-recursively results in very complex code that\n     * is very hard (to maintain). We are sacrificing a bit of performance for readability using a\n     * recursive implementation.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        while (viewRootTNode !== null) {\n            executeActionOnNode(renderer, action, lView, viewRootTNode, renderParent, beforeNode);\n            viewRootTNode = viewRootTNode.next;\n        }\n    }\n    /**\n     * `executeActionOnProjection` performs an operation on the projection specified by `action`\n     * (insert, detach, destroy).\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode projection TNode to process\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnProjection(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode && assertDefined(componentNode.projection, 'Element nodes for which projection is processed must have projection defined.');\n        var nodeToProject = componentNode.projection[tProjectionNode.projection];\n        if (nodeToProject !== undefined) {\n            if (Array.isArray(nodeToProject)) {\n                for (var i = 0; i < nodeToProject.length; i++) {\n                    var rNode = nodeToProject[i];\n                    ngDevMode && assertDomNode(rNode);\n                    executeActionOnElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n                }\n            }\n            else {\n                var projectionTNode = nodeToProject;\n                var projectedComponentLView = componentLView[PARENT];\n                while (projectionTNode !== null) {\n                    executeActionOnNode(renderer, action, projectedComponentLView, projectionTNode, renderParent, beforeNode);\n                    projectionTNode = projectionTNode.projectionNext;\n                }\n            }\n        }\n    }\n    /**\n     * `executeActionOnContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeNodeAction)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            executeActionOnElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            executeActionOnView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n    /**\n     * `executeActionOnElementContainerOrIcuContainer` performs an operation on the ng-container node\n     * and its child nodes as specified by the `action` (insert, detach, destroy).\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tNode The TNode associated with the `ElementContainer` or `IcuContainer`.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode) {\n        var node = lView[tNode.index];\n        executeActionOnElementOrContainer(action, renderer, renderParent, node, beforeNode);\n        var childTNode = tNode.child;\n        while (childTNode) {\n            executeActionOnNode(renderer, action, lView, childTNode, renderParent, beforeNode);\n            childTNode = childTNode.next;\n        }\n    }\n    function executeActionOnNode(renderer, action, lView, tNode, renderParent, beforeNode) {\n        var nodeType = tNode.type;\n        if (!(tNode.flags & 32 /* isDetached */)) {\n            if (nodeType === 4 /* ElementContainer */ || nodeType === 5 /* IcuContainer */) {\n                executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode);\n            }\n            else if (nodeType === 1 /* Projection */) {\n                executeActionOnProjection(renderer, action, lView, tNode, renderParent, beforeNode);\n            }\n            else {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                executeActionOnElementOrContainer(action, renderer, renderParent, lView[tNode.index], beforeNode);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createEmbeddedViewAndNode(embeddedTView, context, this._declarationView, this._declarationTContainer.injectorIndex);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderEmbeddedTemplate(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, isPipe) {\n        if (isComponent(hostTNode) && !isPipe) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, null, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef !== null) {\n            return injectableDef.factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = new Array(paramLength).fill('?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param lView Current view\n     * @param value Value to diff\n     */\n    function bind(lView, value) {\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementAttributeInternal(index, name, bound, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas);\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tContainerNode, localRefExtractor);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * This function is executed during the creation block of an element.\n     * Because the existing styling implementation issues a call to the\n     * `styling()` instruction, this instruction will also get run. The\n     * central idea here is that the directive index values are bound\n     * into the context. The directive index is temporary and is only\n     * required until the `select(n)` instruction is fully functional.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyling() {\n        var tView = getLView()[TVIEW];\n        if (tView.firstTemplatePass) {\n            updateLastDirectiveIndex$1(getPreviousOrParentTNode(), getActiveDirectiveStylingIndex());\n        }\n    }\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `select(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(getSelectedIndex(), bindingIndex, className, value, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     */\n    function _stylingProp(elementIndex, bindingIndex, prop, value, isClassBased, defer) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var updated = false;\n        if (value !== NO_CHANGE) {\n            if (isClassBased) {\n                updated = updateClassBinding(getClassesContext(tNode), lView, native, prop, bindingIndex, value, defer, false);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updated = updateStyleBinding(getStylesContext(tNode), lView, native, prop, bindingIndex, value, sanitizer, defer, false);\n            }\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = _stylingMap(index, context, bindingIndex, styles, false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(elementIndex, context, bindingIndex, value, isClassBased, defer) {\n        activateStylingMapFeature();\n        var lView = getLView();\n        var valueHasChanged = false;\n        if (value !== NO_CHANGE) {\n            var tNode = getTNode(elementIndex, lView);\n            var native = getNativeByTNode(tNode, lView);\n            var oldValue = lView[bindingIndex];\n            valueHasChanged = hasValueChanged(oldValue, value);\n            var stylingMapArr = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            if (isClassBased) {\n                updateClassBinding(context, lView, native, null, bindingIndex, stylingMapArr, defer, valueHasChanged);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updateStyleBinding(context, lView, native, null, bindingIndex, stylingMapArr, sanitizer, defer, valueHasChanged);\n            }\n        }\n        return valueHasChanged;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context)) {\n                var inputs = tNode.inputs[isClassBased ? 'class' : 'style'];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n            }\n            lView[bindingIndex] = newValue;\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length > 0) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be called from the template and hostBindings\n     * functions and may be called multiple times depending whether multiple\n     * sources of styling exist. If called multiple times, only the last call\n     * to `stlyingApply()` will render styling to the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstylingApply() {\n        var elementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var renderer = getRenderer(tNode, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        var sanitizer = getCurrentStyleSanitizer();\n        flushStyling(renderer, lView, getClassesContext(tNode), getStylesContext(tNode), native, directiveIndex, sanitizer);\n        setCurrentStyleSanitizer(null);\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || [''];\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || [''];\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    /**\n     * Temporary function that will update the max directive index value in\n     * both the classes and styles contexts present on the provided `tNode`.\n     *\n     * This code is only used because the `select(n)` code functionality is not\n     * yet 100% functional. The `select(n)` instruction cannot yet evaluate host\n     * bindings function code in sync with the associated template function code.\n     * For this reason the styling algorithm needs to track the last directive index\n     * value so that it knows exactly when to render styling to the element since\n     * `stylingApply()` is called multiple times per CD (`stylingApply` will be\n     * removed once `select(n)` is fixed).\n     */\n    function updateLastDirectiveIndex$1(tNode, directiveIndex) {\n        updateLastDirectiveIndex(getClassesContext(tNode), directiveIndex);\n        updateLastDirectiveIndex(getStylesContext(tNode), directiveIndex);\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            context = allocTStylingContext(context);\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not a style/class binding update should be applied later.\n     *\n     * This function will decide whether a binding should be applied immediately\n     * or later (just before the styles/classes are flushed to the element). The\n     * reason why this feature exists is because of super/sub directive inheritance.\n     * Angular will evaluate host bindings on the super directive first and the sub\n     * directive, but the styling bindings on the sub directive are of higher priority\n     * than the super directive. For this reason all styling bindings that take place\n     * in this circumstance will need to be deferred until later so that they can be\n     * applied together and in a different order (the algorithm handles that part).\n     */\n    function deferStylingUpdate() {\n        return getActiveDirectiveSuperClassHeight() > 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, attrs);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        renderInitialStyling(renderer, native, tNode);\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n        if (hasClassInput(tNode) && tNode.classes) {\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs['class']);\n        }\n        if (hasStyleInput(tNode) && tNode.styles) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = getInitialStylingValue(context) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n        if (attrs && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        attachPatchData(native, lView);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrs, localRefs) {\n        ɵɵelementContainerStart(index, attrs, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        // It's always safe to run hooks here, as `leaveView` is not called during the 'finally' block\n        // of a try-catch-finally statement, so it can never be reached while unwinding the stack due to\n        // an error being thrown.\n        leaveView(lContainer[PARENT], /* safeToRunHooks */ true);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(numProjectionSlots).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n        }\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var interpolatedValue = interpolation1(getLView(), prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var interpolatedValue = interpolation2(getLView(), prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var interpolatedValue = interpolation3(getLView(), prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var interpolatedValue = interpolation4(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var interpolatedValue = interpolation5(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var interpolatedValue = interpolation6(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var interpolatedValue = interpolation7(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var interpolatedValue = interpolation8(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var interpolatedValue = interpolationV(getLView(), values);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        ngDevMode && ngDevMode.rendererSetText++;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtextBinding(value) {\n        var lView = getLView();\n        var index = getSelectedIndex();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            textBindingInternal(lView, index, renderStringify(bound));\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, true);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(benlesh): remove bind call here.\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bound, sanitizer, true, loadComponentRenderer);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: function (token, notFoundValue) {\n            throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n        }\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n            safeToRunHooks = true;\n        }\n        finally {\n            leaveView(oldView, safeToRunHooks);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var e_1, _a;\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = (e_1 = void 0, __values(features)), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵselect(0);\n     *        ɵɵtextBinding(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.1+24.sha-914900a.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            // Will become true if the `try` block executes with no errors.\n            var safeToRunHooks = false;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                refreshDescendantViews(rootLView);\n                safeToRunHooks = true;\n            }\n            finally {\n                leaveView(oldLView, safeToRunHooks);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(viewData, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, viewData) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            var tProjectionNode = tNode;\n            appendProjectedNodes(viewData, tProjectionNode, tProjectionNode.projection, findComponentView(viewData));\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(viewData, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, viewData);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, viewData);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        // Define this node as detached so that we don't risk projecting it\n        removedPhTNode.flags |= 32 /* isDetached */;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var lView = getLView();\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        var expression = bind(lView, value);\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @codeGenApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function ɵɵi18nLocalize(input, placeholders) {\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        if (placeholders !== undefined && Object.keys(placeholders).length) {\n            return input.replace(LOCALIZE_PH_REGEXP, function (_, key) { return placeholders[key] || ''; });\n        }\n        return input;\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ngModuleDef.id !== null) {\n            var id = ngModuleType.ngModuleDef.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ngModuleDef.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearModulesForTest() {\n        modules.clear();\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = new Array(noOfInheritedQueries);\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries[i] = parentLQuery.clone();\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            var e_1, _a;\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.elementStart(tView, tNode);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            var e_2, _a;\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.elementEnd(tNode);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            var e_3, _a;\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.template(tView, tNode);\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = new Array(tQueryMatches.length / 2);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result[i / 2] = null;\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result[i / 2] =\n                        createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read);\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var e_4, _a;\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        try {\n                            for (var _b = (e_4 = void 0, __values(declarationLContainer[MOVED_VIEWS])), _c = _b.next(); !_c.done; _c = _b.next()) {\n                                var embeddedLView = _c.value;\n                                collectQueryResults(embeddedLView, childQueryIndex, result);\n                            }\n                        }\n                        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                        finally {\n                            try {\n                                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                            }\n                            finally { if (e_4) throw e_4.error; }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyling': ɵɵstyling,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵstylingApply': ɵɵstylingApply,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextBinding': ɵɵtextBinding,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵi18nLocalize': ɵɵi18nLocalize,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng:///\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name_1, sourceMapUrl);\n                    if (facade.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_2 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_2 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var typeName = type.name;\n                    ngPipeDef =\n                        getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + typeName + \"/ngPipeDef.js\", {\n                            type: type,\n                            typeArgumentCount: 0,\n                            name: typeName,\n                            deps: reflectDependencies(type),\n                            pipeName: meta.name,\n                            pure: meta.pure !== undefined ? meta.pure : true\n                        });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The existence of this constant (in this particular file) informs the Angular compiler that the\n     * current program is actually @angular/core, which needs to be compiled specially.\n     */\n    var ITS_JUST_ANGULAR = true;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = ɵɵdefineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = ɵɵdefineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = ɵɵdefineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = ɵɵdefineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element);\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, true);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _getStylingDebugInfo(element, isClassBased) {\n        if (element) {\n            var context = loadLContextFromNode(element);\n            var lView = context.lView;\n            var tData = lView[TVIEW].data;\n            var tNode = tData[context.nodeIndex];\n            if (isClassBased) {\n                return isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true).values :\n                    stylingMapToStringMap(tNode.classes);\n            }\n            else {\n                return isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView, false).values :\n                    stylingMapToStringMap(tNode.styles);\n            }\n        }\n        return {};\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = void 0;\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n                // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n                properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                    metadataParts[1] + value + metadataParts[2] :\n                    value;\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__POST_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            if (ivyEnabled) {\n                setLocaleId(locale);\n            }\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            if (ivyEnabled) {\n                setLocaleId(goog.LOCALE);\n            }\n            return goog.LOCALE;\n        }\n        return DEFAULT_LOCALE_ID;\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyling = ɵɵstyling;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstylingApply = ɵɵstylingApply;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵtextBinding = ɵɵtextBinding;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.ɵɵi18nLocalize = ɵɵi18nLocalize;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}