{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","catchInjectorError","tokens","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","metadata","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","url","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","component","promises","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","style","splice","fullyResolved","Promise","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","ViewEncapsulation","Set","componentNeedsResolution","old","response","EMPTY_OBJ","EMPTY_ARRAY","renderStringify","defaultScheduler","requestAnimationFrame","setTimeout","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","throwError","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","_","setInput","schemas","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","setComponentScope","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","VIEWS","NATIVE","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","elementDepthCount","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","tView","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","arr","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","previousOrParentTNode","isParent","activeHostContext","activeHostElementIndex","setActiveHost","getActiveHostContext","getActiveHostElementIndex","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","sanitizer","initialStyles","initialClasses","allocateDirectiveIntoContext","directiveRef","dirs","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","destroy","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","setUpAttributes","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","setProperty","attrsStylingIndexOf","startIndex","val","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","getFactoryOf$1","getInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","sanitizeScript","unsafeScript","SCRIPT","sanitizeUrlOrResourceUrl","tag","getUrlSanitizer","defaultStyleSanitizer","isPromise","isObservable","subscribe","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","a","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","throwMultipleComponentError","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","toDebug","debug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","head_1","head_1_1","projectionNext","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","views","detachView","removeIndex","viewToDetach","removeView","destroyLView","destroyViewTree","rootView","lViewOrLContainer","cleanUpView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","BoundPlayerFactory","initializeStaticContext","stylingStartIndex","patchContextWithStaticAttrs","attrsStylingStartIndex","detectedIndex","getDirectiveRegistryValuesIndexOf","attr","patchInitialStylingValue","initialStyling","directiveOwnerIndex","allowValueChange","addOrUpdateStaticStyle","renderInitialClasses","setClass","renderInitialStyles","setStyle","getMatchingBindingIndex","bindingName","start","getProp","patchStylingMapIntoContext","playerBuilderIndex","ctxStart","ctxEnd","cacheValue","entryIsClassBased","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","insertNewMultiProperty","prepareInitialFlag","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","setDirectiveDirty","updateSingleStylingValue","offset","input","isClassBased","forceOverride","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","currFlag","currDirective","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setContextPlayersDirty","store","DashCase","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiClassesStartIndex","getMultiStylesStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","newValue","initialValue","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","classesStartIndex","registerMultiMapEntry","keyValues","dirtyYes","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","readCachedMapValue","isMultiValueCacheHit","count","limit","staticStyles","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","matchingProjectionSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","applyOnCreateInstructions","fns","onElementCreationFns","setInputsForProperty","privateName","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","hostCtx","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","checkView","directiveDefIdx","createLView","tHostNode","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","setNodeStylingTemplate","createDirectivesAndLocals","currentQueries","addNode","clone","executeContentQueries","attrsStartIndex","stylingAttrsStartIndex","isContentQueryHost","elementContainerEnd","elementCreate","initialStylesIndex","initialClassesIndex","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","overriddenRenderer","rendererToUse","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","listener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","componentHostSyntheticListener","loadComponentRenderer","loadRendererFn","lCleanupIndex","getCleanup","wrapListener","listen","generatePropertyAliases","propsLength","subscription","idx","decreaseElementDepthCount","getInitialStyleStringValue","initialStyleValues","styleString","flushHooksUpTo","elementAttribute","namespace","element_1","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","dataValue","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","propertyMetadataStartIndex","propertyMetadataEndIndex","tParent","initialInputs","tViews","direction","propStore","isInput","defs","propertyAliasMap","internalName","elementHostAttrs","textNative","textBinding","element_2","previousExpandoLength","elementIndex","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","tContainerNode","containerInternal","addTContainerToQueries","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","projectionHeads","tails","componentChild","bucketIndex","selectorIndex","appendProjectedNodes","projectedView","nodeToProject","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","markViewDirty","preventDefault","returnValue","parent_2","scheduleTick","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","markDirty","storeBindingMetadata","allocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","load","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","accumulatedClasses","accumulatedStyles","CLEAN_PROMISE","getCurrentView","getTViewCleanup","errorHandler","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","initElementStyling","elementHostStyling","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","hyphenateEntries","entries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","elementStyleProp","styleIndex","elementStylePropInternal","elementHostStyleProp","valueToAdd","updateStyleProp","elementClassProp","classIndex","elementClassPropInternal","elementHostClassProp","booleanOrNull","updateClassProp","elementStylingMap","classes","elementStylingMapInternal","elementHostStylingMap","classInputVal","forceClassesAsString","styleInputVal","forceStylesAsString","updateStylingMap","classesInput","stylesInput","ignoreAllClassUpdates","ignoreAllStyleUpdates","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","multiClassesEndIndex","elementStylingApply","elementStylingApplyInternal","elementHostStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","stillDirty","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","NgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","features_1","features_1_1","superPrototype","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","createEmbeddedViewAndNode","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","move","shift","commentNode","nativeNextSibling","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","scope","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","ELEMENT_MARKER","COMMENT_MARKER","addAllToArray","items","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","i18nVarsCount","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","icus","appendI18nNode","previousTNode","cursor","i18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","opCode","textRNode","destinationNodeIndex","elementNodeIndex","commentValue","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","_r3Injector","NgModuleFactory$1","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue$1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","resultsTree","depthFirstFlatten","flat","flatItem","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","_static","storeCleanupWithContext","queryRefresh","queryListImpl","staticViewQuery","loadViewQuery","contentQuery","tViewContentQueries","staticContentQuery","loadContentQuery","templateRefExtractor","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵcomponentHostSyntheticListener","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵqueryRefresh","ɵviewQuery","ɵstaticViewQuery","ɵstaticContentQuery","ɵloadViewQuery","ɵcontentQuery","ɵloadContentQuery","ɵreference","ɵelementHostAttrs","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵelementClassProp","ɵelementHostStyling","ɵelementHostStylingMap","ɵelementHostStyleProp","ɵelementHostStylingApply","ɵelementHostClassProp","ɵflushHooksUpTo","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsetComponentScope","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__POST_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$3","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","usesInheritance","part","viewQueries","isQueryAnn","queriesMeta","field","annotations_1","ann","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","eAttrs","lContext","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","ViewAction","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.9+44.sha-9eb8274.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'inject': inject,\n        'ɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function setComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, and QUERIES are indices 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var VIEWS = 6;\n    var NATIVE = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the flushHooksUpTo instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing flushHooksUpTo(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing flushHooksUpTo(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing flushHooksUpTo(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    var activeHostContext = null;\n    var activeHostElementIndex = null;\n    /**\n     * Sets the active host context (the directive/component instance) and its host element index.\n     *\n     * @param host the directive/component instance\n     * @param index the element index value for the host element where the directive/component instance\n     * lives\n     */\n    function setActiveHost(host, index) {\n        if (index === void 0) { index = null; }\n        activeHostContext = host;\n        activeHostElementIndex = index;\n    }\n    function getActiveHostContext() {\n        return activeHostContext;\n    }\n    function getActiveHostElementIndex() {\n        return activeHostElementIndex;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateDirectiveIntoContext(context, null);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateDirectiveIntoContext(context, directiveRef) {\n        // this is a new directive which we have not seen yet.\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var i = dirs.length;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        dirs.push(null, null, null, null);\n        dirs[i + 0 /* DirectiveValueOffset */] = directiveRef;\n        dirs[i + 2 /* DirtyFlagOffset */] = false;\n        dirs[i + 3 /* StyleSanitizerOffset */] = null;\n        // -1 is used to signal that the directive has been allocated, but\n        // no actual style or class bindings have been registered yet...\n        dirs[i + 1 /* SinglePropValuesIndexOffset */] = -1;\n        return i;\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 9 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function attrsStylingIndexOf(attrs, startIndex) {\n        for (var i = startIndex; i < attrs.length; i++) {\n            var val = attrs[i];\n            if (val === 1 /* Classes */ || val === 2 /* Styles */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings` or `Template`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    if (value === 1 /* Classes */ && attrNameToInject === 'class') {\n                        var accumulatedClasses = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedClasses += ' ' + attrs[i++];\n                        }\n                        return accumulatedClasses.trim();\n                    }\n                    else if (value === 2 /* Styles */ && attrNameToInject === 'style') {\n                        var accumulatedStyles = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedStyles += attrs[i++] + \": \" + attrs[i++] + \"; \";\n                        }\n                        return accumulatedStyles.trim();\n                    }\n                    else {\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            i++;\n                        }\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf$1(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf$1(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    function attachLViewDebug(lView) {\n        lView.debug = new LViewDebug(lView);\n    }\n    function attachLContainerDebug(lContainer) {\n        lContainer.debug = new LContainerDebug(lContainer);\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer[VIEWS].map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.projectionNext === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return;\n                            currentView = currentView[PARENT];\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        walkTNodeTree(lView, 1 /* Detach */, lView[RENDERER], null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var views = lViewOrLContainer[VIEWS];\n                if (views.length > 0)\n                    next = views[0];\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var views = lContainer[VIEWS];\n        ngDevMode && assertDefined(views, 'Container must have views');\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(viewToDetach, false);\n        if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n            !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[PARENT] = null;\n        viewToDetach[NEXT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex);\n        destroyLView(view);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs, stylingStartIndex, directiveRef) {\n        var context = createEmptyStylingContext();\n        patchContextWithStaticAttrs(context, attrs, stylingStartIndex, directiveRef);\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param attrsStylingStartIndex what index to start iterating within the\n     *              provided `attrs` array to start reading style and class values\n     * @param directiveRef the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, attrsStylingStartIndex, directiveRef) {\n        // this means the context has already been set and instantiated\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[2 /* DirectiveRegistryPosition */];\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directives, directiveRef || null);\n        if (detectedIndex === -1) {\n            // this is a new directive which we have not seen yet.\n            detectedIndex = allocateDirectiveIntoContext(context, directiveRef);\n        }\n        var directiveIndex = detectedIndex / 4 /* Size */;\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = attrsStylingStartIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true, directiveIndex);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i], directiveIndex);\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is\n     * present (allocated) then the code below will set the new value depending on the\n     * following cases:\n     *\n     *  1) if the existing value is falsy (this happens because a `[class.prop]` or\n     *     `[style.prop]` binding was set, but there wasn't a matching static style\n     *     or class present on the context)\n     *  2) if the value was set already by the template, component or directive, but the\n     *     new value is set on a higher level (i.e. a sub component which extends a parent\n     *     component sets its value after the parent has already set the same one)\n     *  3) if the same directive provides a new set of styling values to set\n     *\n     * @param initialStyling the initial styling array where the new styling entry will be added to\n     * @param prop the property value of the new entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the new entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     */\n    function patchInitialStylingValue(initialStyling, prop, value, directiveOwnerIndex) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length; i += 3 /* Size */) {\n            var key = initialStyling[i + 0 /* PropOffset */];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                var existingOwner = initialStyling[i + 2 /* DirectiveOwnerOffset */];\n                if (allowValueChange(existingValue, value, existingOwner, directiveOwnerIndex)) {\n                    addOrUpdateStaticStyle(i, initialStyling, prop, value, directiveOwnerIndex);\n                }\n                return;\n            }\n        }\n        // We did not find existing key, add a new one.\n        addOrUpdateStaticStyle(null, initialStyling, prop, value, directiveOwnerIndex);\n    }\n    /**\n     * Runs through the initial class values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the classes were applied up until\n     */\n    function renderInitialClasses(element, context, renderer, startIndex) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialClasses.length) {\n            var value = initialClasses[i + 1 /* ValueOffset */];\n            if (value) {\n                setClass(element, initialClasses[i + 0 /* PropOffset */], true, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Runs through the initial styles values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the styles were applied up until\n     */\n    function renderInitialStyles(element, context, renderer, startIndex) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialStyles.length) {\n            var value = initialStyles[i + 1 /* ValueOffset */];\n            if (value) {\n                setStyle(element, initialStyles[i + 0 /* PropOffset */], value, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added in case a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = addOrUpdateStaticStyle(null, initialValuesToLookup, propName, entryIsClassBased ? false : null, directiveIndex) +\n                    1 /* ValueOffset */;\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[2 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[5 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            detectedIndex = directiveRefs.length;\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            allocateDirectiveIntoContext(context, directiveRef);\n            directiveRefs[detectedIndex + 1 /* SinglePropValuesIndexOffset */] =\n                nextOffsetInsertionIndex;\n            directiveRefs[detectedIndex + 3 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi styling (`[style]` and `[class]`) values to the context.\n     *\n     * This function will iterate over the provided `classesInput` and `stylesInput` map\n     * values and insert/update or remove them from the context at exactly the right\n     * spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        classesInput = classesInput || null;\n        stylesInput = stylesInput || null;\n        var ignoreAllClassUpdates = isMultiValueCacheHit(context, true, directiveIndex, classesInput);\n        var ignoreAllStyleUpdates = isMultiValueCacheHit(context, false, directiveIndex, stylesInput);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        classesInput =\n            classesInput === NO_CHANGE ? readCachedMapValue(context, true, directiveIndex) : classesInput;\n        stylesInput =\n            stylesInput === NO_CHANGE ? readCachedMapValue(context, false, directiveIndex) : stylesInput;\n        var element = context[0 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput['value'] : stylesInput;\n        var classNames = EMPTY_ARRAY;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY;\n            }\n        }\n        var multiStylesStartIndex = getMultiStylesStartIndex(context);\n        var multiClassesStartIndex = getMultiClassesStartIndex(context);\n        var multiClassesEndIndex = context.length;\n        if (!ignoreAllStyleUpdates) {\n            var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY;\n            var styles = stylesValue || EMPTY_OBJ;\n            var totalNewEntries = patchStylingMapIntoContext(context, directiveIndex, stylesPlayerBuilderIndex, multiStylesStartIndex, multiClassesStartIndex, styleProps, styles, stylesInput, false);\n            if (totalNewEntries) {\n                multiClassesStartIndex += totalNewEntries * 4 /* Size */;\n                multiClassesEndIndex += totalNewEntries * 4 /* Size */;\n            }\n        }\n        if (!ignoreAllClassUpdates) {\n            var classes = (classesValue || EMPTY_OBJ);\n            patchStylingMapIntoContext(context, directiveIndex, classesPlayerBuilderIndex, multiClassesStartIndex, multiClassesEndIndex, classNames, applyAllClasses || classes, classesInput, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit in case a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value in case it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values in case earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, true, directiveRef, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, false, directiveRef, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveRef, forceOverride) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[0 /* ElementPosition */];\n            var multiStartIndex = getMultiStylesStartIndex(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it in case there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!valueExists(valueToApply, isClassBased)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directiveRef) {\n        var directiveIndex;\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = getDirectiveRegistryValuesIndexOf(dirs, directiveRef);\n        if (index === -1) {\n            // if the directive was not allocated then this means that styling is\n            // being applied in a dynamic way AFTER the element was already instantiated\n            index = dirs.length;\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n            dirs.push(null, null, null, null);\n            dirs[index + 0 /* DirectiveValueOffset */] = directiveRef;\n            dirs[index + 2 /* DirtyFlagOffset */] = false;\n            dirs[index + 1 /* SinglePropValuesIndexOffset */] = -1;\n            var classesStartIndex = getMultiClassesStartIndex(context) || 9 /* SingleStylesStartPosition */;\n            registerMultiMapEntry(context, directiveIndex, true, context.length);\n            registerMultiMapEntry(context, directiveIndex, false, classesStartIndex);\n        }\n        else {\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n        }\n        return directiveIndex;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 3 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced in case an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value in case it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* CachedStringValuePosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 3 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* CachedStringValuePosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* CachedStringValuePosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 3 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* CachedStringValuePosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces in case they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n    /**\n     * Inserts or updates an existing entry in the provided `staticStyles` collection.\n     *\n     * @param index the index representing an existing styling entry in the collection:\n     *  if provided (numeric): then it will update the existing entry at the given position\n     *  if null: then it will insert a new entry within the collection\n     * @param staticStyles a collection of style or class entries where the value will\n     *  be inserted or patched\n     * @param prop the property value of the entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     * @returns the index of the updated or new entry within the collection\n     */\n    function addOrUpdateStaticStyle(index, staticStyles, prop, value, directiveOwnerIndex) {\n        if (index === null) {\n            index = staticStyles.length;\n            staticStyles.push(null, null, null);\n            staticStyles[index + 0 /* PropOffset */] = prop;\n        }\n        staticStyles[index + 1 /* ValueOffset */] = value;\n        staticStyles[index + 2 /* DirectiveOwnerOffset */] = directiveOwnerIndex;\n        return index;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * =========================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes\n     * =========================================================================================\n     * Inline + Projection     | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO\n     * =========================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching projection selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be\n     * compared to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingProjectionSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                        setActiveHost(hostCtx, currentElementIndex);\n                        instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        setActiveHost(null);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        if (attrs) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            setNodeStylingTemplate(tView, tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Appropriately sets `stylingTemplate` on a TNode\n     *\n     * Does not apply styles to DOM nodes\n     *\n     * @param tNode The node whose `stylingTemplate` to set\n     * @param attrs The attribute array source to set the attributes from\n     * @param attrsStartIndex Optional start index to start processing the `attrs` from\n     */\n    function setNodeStylingTemplate(tView, tNode, attrs, attrsStartIndex) {\n        if (tView.firstTemplatePass && !tNode.stylingTemplate) {\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, attrsStartIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                tNode.stylingTemplate = initializeStaticContext(attrs, stylingAttrsStartIndex);\n            }\n        }\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        var renderer = lView[RENDERER];\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        var initialStylesIndex = 0;\n        var initialClassesIndex = 0;\n        if (attrs) {\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the styling\n            // template is first allocated (which happens when the very first style/class binding\n            // value is evaluated). When the template is allocated (when it turns into a context)\n            // then the styling template is locked and cannot be further extended (it can only be\n            // instantiated into a context per element)\n            setNodeStylingTemplate(tView, tNode, attrs, lastAttrIndex);\n            if (tNode.stylingTemplate) {\n                // the initial style/class values are rendered immediately after having been\n                // initialized into the context so the element styling is ready when directives\n                // are initialized (since they may read style/class values in their constructor)\n                initialStylesIndex = renderInitialStyles(native, tNode.stylingTemplate, renderer);\n                initialClassesIndex = renderInitialClasses(native, tNode.stylingTemplate, renderer);\n            }\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // we render the styling again below in case any directives have set any `style` and/or\n        // `class` host attribute values...\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, renderer, initialClassesIndex);\n            renderInitialStyles(native, tNode.stylingTemplate, renderer, initialStylesIndex);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n     * in the component's renderer. Normally all host listeners are evaluated with the\n     * parent component's renderer, but, in the case of animation @triggers, they need\n     * to be evaluated with the sub component's renderer (because that's where the\n     * animation triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `listener`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function componentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                lCleanup.push(listenerFn);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Flushes all the lifecycle hooks for directives up until (and excluding) that node index\n     *\n     * @param index The index of the element in the `LView`\n     */\n    function flushHooksUpTo(index) {\n        var lView = getLView();\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     */\n    function elementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name, namespace) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element_1, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element_1.setAttributeNS(namespace, name, strValue) :\n                        element_1.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Stores debugging data for this property binding on first template pass.\n     * This enables features like DebugElement.properties.\n     */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n        };\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(attrs) {\n        var tNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var native = getNativeByTNode(tNode, lView);\n        var lastAttrIndex = setUpAttributes(native, attrs);\n        var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n        if (stylingAttrsStartIndex >= 0) {\n            var directive = getActiveHostContext();\n            if (tNode.stylingTemplate) {\n                patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, stylingAttrsStartIndex, directive);\n            }\n            else {\n                tNode.stylingTemplate =\n                    initializeStaticContext(attrs, stylingAttrsStartIndex, directive);\n            }\n        }\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, renderStringify(value)) :\n                element_2.textContent = renderStringify(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        setActiveHost(directive, elementIndex);\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setActiveHost(null);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        var lContainer = [\n            hostNative,\n            true,\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            [],\n            native,\n        ];\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Reporting a TContainer node queries is a 2-step process as we need to:\n     * - check if the container node itself is matching (query might match a <ng-template> node);\n     * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n     * container.\n     *\n     * Those 2 operations need to happen in the specific order (match the container node itself, then\n     * prepare space for nodes from views).\n     */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            queries.addNode(tContainerNode);\n            var lContainer = lView[tContainerNode.index];\n            lContainer[QUERIES] = queries.container();\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttachedToChangeDetector(hostView) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ?\n                    matchingProjectionSelectorIndex(componentChild, selectors, textSelectors) :\n                    0;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[bucketIndex] = componentChild;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            try {\n                var result = listenerFn(e);\n                if (wrapWithPreventDefault && result === false) {\n                    e.preventDefault();\n                    // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                    e.returnValue = false;\n                }\n                return result;\n            }\n            catch (error) {\n                handleError(lView, error);\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            resetPreOrderHookFlags(hostView);\n            namespaceHTML();\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n\n    /*\n     * The contents of this file include the instructions for all styling-related\n     * operations in Angular.\n     *\n     * The instructions present in this file are:\n     *\n     * Template level styling instructions:\n     * - elementStyling\n     * - elementStylingMap\n     * - elementStyleProp\n     * - elementClassProp\n     * - elementStylingApply\n     *\n     * Host bindings level styling instructions:\n     * - elementHostStyling\n     * - elementHostStylingMap\n     * - elementHostStyleProp\n     * - elementHostClassProp\n     * - elementHostStylingApply\n     */\n    /**\n     * Allocates style and class binding properties on the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note that this is only used\n     * for binding values (see `elementStart` to learn how to assign static styling\n     * values to an element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        // calling the function below ensures that the template's binding values\n        // are applied as the first set of bindings into the context. If any other\n        // styling bindings are set on the same element (by directives and/or\n        // components) then they will be applied at the end of the `elementEnd`\n        // instruction (because directives are created first before styling is\n        // executed for a new element).\n        initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, null);\n    }\n    /**\n     * Allocates style and class binding properties on the host element during creation mode\n     * within the host bindings function of a directive or component.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class host bindings on the host element of a directive or\n     * component. Note that this is only used for binding values (see `elementHostAttrs`\n     * to learn how to assign static styling values to the host element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementHostClassProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementHostStyleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the provided `directive` and\n     *        will not be used if the same property is assigned in another directive or\n     *        on the element directly.\n     *\n     * @publicApi\n     */\n    function elementHostStyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        var directive = getActiveHostContext();\n        // despite the binding being applied in a queue (below), the allocation\n        // of the directive into the context happens right away. The reason for\n        // this is to retain the ordering of the directives (which is important\n        // for the prioritization of bindings).\n        allocateDirectiveIntoContext(tNode.stylingTemplate, directive);\n        var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n        fns.push(function () { return initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive); });\n    }\n    function initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStylingMap` or any static styles that are\n     * present from when the element was created with `elementStyling`).\n     *\n     * Note that the styling element is updated as part of `elementStylingApply`.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStyling`.\n     * @param value New value to write (falsy to remove). Note that if a directive also\n     *        attempts to write to the same binding value (via `elementHostStyleProp`)\n     *        then it will only be able to do so if the binding value assigned via\n     *        `elementStyleProp` is falsy (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, forceOverride) {\n        elementStylePropInternal(null, index, styleIndex, value, suffix, forceOverride);\n    }\n    /**\n     * Update a host style binding value on the host element within a component/directive.\n     *\n     * If the style value is falsy then it will be removed from the host element\n     * (or assigned a different value depending if there are any styles placed\n     * on the same element with `elementHostStylingMap` or any static styles that\n     * are present from when the element was patched with `elementHostStyling`).\n     *\n     * Note that the styling applied to the host element once\n     * `elementHostStylingApply` is called.\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementHostStyling`.\n     * @param value New value to write (falsy to remove). The value may or may not\n     *        be applied to the element depending on the template/component/directive\n     *        prioritization (see `interfaces/styling.ts`)\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * @publicApi\n     */\n    function elementHostStyleProp(styleIndex, value, suffix, forceOverride) {\n        elementStylePropInternal(getActiveHostContext(), getActiveHostElementIndex(), styleIndex, value, suffix, forceOverride);\n    }\n    function elementStylePropInternal(directive, index, styleIndex, value, suffix, forceOverride) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive, forceOverride);\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `elementStyling` within the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStyling` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the styling priority structure.\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, forceOverride) {\n        elementClassPropInternal(null, index, classIndex, value, forceOverride);\n    }\n    /**\n     * Update a class host binding for a directive's/component's host element within\n     * the host bindings function.\n     *\n     * This instruction is meant to handle the `@HostBinding('class.foo')` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `elementHostStyling` within the creation block.\n     *\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementHostStlying` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the stylings priority structure.\n     *\n     * @publicApi\n     */\n    function elementHostClassProp(classIndex, value, forceOverride) {\n        elementClassPropInternal(getActiveHostContext(), getActiveHostElementIndex(), classIndex, value, forceOverride);\n    }\n    function elementClassPropInternal(directive, index, classIndex, value, forceOverride) {\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, input, directive, forceOverride);\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style and/or class bindings using object literals on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles/classes are applied to the element they will then be updated with\n     * respect to any styles/classes set with `elementStyleProp` or `elementClassProp`. If any\n     * styles or classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `elementStylingApply` is called.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles) {\n        elementStylingMapInternal(null, index, classes, styles);\n    }\n    /**\n     * Update style and/or class host bindings using object literals on an element within the host\n     * bindings function for a directive/component.\n     *\n     * This instruction is meant to apply styling via the `@HostBinding('style')` and\n     * `@HostBinding('class')` bindings for a component's or directive's host element.\n     * When styles/classes are applied to the host element they will then be updated\n     * with respect to any styles/classes set with `elementHostStyleProp` or\n     * `elementHostClassProp`. If any styles or classes are set to falsy then they\n     * will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until\n     * `elementHostStylingApply` is called.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * @publicApi\n     */\n    function elementHostStylingMap(classes, styles) {\n        elementStylingMapInternal(getActiveHostContext(), getActiveHostElementIndex(), classes, styles);\n    }\n    function elementStylingMapInternal(directive, index, classes, styles) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directive) {\n            if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n                var initialClasses = getInitialClassNameValue(stylingContext);\n                var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n                setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n                classes = NO_CHANGE;\n            }\n            if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n                var initialStyles = getInitialClassNameValue(stylingContext);\n                var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n                setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n                styles = NO_CHANGE;\n            }\n        }\n        updateStylingMap(stylingContext, classes, styles, directive);\n    }\n    /**\n     * Apply all style and class binding values to the element.\n     *\n     * This instruction is meant to be run after `elementStylingMap`, `elementStyleProp`\n     * or `elementClassProp` instructions have been run and will only apply styling to\n     * the element if any styling bindings have been updated.\n     *\n     * @param index Index of the element's with which styling is associated.\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index) {\n        elementStylingApplyInternal(null, index);\n    }\n    /**\n     * Apply all style and class host binding values to the element.\n     *\n     * This instruction is meant to be run after `elementHostStylingMap`,\n     * `elementHostStyleProp` or `elementHostClassProp` instructions have\n     * been run and will only apply styling to the host element if any\n     * styling bindings have been updated.\n     *\n     * @publicApi\n     */\n    function elementHostStylingApply() {\n        elementStylingApplyInternal(getActiveHostContext(), getActiveHostElementIndex());\n    }\n    function elementStylingApplyInternal(directive, index) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function () {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                var prevViewQuery_1 = definition.viewQuery;\n                var superViewQuery_1 = superDef.viewQuery;\n                if (superViewQuery_1) {\n                    if (prevViewQuery_1) {\n                        definition.viewQuery = function (rf, ctx) {\n                            superViewQuery_1(rf, ctx);\n                            prevViewQuery_1(rf, ctx);\n                        };\n                    }\n                    else {\n                        definition.viewQuery = superViewQuery_1;\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (rf, ctx, directiveIndex) {\n                            superContentQueries_1(rf, ctx, directiveIndex);\n                            prevContentQueries_1(rf, ctx, directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        NgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            _loop_1();\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            if (source === void 0) { source = null; }\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (def instanceof Array ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container) {\n                        insertView(lView, container, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.9+44.sha-9eb8274.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        // We determine whether a class has its own metadata by taking the metadata from the parent\n        // constructor and checking whether it's the same as the subclass metadata below. We can't use\n        // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n        // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n        var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n        var parentConstructor = parentPrototype && parentPrototype.constructor;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined &&\n                (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined &&\n                (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The results tree to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = depthFirstFlatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function depthFirstFlatten(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? depthFirstFlatten(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            add(this.shallow, tNode);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     */\n    function staticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = viewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function viewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n    * Loads current View Query and moves the pointer/index to the next View Query in LView.\n    */\n    function loadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return load(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function contentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function staticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = contentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    function loadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf$1,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵcomponentHostSyntheticListener': componentHostSyntheticListener,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵviewQuery': viewQuery,\n        'ɵstaticViewQuery': staticViewQuery,\n        'ɵstaticContentQuery': staticContentQuery,\n        'ɵloadViewQuery': loadViewQuery,\n        'ɵcontentQuery': contentQuery,\n        'ɵloadContentQuery': loadContentQuery,\n        'ɵreference': reference,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵelementClassProp': elementClassProp,\n        'ɵelementHostStyling': elementHostStyling,\n        'ɵelementHostStylingMap': elementHostStylingMap,\n        'ɵelementHostStyleProp': elementHostStyleProp,\n        'ɵelementHostStylingApply': elementHostStylingApply,\n        'ɵelementHostClassProp': elementHostClassProp,\n        'ɵflushHooksUpTo': flushHooksUpTo,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsetComponentScope': setComponentScope,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$3, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$3, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$3, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$3,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports), resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(verifyDeclarationIsUnique);\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(renderStringify(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$3);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.template.ngPrivateData = undefined;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + renderStringify(type) + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', renderStringify(type), templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan =\n                        compiler.createParseSourceSpan('Directive', renderStringify(type), sourceMapUrl);\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        typeArgumentCount: 0,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the `Input` and `Output` decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0] || name;\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                return __assign({}, properties, hostProperties);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf$1;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵsetComponentScope = setComponentScope;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵviewQuery = viewQuery;\n    exports.ɵstaticViewQuery = staticViewQuery;\n    exports.ɵstaticContentQuery = staticContentQuery;\n    exports.ɵloadViewQuery = loadViewQuery;\n    exports.ɵcontentQuery = contentQuery;\n    exports.ɵloadContentQuery = loadContentQuery;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵcomponentHostSyntheticListener = componentHostSyntheticListener;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementHostStyling = elementHostStyling;\n    exports.ɵelementHostStylingMap = elementHostStylingMap;\n    exports.ɵelementHostStyleProp = elementHostStyleProp;\n    exports.ɵelementHostClassProp = elementHostClassProp;\n    exports.ɵelementHostStylingApply = elementHostStylingApply;\n    exports.ɵflushHooksUpTo = flushHooksUpTo;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵdefaultStyleSanitizer = defaultStyleSanitizer;\n    exports.ɵsanitizeScript = sanitizeScript;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}